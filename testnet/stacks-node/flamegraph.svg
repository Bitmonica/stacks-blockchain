<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1622" onload="init(evt)" viewBox="0 0 1200 1622" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1622" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1605.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1605.00"> </text><svg id="frames" x="10" width="1180" total_samples="815"><g><title>blockstack_lib::chainstate::stacks::db::transactions::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::check_transaction_nonces (1 samples, 0.12%)</title><rect x="0.0000%" y="1221" width="0.1227%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1231.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::accounts::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::get_account (1 samples, 0.12%)</title><rect x="0.0000%" y="1205" width="0.1227%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1215.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityConnection::with_clarity_db_readonly (1 samples, 0.12%)</title><rect x="0.0000%" y="1189" width="0.1227%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1199.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection as blockstack_lib::clarity_vm::clarity::ClarityConnection&gt;::with_clarity_db_readonly_owned (1 samples, 0.12%)</title><rect x="0.0000%" y="1173" width="0.1227%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1183.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection as blockstack_lib::clarity_vm::clarity::ClarityConnection&gt;::with_clarity_db_readonly_owned::{{closure}} (1 samples, 0.12%)</title><rect x="0.0000%" y="1157" width="0.1227%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1167.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityConnection::with_clarity_db_readonly::{{closure}} (1 samples, 0.12%)</title><rect x="0.0000%" y="1141" width="0.1227%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1151.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::accounts::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::get_account::{{closure}} (1 samples, 0.12%)</title><rect x="0.0000%" y="1125" width="0.1227%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1135.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get_account_nonce (1 samples, 0.12%)</title><rect x="0.0000%" y="1109" width="0.1227%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1119.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get (1 samples, 0.12%)</title><rect x="0.0000%" y="1093" width="0.1227%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1103.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get (1 samples, 0.12%)</title><rect x="0.0000%" y="1077" width="0.1227%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.12%)</title><rect x="0.0000%" y="1061" width="0.1227%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1071.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get::{{closure}} (1 samples, 0.12%)</title><rect x="0.0000%" y="1045" width="0.1227%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1055.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::get (1 samples, 0.12%)</title><rect x="0.0000%" y="1029" width="0.1227%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1039.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get (1 samples, 0.12%)</title><rect x="0.0000%" y="1013" width="0.1227%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1023.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt; as blockstack_lib::chainstate::stacks::index::marf::MarfConnection&lt;T&gt;&gt;::with_conn (1 samples, 0.12%)</title><rect x="0.0000%" y="997" width="0.1227%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1007.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get::{{closure}} (1 samples, 0.12%)</title><rect x="0.0000%" y="981" width="0.1227%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="991.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_by_key (1 samples, 0.12%)</title><rect x="0.0000%" y="965" width="0.1227%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="1"/><text x="0.2500%" y="975.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_path (1 samples, 0.12%)</title><rect x="0.0000%" y="949" width="0.1227%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="1"/><text x="0.2500%" y="959.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk (1 samples, 0.12%)</title><rect x="0.0000%" y="933" width="0.1227%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="943.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_backptr (1 samples, 0.12%)</title><rect x="0.0000%" y="917" width="0.1227%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="1"/><text x="0.2500%" y="927.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_backptr (1 samples, 0.12%)</title><rect x="0.0000%" y="901" width="0.1227%" height="15" fill="rgb(249,33,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="911.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (1 samples, 0.12%)</title><rect x="0.0000%" y="885" width="0.1227%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="1"/><text x="0.2500%" y="895.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (1 samples, 0.12%)</title><rect x="0.0000%" y="869" width="0.1227%" height="15" fill="rgb(221,5,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="879.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (1 samples, 0.12%)</title><rect x="0.0000%" y="853" width="0.1227%" height="15" fill="rgb(247,18,42)" fg:x="0" fg:w="1"/><text x="0.2500%" y="863.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (1 samples, 0.12%)</title><rect x="0.0000%" y="837" width="0.1227%" height="15" fill="rgb(241,131,45)" fg:x="0" fg:w="1"/><text x="0.2500%" y="847.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (1 samples, 0.12%)</title><rect x="0.0000%" y="821" width="0.1227%" height="15" fill="rgb(249,31,29)" fg:x="0" fg:w="1"/><text x="0.2500%" y="831.50"></text></g><g><title>std::io::Read::read_exact (1 samples, 0.12%)</title><rect x="0.0000%" y="805" width="0.1227%" height="15" fill="rgb(225,111,53)" fg:x="0" fg:w="1"/><text x="0.2500%" y="815.50"></text></g><g><title>std::io::default_read_exact (1 samples, 0.12%)</title><rect x="0.0000%" y="789" width="0.1227%" height="15" fill="rgb(238,160,17)" fg:x="0" fg:w="1"/><text x="0.2500%" y="799.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="0.0000%" y="773" width="0.1227%" height="15" fill="rgb(214,148,48)" fg:x="0" fg:w="1"/><text x="0.2500%" y="783.50"></text></g><g><title>sqlite3_blob_read (1 samples, 0.12%)</title><rect x="0.0000%" y="757" width="0.1227%" height="15" fill="rgb(232,36,49)" fg:x="0" fg:w="1"/><text x="0.2500%" y="767.50"></text></g><g><title>blobReadWrite (1 samples, 0.12%)</title><rect x="0.0000%" y="741" width="0.1227%" height="15" fill="rgb(209,103,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="751.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="0.0000%" y="725" width="0.1227%" height="15" fill="rgb(229,88,8)" fg:x="0" fg:w="1"/><text x="0.2500%" y="735.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="0.0000%" y="709" width="0.1227%" height="15" fill="rgb(213,181,19)" fg:x="0" fg:w="1"/><text x="0.2500%" y="719.50"></text></g><g><title>accessPayload (1 samples, 0.12%)</title><rect x="0.0000%" y="693" width="0.1227%" height="15" fill="rgb(254,191,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="703.50"></text></g><g><title>getOverflowPage (1 samples, 0.12%)</title><rect x="0.0000%" y="677" width="0.1227%" height="15" fill="rgb(241,83,37)" fg:x="0" fg:w="1"/><text x="0.2500%" y="687.50"></text></g><g><title>btreeGetPage (1 samples, 0.12%)</title><rect x="0.0000%" y="661" width="0.1227%" height="15" fill="rgb(233,36,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="671.50"></text></g><g><title>sqlite3PagerGet (1 samples, 0.12%)</title><rect x="0.0000%" y="645" width="0.1227%" height="15" fill="rgb(226,3,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="655.50"></text></g><g><title>getPageMMap (1 samples, 0.12%)</title><rect x="0.0000%" y="629" width="0.1227%" height="15" fill="rgb(245,192,40)" fg:x="0" fg:w="1"/><text x="0.2500%" y="639.50"></text></g><g><title>getPageNormal (1 samples, 0.12%)</title><rect x="0.0000%" y="613" width="0.1227%" height="15" fill="rgb(238,167,29)" fg:x="0" fg:w="1"/><text x="0.2500%" y="623.50"></text></g><g><title>readDbPage (1 samples, 0.12%)</title><rect x="0.0000%" y="597" width="0.1227%" height="15" fill="rgb(232,182,51)" fg:x="0" fg:w="1"/><text x="0.2500%" y="607.50"></text></g><g><title>sqlite3OsRead (1 samples, 0.12%)</title><rect x="0.0000%" y="581" width="0.1227%" height="15" fill="rgb(231,60,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="591.50"></text></g><g><title>unixRead (1 samples, 0.12%)</title><rect x="0.0000%" y="565" width="0.1227%" height="15" fill="rgb(208,69,12)" fg:x="0" fg:w="1"/><text x="0.2500%" y="575.50"></text></g><g><title>seekAndRead (1 samples, 0.12%)</title><rect x="0.0000%" y="549" width="0.1227%" height="15" fill="rgb(235,93,37)" fg:x="0" fg:w="1"/><text x="0.2500%" y="559.50"></text></g><g><title>__lseek64 (1 samples, 0.12%)</title><rect x="0.0000%" y="533" width="0.1227%" height="15" fill="rgb(213,116,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="543.50"></text></g><g><title>__libc_start_main (3 samples, 0.37%)</title><rect x="0.0000%" y="1541" width="0.3681%" height="15" fill="rgb(222,207,29)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1551.50"></text></g><g><title>main (3 samples, 0.37%)</title><rect x="0.0000%" y="1525" width="0.3681%" height="15" fill="rgb(206,96,30)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1535.50"></text></g><g><title>std::rt::lang_start_internal (3 samples, 0.37%)</title><rect x="0.0000%" y="1509" width="0.3681%" height="15" fill="rgb(218,138,4)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1519.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.37%)</title><rect x="0.0000%" y="1493" width="0.3681%" height="15" fill="rgb(250,191,14)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1503.50"></text></g><g><title>std::panicking::try (3 samples, 0.37%)</title><rect x="0.0000%" y="1477" width="0.3681%" height="15" fill="rgb(239,60,40)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1487.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.37%)</title><rect x="0.0000%" y="1461" width="0.3681%" height="15" fill="rgb(206,27,48)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1471.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (3 samples, 0.37%)</title><rect x="0.0000%" y="1445" width="0.3681%" height="15" fill="rgb(225,35,8)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1455.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.37%)</title><rect x="0.0000%" y="1429" width="0.3681%" height="15" fill="rgb(250,213,24)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1439.50"></text></g><g><title>std::panicking::try (3 samples, 0.37%)</title><rect x="0.0000%" y="1413" width="0.3681%" height="15" fill="rgb(247,123,22)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1423.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.37%)</title><rect x="0.0000%" y="1397" width="0.3681%" height="15" fill="rgb(231,138,38)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1407.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (3 samples, 0.37%)</title><rect x="0.0000%" y="1381" width="0.3681%" height="15" fill="rgb(231,145,46)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1391.50"></text></g><g><title>std::rt::lang_start::{{closure}} (3 samples, 0.37%)</title><rect x="0.0000%" y="1365" width="0.3681%" height="15" fill="rgb(251,118,11)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1375.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.37%)</title><rect x="0.0000%" y="1349" width="0.3681%" height="15" fill="rgb(217,147,25)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1359.50"></text></g><g><title>core::ops::function::FnOnce::call_once (3 samples, 0.37%)</title><rect x="0.0000%" y="1333" width="0.3681%" height="15" fill="rgb(247,81,37)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1343.50"></text></g><g><title>mempool_analyzer::main (3 samples, 0.37%)</title><rect x="0.0000%" y="1317" width="0.3681%" height="15" fill="rgb(209,12,38)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1327.50"></text></g><g><title>blockstack_lib::chainstate::stacks::miner::&lt;impl blockstack_lib::chainstate::stacks::StacksBlockBuilder&gt;::build_anchored_block (3 samples, 0.37%)</title><rect x="0.0000%" y="1301" width="0.3681%" height="15" fill="rgb(227,1,9)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1311.50"></text></g><g><title>blockstack_lib::core::mempool::MemPoolDB::iterate_candidates (3 samples, 0.37%)</title><rect x="0.0000%" y="1285" width="0.3681%" height="15" fill="rgb(248,47,43)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1295.50"></text></g><g><title>blockstack_lib::chainstate::stacks::miner::&lt;impl blockstack_lib::chainstate::stacks::StacksBlockBuilder&gt;::build_anchored_block::{{closure}} (3 samples, 0.37%)</title><rect x="0.0000%" y="1269" width="0.3681%" height="15" fill="rgb(221,10,30)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1279.50"></text></g><g><title>blockstack_lib::chainstate::stacks::miner::&lt;impl blockstack_lib::chainstate::stacks::StacksBlockBuilder&gt;::try_mine_tx_with_len (3 samples, 0.37%)</title><rect x="0.0000%" y="1253" width="0.3681%" height="15" fill="rgb(210,229,1)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1263.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::transactions::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::process_transaction (3 samples, 0.37%)</title><rect x="0.0000%" y="1237" width="0.3681%" height="15" fill="rgb(222,148,37)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1247.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::transactions::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::get_payer_account (2 samples, 0.25%)</title><rect x="0.1227%" y="1221" width="0.2454%" height="15" fill="rgb(234,67,33)" fg:x="1" fg:w="2"/><text x="0.3727%" y="1231.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::accounts::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::get_account (2 samples, 0.25%)</title><rect x="0.1227%" y="1205" width="0.2454%" height="15" fill="rgb(247,98,35)" fg:x="1" fg:w="2"/><text x="0.3727%" y="1215.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityConnection::with_clarity_db_readonly (2 samples, 0.25%)</title><rect x="0.1227%" y="1189" width="0.2454%" height="15" fill="rgb(247,138,52)" fg:x="1" fg:w="2"/><text x="0.3727%" y="1199.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection as blockstack_lib::clarity_vm::clarity::ClarityConnection&gt;::with_clarity_db_readonly_owned (2 samples, 0.25%)</title><rect x="0.1227%" y="1173" width="0.2454%" height="15" fill="rgb(213,79,30)" fg:x="1" fg:w="2"/><text x="0.3727%" y="1183.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection as blockstack_lib::clarity_vm::clarity::ClarityConnection&gt;::with_clarity_db_readonly_owned::{{closure}} (2 samples, 0.25%)</title><rect x="0.1227%" y="1157" width="0.2454%" height="15" fill="rgb(246,177,23)" fg:x="1" fg:w="2"/><text x="0.3727%" y="1167.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityConnection::with_clarity_db_readonly::{{closure}} (2 samples, 0.25%)</title><rect x="0.1227%" y="1141" width="0.2454%" height="15" fill="rgb(230,62,27)" fg:x="1" fg:w="2"/><text x="0.3727%" y="1151.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::accounts::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::get_account::{{closure}} (2 samples, 0.25%)</title><rect x="0.1227%" y="1125" width="0.2454%" height="15" fill="rgb(216,154,8)" fg:x="1" fg:w="2"/><text x="0.3727%" y="1135.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get_account_nonce (2 samples, 0.25%)</title><rect x="0.1227%" y="1109" width="0.2454%" height="15" fill="rgb(244,35,45)" fg:x="1" fg:w="2"/><text x="0.3727%" y="1119.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get (2 samples, 0.25%)</title><rect x="0.1227%" y="1093" width="0.2454%" height="15" fill="rgb(251,115,12)" fg:x="1" fg:w="2"/><text x="0.3727%" y="1103.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get (2 samples, 0.25%)</title><rect x="0.1227%" y="1077" width="0.2454%" height="15" fill="rgb(240,54,50)" fg:x="1" fg:w="2"/><text x="0.3727%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (2 samples, 0.25%)</title><rect x="0.1227%" y="1061" width="0.2454%" height="15" fill="rgb(233,84,52)" fg:x="1" fg:w="2"/><text x="0.3727%" y="1071.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get::{{closure}} (2 samples, 0.25%)</title><rect x="0.1227%" y="1045" width="0.2454%" height="15" fill="rgb(207,117,47)" fg:x="1" fg:w="2"/><text x="0.3727%" y="1055.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::get (2 samples, 0.25%)</title><rect x="0.1227%" y="1029" width="0.2454%" height="15" fill="rgb(249,43,39)" fg:x="1" fg:w="2"/><text x="0.3727%" y="1039.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get (2 samples, 0.25%)</title><rect x="0.1227%" y="1013" width="0.2454%" height="15" fill="rgb(209,38,44)" fg:x="1" fg:w="2"/><text x="0.3727%" y="1023.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt; as blockstack_lib::chainstate::stacks::index::marf::MarfConnection&lt;T&gt;&gt;::with_conn (2 samples, 0.25%)</title><rect x="0.1227%" y="997" width="0.2454%" height="15" fill="rgb(236,212,23)" fg:x="1" fg:w="2"/><text x="0.3727%" y="1007.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get::{{closure}} (2 samples, 0.25%)</title><rect x="0.1227%" y="981" width="0.2454%" height="15" fill="rgb(242,79,21)" fg:x="1" fg:w="2"/><text x="0.3727%" y="991.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_by_key (2 samples, 0.25%)</title><rect x="0.1227%" y="965" width="0.2454%" height="15" fill="rgb(211,96,35)" fg:x="1" fg:w="2"/><text x="0.3727%" y="975.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_path (2 samples, 0.25%)</title><rect x="0.1227%" y="949" width="0.2454%" height="15" fill="rgb(253,215,40)" fg:x="1" fg:w="2"/><text x="0.3727%" y="959.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk (2 samples, 0.25%)</title><rect x="0.1227%" y="933" width="0.2454%" height="15" fill="rgb(211,81,21)" fg:x="1" fg:w="2"/><text x="0.3727%" y="943.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_backptr (2 samples, 0.25%)</title><rect x="0.1227%" y="917" width="0.2454%" height="15" fill="rgb(208,190,38)" fg:x="1" fg:w="2"/><text x="0.3727%" y="927.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_backptr (2 samples, 0.25%)</title><rect x="0.1227%" y="901" width="0.2454%" height="15" fill="rgb(235,213,38)" fg:x="1" fg:w="2"/><text x="0.3727%" y="911.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (2 samples, 0.25%)</title><rect x="0.1227%" y="885" width="0.2454%" height="15" fill="rgb(237,122,38)" fg:x="1" fg:w="2"/><text x="0.3727%" y="895.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (2 samples, 0.25%)</title><rect x="0.1227%" y="869" width="0.2454%" height="15" fill="rgb(244,218,35)" fg:x="1" fg:w="2"/><text x="0.3727%" y="879.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (2 samples, 0.25%)</title><rect x="0.1227%" y="853" width="0.2454%" height="15" fill="rgb(240,68,47)" fg:x="1" fg:w="2"/><text x="0.3727%" y="863.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (2 samples, 0.25%)</title><rect x="0.1227%" y="837" width="0.2454%" height="15" fill="rgb(210,16,53)" fg:x="1" fg:w="2"/><text x="0.3727%" y="847.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (2 samples, 0.25%)</title><rect x="0.1227%" y="821" width="0.2454%" height="15" fill="rgb(235,124,12)" fg:x="1" fg:w="2"/><text x="0.3727%" y="831.50"></text></g><g><title>std::io::Read::read_exact (2 samples, 0.25%)</title><rect x="0.1227%" y="805" width="0.2454%" height="15" fill="rgb(224,169,11)" fg:x="1" fg:w="2"/><text x="0.3727%" y="815.50"></text></g><g><title>std::io::default_read_exact (2 samples, 0.25%)</title><rect x="0.1227%" y="789" width="0.2454%" height="15" fill="rgb(250,166,2)" fg:x="1" fg:w="2"/><text x="0.3727%" y="799.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (2 samples, 0.25%)</title><rect x="0.1227%" y="773" width="0.2454%" height="15" fill="rgb(242,216,29)" fg:x="1" fg:w="2"/><text x="0.3727%" y="783.50"></text></g><g><title>sqlite3_blob_read (2 samples, 0.25%)</title><rect x="0.1227%" y="757" width="0.2454%" height="15" fill="rgb(230,116,27)" fg:x="1" fg:w="2"/><text x="0.3727%" y="767.50"></text></g><g><title>blobReadWrite (2 samples, 0.25%)</title><rect x="0.1227%" y="741" width="0.2454%" height="15" fill="rgb(228,99,48)" fg:x="1" fg:w="2"/><text x="0.3727%" y="751.50"></text></g><g><title>sqlite3BtreePayloadChecked (2 samples, 0.25%)</title><rect x="0.1227%" y="725" width="0.2454%" height="15" fill="rgb(253,11,6)" fg:x="1" fg:w="2"/><text x="0.3727%" y="735.50"></text></g><g><title>sqlite3BtreePayloadChecked (2 samples, 0.25%)</title><rect x="0.1227%" y="709" width="0.2454%" height="15" fill="rgb(247,143,39)" fg:x="1" fg:w="2"/><text x="0.3727%" y="719.50"></text></g><g><title>accessPayload (2 samples, 0.25%)</title><rect x="0.1227%" y="693" width="0.2454%" height="15" fill="rgb(236,97,10)" fg:x="1" fg:w="2"/><text x="0.3727%" y="703.50"></text></g><g><title>getOverflowPage (2 samples, 0.25%)</title><rect x="0.1227%" y="677" width="0.2454%" height="15" fill="rgb(233,208,19)" fg:x="1" fg:w="2"/><text x="0.3727%" y="687.50"></text></g><g><title>btreeGetPage (2 samples, 0.25%)</title><rect x="0.1227%" y="661" width="0.2454%" height="15" fill="rgb(216,164,2)" fg:x="1" fg:w="2"/><text x="0.3727%" y="671.50"></text></g><g><title>sqlite3PagerGet (2 samples, 0.25%)</title><rect x="0.1227%" y="645" width="0.2454%" height="15" fill="rgb(220,129,5)" fg:x="1" fg:w="2"/><text x="0.3727%" y="655.50"></text></g><g><title>getPageMMap (2 samples, 0.25%)</title><rect x="0.1227%" y="629" width="0.2454%" height="15" fill="rgb(242,17,10)" fg:x="1" fg:w="2"/><text x="0.3727%" y="639.50"></text></g><g><title>getPageNormal (2 samples, 0.25%)</title><rect x="0.1227%" y="613" width="0.2454%" height="15" fill="rgb(242,107,0)" fg:x="1" fg:w="2"/><text x="0.3727%" y="623.50"></text></g><g><title>readDbPage (2 samples, 0.25%)</title><rect x="0.1227%" y="597" width="0.2454%" height="15" fill="rgb(251,28,31)" fg:x="1" fg:w="2"/><text x="0.3727%" y="607.50"></text></g><g><title>sqlite3OsRead (2 samples, 0.25%)</title><rect x="0.1227%" y="581" width="0.2454%" height="15" fill="rgb(233,223,10)" fg:x="1" fg:w="2"/><text x="0.3727%" y="591.50"></text></g><g><title>unixRead (2 samples, 0.25%)</title><rect x="0.1227%" y="565" width="0.2454%" height="15" fill="rgb(215,21,27)" fg:x="1" fg:w="2"/><text x="0.3727%" y="575.50"></text></g><g><title>seekAndRead (2 samples, 0.25%)</title><rect x="0.1227%" y="549" width="0.2454%" height="15" fill="rgb(232,23,21)" fg:x="1" fg:w="2"/><text x="0.3727%" y="559.50"></text></g><g><title>read (2 samples, 0.25%)</title><rect x="0.1227%" y="533" width="0.2454%" height="15" fill="rgb(244,5,23)" fg:x="1" fg:w="2"/><text x="0.3727%" y="543.50"></text></g><g><title>&lt;mempool_analyzer::MemPoolEventDispatcherImpl as blockstack_lib::core::mempool::MemPoolEventDispatcher&gt;::mined_block_event (1 samples, 0.12%)</title><rect x="0.3681%" y="1269" width="0.1227%" height="15" fill="rgb(226,81,46)" fg:x="3" fg:w="1"/><text x="0.6181%" y="1279.50"></text></g><g><title>postgres::client::Client::execute (1 samples, 0.12%)</title><rect x="0.3681%" y="1253" width="0.1227%" height="15" fill="rgb(247,70,30)" fg:x="3" fg:w="1"/><text x="0.6181%" y="1263.50"></text></g><g><title>postgres::connection::Connection::block_on (1 samples, 0.12%)</title><rect x="0.3681%" y="1237" width="0.1227%" height="15" fill="rgb(212,68,19)" fg:x="3" fg:w="1"/><text x="0.6181%" y="1247.50"></text></g><g><title>postgres::connection::Connection::poll_block_on (1 samples, 0.12%)</title><rect x="0.3681%" y="1221" width="0.1227%" height="15" fill="rgb(240,187,13)" fg:x="3" fg:w="1"/><text x="0.6181%" y="1231.50"></text></g><g><title>tokio::runtime::Runtime::block_on (1 samples, 0.12%)</title><rect x="0.3681%" y="1205" width="0.1227%" height="15" fill="rgb(223,113,26)" fg:x="3" fg:w="1"/><text x="0.6181%" y="1215.50"></text></g><g><title>tokio::runtime::basic_scheduler::BasicScheduler&lt;P&gt;::block_on (1 samples, 0.12%)</title><rect x="0.3681%" y="1189" width="0.1227%" height="15" fill="rgb(206,192,2)" fg:x="3" fg:w="1"/><text x="0.6181%" y="1199.50"></text></g><g><title>tokio::runtime::basic_scheduler::InnerGuard&lt;P&gt;::block_on (1 samples, 0.12%)</title><rect x="0.3681%" y="1173" width="0.1227%" height="15" fill="rgb(241,108,4)" fg:x="3" fg:w="1"/><text x="0.6181%" y="1183.50"></text></g><g><title>tokio::runtime::basic_scheduler::Inner&lt;P&gt;::block_on (1 samples, 0.12%)</title><rect x="0.3681%" y="1157" width="0.1227%" height="15" fill="rgb(247,173,49)" fg:x="3" fg:w="1"/><text x="0.6181%" y="1167.50"></text></g><g><title>tokio::runtime::basic_scheduler::enter (1 samples, 0.12%)</title><rect x="0.3681%" y="1141" width="0.1227%" height="15" fill="rgb(224,114,35)" fg:x="3" fg:w="1"/><text x="0.6181%" y="1151.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (1 samples, 0.12%)</title><rect x="0.3681%" y="1125" width="0.1227%" height="15" fill="rgb(245,159,27)" fg:x="3" fg:w="1"/><text x="0.6181%" y="1135.50"></text></g><g><title>tokio::runtime::basic_scheduler::enter::{{closure}} (1 samples, 0.12%)</title><rect x="0.3681%" y="1109" width="0.1227%" height="15" fill="rgb(245,172,44)" fg:x="3" fg:w="1"/><text x="0.6181%" y="1119.50"></text></g><g><title>tokio::runtime::basic_scheduler::Inner&lt;P&gt;::block_on::{{closure}} (1 samples, 0.12%)</title><rect x="0.3681%" y="1093" width="0.1227%" height="15" fill="rgb(236,23,11)" fg:x="3" fg:w="1"/><text x="0.6181%" y="1103.50"></text></g><g><title>tokio::coop::budget (1 samples, 0.12%)</title><rect x="0.3681%" y="1077" width="0.1227%" height="15" fill="rgb(205,117,38)" fg:x="3" fg:w="1"/><text x="0.6181%" y="1087.50"></text></g><g><title>tokio::coop::with_budget (1 samples, 0.12%)</title><rect x="0.3681%" y="1061" width="0.1227%" height="15" fill="rgb(237,72,25)" fg:x="3" fg:w="1"/><text x="0.6181%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.12%)</title><rect x="0.3681%" y="1045" width="0.1227%" height="15" fill="rgb(244,70,9)" fg:x="3" fg:w="1"/><text x="0.6181%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.12%)</title><rect x="0.3681%" y="1029" width="0.1227%" height="15" fill="rgb(217,125,39)" fg:x="3" fg:w="1"/><text x="0.6181%" y="1039.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (1 samples, 0.12%)</title><rect x="0.3681%" y="1013" width="0.1227%" height="15" fill="rgb(235,36,10)" fg:x="3" fg:w="1"/><text x="0.6181%" y="1023.50"></text></g><g><title>tokio::runtime::basic_scheduler::Inner&lt;P&gt;::block_on::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="0.3681%" y="997" width="0.1227%" height="15" fill="rgb(251,123,47)" fg:x="3" fg:w="1"/><text x="0.6181%" y="1007.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.12%)</title><rect x="0.3681%" y="981" width="0.1227%" height="15" fill="rgb(221,13,13)" fg:x="3" fg:w="1"/><text x="0.6181%" y="991.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.12%)</title><rect x="0.3681%" y="965" width="0.1227%" height="15" fill="rgb(238,131,9)" fg:x="3" fg:w="1"/><text x="0.6181%" y="975.50"></text></g><g><title>postgres::connection::Connection::poll_block_on::{{closure}} (1 samples, 0.12%)</title><rect x="0.3681%" y="949" width="0.1227%" height="15" fill="rgb(211,50,8)" fg:x="3" fg:w="1"/><text x="0.6181%" y="959.50"></text></g><g><title>&lt;postgres::connection::ConnectionStream&lt;S,T&gt; as futures_core::stream::Stream&gt;::poll_next (1 samples, 0.12%)</title><rect x="0.3681%" y="933" width="0.1227%" height="15" fill="rgb(245,182,24)" fg:x="3" fg:w="1"/><text x="0.6181%" y="943.50"></text></g><g><title>tokio_postgres::connection::Connection&lt;S,T&gt;::poll_message (1 samples, 0.12%)</title><rect x="0.3681%" y="917" width="0.1227%" height="15" fill="rgb(242,14,37)" fg:x="3" fg:w="1"/><text x="0.6181%" y="927.50"></text></g><g><title>tokio_postgres::connection::Connection&lt;S,T&gt;::poll_flush (1 samples, 0.12%)</title><rect x="0.3681%" y="901" width="0.1227%" height="15" fill="rgb(246,228,12)" fg:x="3" fg:w="1"/><text x="0.6181%" y="911.50"></text></g><g><title>&lt;tokio_util::codec::framed::Framed&lt;T,U&gt; as futures_sink::Sink&lt;I&gt;&gt;::poll_flush (1 samples, 0.12%)</title><rect x="0.3681%" y="885" width="0.1227%" height="15" fill="rgb(213,55,15)" fg:x="3" fg:w="1"/><text x="0.6181%" y="895.50"></text></g><g><title>&lt;tokio_util::codec::framed_impl::FramedImpl&lt;T,U,W&gt; as futures_sink::Sink&lt;I&gt;&gt;::poll_flush (1 samples, 0.12%)</title><rect x="0.3681%" y="869" width="0.1227%" height="15" fill="rgb(209,9,3)" fg:x="3" fg:w="1"/><text x="0.6181%" y="879.50"></text></g><g><title>tokio_util::util::poll_write_buf (1 samples, 0.12%)</title><rect x="0.3681%" y="853" width="0.1227%" height="15" fill="rgb(230,59,30)" fg:x="3" fg:w="1"/><text x="0.6181%" y="863.50"></text></g><g><title>&lt;tokio_postgres::maybe_tls_stream::MaybeTlsStream&lt;S,T&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (1 samples, 0.12%)</title><rect x="0.3681%" y="837" width="0.1227%" height="15" fill="rgb(209,121,21)" fg:x="3" fg:w="1"/><text x="0.6181%" y="847.50"></text></g><g><title>&lt;tokio_postgres::socket::Socket as tokio::io::async_write::AsyncWrite&gt;::poll_write (1 samples, 0.12%)</title><rect x="0.3681%" y="821" width="0.1227%" height="15" fill="rgb(220,109,13)" fg:x="3" fg:w="1"/><text x="0.6181%" y="831.50"></text></g><g><title>&lt;tokio::net::tcp::stream::TcpStream as tokio::io::async_write::AsyncWrite&gt;::poll_write (1 samples, 0.12%)</title><rect x="0.3681%" y="805" width="0.1227%" height="15" fill="rgb(232,18,1)" fg:x="3" fg:w="1"/><text x="0.6181%" y="815.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (1 samples, 0.12%)</title><rect x="0.3681%" y="789" width="0.1227%" height="15" fill="rgb(215,41,42)" fg:x="3" fg:w="1"/><text x="0.6181%" y="799.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (1 samples, 0.12%)</title><rect x="0.3681%" y="773" width="0.1227%" height="15" fill="rgb(224,123,36)" fg:x="3" fg:w="1"/><text x="0.6181%" y="783.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_write_io (1 samples, 0.12%)</title><rect x="0.3681%" y="757" width="0.1227%" height="15" fill="rgb(240,125,3)" fg:x="3" fg:w="1"/><text x="0.6181%" y="767.50"></text></g><g><title>tokio::io::driver::registration::Registration::poll_io (1 samples, 0.12%)</title><rect x="0.3681%" y="741" width="0.1227%" height="15" fill="rgb(205,98,50)" fg:x="3" fg:w="1"/><text x="0.6181%" y="751.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write::{{closure}} (1 samples, 0.12%)</title><rect x="0.3681%" y="725" width="0.1227%" height="15" fill="rgb(205,185,37)" fg:x="3" fg:w="1"/><text x="0.6181%" y="735.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (1 samples, 0.12%)</title><rect x="0.3681%" y="709" width="0.1227%" height="15" fill="rgb(238,207,15)" fg:x="3" fg:w="1"/><text x="0.6181%" y="719.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1 samples, 0.12%)</title><rect x="0.3681%" y="693" width="0.1227%" height="15" fill="rgb(213,199,42)" fg:x="3" fg:w="1"/><text x="0.6181%" y="703.50"></text></g><g><title>mio::sys::unix::IoSourceState::do_io (1 samples, 0.12%)</title><rect x="0.3681%" y="677" width="0.1227%" height="15" fill="rgb(235,201,11)" fg:x="3" fg:w="1"/><text x="0.6181%" y="687.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::{{closure}} (1 samples, 0.12%)</title><rect x="0.3681%" y="661" width="0.1227%" height="15" fill="rgb(207,46,11)" fg:x="3" fg:w="1"/><text x="0.6181%" y="671.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (1 samples, 0.12%)</title><rect x="0.3681%" y="645" width="0.1227%" height="15" fill="rgb(241,35,35)" fg:x="3" fg:w="1"/><text x="0.6181%" y="655.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1 samples, 0.12%)</title><rect x="0.3681%" y="629" width="0.1227%" height="15" fill="rgb(243,32,47)" fg:x="3" fg:w="1"/><text x="0.6181%" y="639.50"></text></g><g><title>__lseek64 (1 samples, 0.12%)</title><rect x="0.8589%" y="917" width="0.1227%" height="15" fill="rgb(247,202,23)" fg:x="7" fg:w="1"/><text x="1.1089%" y="927.50"></text></g><g><title>blockstack_lib::chainstate::burn::db::sortdb::SortitionDB::get_canonical_burn_chain_tip (6 samples, 0.74%)</title><rect x="0.4908%" y="1269" width="0.7362%" height="15" fill="rgb(219,102,11)" fg:x="4" fg:w="6"/><text x="0.7408%" y="1279.50"></text></g><g><title>blockstack_lib::util::db::query_row (6 samples, 0.74%)</title><rect x="0.4908%" y="1253" width="0.7362%" height="15" fill="rgb(243,110,44)" fg:x="4" fg:w="6"/><text x="0.7408%" y="1263.50"></text></g><g><title>rusqlite::Connection::query_row_and_then (6 samples, 0.74%)</title><rect x="0.4908%" y="1237" width="0.7362%" height="15" fill="rgb(222,74,54)" fg:x="4" fg:w="6"/><text x="0.7408%" y="1247.50"></text></g><g><title>rusqlite::row::Rows::get_expected_row (6 samples, 0.74%)</title><rect x="0.4908%" y="1221" width="0.7362%" height="15" fill="rgb(216,99,12)" fg:x="4" fg:w="6"/><text x="0.7408%" y="1231.50"></text></g><g><title>rusqlite::row::Rows::next (6 samples, 0.74%)</title><rect x="0.4908%" y="1205" width="0.7362%" height="15" fill="rgb(226,22,26)" fg:x="4" fg:w="6"/><text x="0.7408%" y="1215.50"></text></g><g><title>&lt;rusqlite::row::Rows as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (6 samples, 0.74%)</title><rect x="0.4908%" y="1189" width="0.7362%" height="15" fill="rgb(217,163,10)" fg:x="4" fg:w="6"/><text x="0.7408%" y="1199.50"></text></g><g><title>rusqlite::statement::Statement::step (6 samples, 0.74%)</title><rect x="0.4908%" y="1173" width="0.7362%" height="15" fill="rgb(213,25,53)" fg:x="4" fg:w="6"/><text x="0.7408%" y="1183.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (6 samples, 0.74%)</title><rect x="0.4908%" y="1157" width="0.7362%" height="15" fill="rgb(252,105,26)" fg:x="4" fg:w="6"/><text x="0.7408%" y="1167.50"></text></g><g><title>sqlite3_step (6 samples, 0.74%)</title><rect x="0.4908%" y="1141" width="0.7362%" height="15" fill="rgb(220,39,43)" fg:x="4" fg:w="6"/><text x="0.7408%" y="1151.50"></text></g><g><title>sqlite3_step (6 samples, 0.74%)</title><rect x="0.4908%" y="1125" width="0.7362%" height="15" fill="rgb(229,68,48)" fg:x="4" fg:w="6"/><text x="0.7408%" y="1135.50"></text></g><g><title>sqlite3Step (6 samples, 0.74%)</title><rect x="0.4908%" y="1109" width="0.7362%" height="15" fill="rgb(252,8,32)" fg:x="4" fg:w="6"/><text x="0.7408%" y="1119.50"></text></g><g><title>sqlite3VdbeExec (6 samples, 0.74%)</title><rect x="0.4908%" y="1093" width="0.7362%" height="15" fill="rgb(223,20,43)" fg:x="4" fg:w="6"/><text x="0.7408%" y="1103.50"></text></g><g><title>moveToLeftmost (3 samples, 0.37%)</title><rect x="0.8589%" y="1077" width="0.3681%" height="15" fill="rgb(229,81,49)" fg:x="7" fg:w="3"/><text x="1.1089%" y="1087.50"></text></g><g><title>moveToChild (3 samples, 0.37%)</title><rect x="0.8589%" y="1061" width="0.3681%" height="15" fill="rgb(236,28,36)" fg:x="7" fg:w="3"/><text x="1.1089%" y="1071.50"></text></g><g><title>getAndInitPage (3 samples, 0.37%)</title><rect x="0.8589%" y="1045" width="0.3681%" height="15" fill="rgb(249,185,26)" fg:x="7" fg:w="3"/><text x="1.1089%" y="1055.50"></text></g><g><title>sqlite3PagerGet (3 samples, 0.37%)</title><rect x="0.8589%" y="1029" width="0.3681%" height="15" fill="rgb(249,174,33)" fg:x="7" fg:w="3"/><text x="1.1089%" y="1039.50"></text></g><g><title>getPageMMap (3 samples, 0.37%)</title><rect x="0.8589%" y="1013" width="0.3681%" height="15" fill="rgb(233,201,37)" fg:x="7" fg:w="3"/><text x="1.1089%" y="1023.50"></text></g><g><title>getPageNormal (3 samples, 0.37%)</title><rect x="0.8589%" y="997" width="0.3681%" height="15" fill="rgb(221,78,26)" fg:x="7" fg:w="3"/><text x="1.1089%" y="1007.50"></text></g><g><title>readDbPage (3 samples, 0.37%)</title><rect x="0.8589%" y="981" width="0.3681%" height="15" fill="rgb(250,127,30)" fg:x="7" fg:w="3"/><text x="1.1089%" y="991.50"></text></g><g><title>sqlite3OsRead (3 samples, 0.37%)</title><rect x="0.8589%" y="965" width="0.3681%" height="15" fill="rgb(230,49,44)" fg:x="7" fg:w="3"/><text x="1.1089%" y="975.50"></text></g><g><title>unixRead (3 samples, 0.37%)</title><rect x="0.8589%" y="949" width="0.3681%" height="15" fill="rgb(229,67,23)" fg:x="7" fg:w="3"/><text x="1.1089%" y="959.50"></text></g><g><title>seekAndRead (3 samples, 0.37%)</title><rect x="0.8589%" y="933" width="0.3681%" height="15" fill="rgb(249,83,47)" fg:x="7" fg:w="3"/><text x="1.1089%" y="943.50"></text></g><g><title>read (2 samples, 0.25%)</title><rect x="0.9816%" y="917" width="0.2454%" height="15" fill="rgb(215,43,3)" fg:x="8" fg:w="2"/><text x="1.2316%" y="927.50"></text></g><g><title>addr2line::Context&lt;R&gt;::find_unit_and_address (4 samples, 0.49%)</title><rect x="1.2270%" y="1013" width="0.4908%" height="15" fill="rgb(238,154,13)" fg:x="10" fg:w="4"/><text x="1.4770%" y="1023.50"></text></g><g><title>addr2line::ResUnit&lt;R&gt;::parse_functions (4 samples, 0.49%)</title><rect x="1.2270%" y="997" width="0.4908%" height="15" fill="rgb(219,56,2)" fg:x="10" fg:w="4"/><text x="1.4770%" y="1007.50"></text></g><g><title>addr2line::lazy::LazyCell&lt;T&gt;::borrow_with (4 samples, 0.49%)</title><rect x="1.2270%" y="981" width="0.4908%" height="15" fill="rgb(233,0,4)" fg:x="10" fg:w="4"/><text x="1.4770%" y="991.50"></text></g><g><title>addr2line::ResUnit&lt;R&gt;::parse_functions::{{closure}} (4 samples, 0.49%)</title><rect x="1.2270%" y="965" width="0.4908%" height="15" fill="rgb(235,30,7)" fg:x="10" fg:w="4"/><text x="1.4770%" y="975.50"></text></g><g><title>addr2line::Functions&lt;R&gt;::parse (4 samples, 0.49%)</title><rect x="1.2270%" y="949" width="0.4908%" height="15" fill="rgb(250,79,13)" fg:x="10" fg:w="4"/><text x="1.4770%" y="959.50"></text></g><g><title>gimli::read::unit::EntriesRaw&lt;R&gt;::read_attribute (2 samples, 0.25%)</title><rect x="1.4724%" y="933" width="0.2454%" height="15" fill="rgb(211,146,34)" fg:x="12" fg:w="2"/><text x="1.7224%" y="943.50"></text></g><g><title>gimli::read::unit::parse_attribute (2 samples, 0.25%)</title><rect x="1.4724%" y="917" width="0.2454%" height="15" fill="rgb(228,22,38)" fg:x="12" fg:w="2"/><text x="1.7224%" y="927.50"></text></g><g><title>gimli::read::unit::length_uleb128_value (1 samples, 0.12%)</title><rect x="1.5951%" y="901" width="0.1227%" height="15" fill="rgb(235,168,5)" fg:x="13" fg:w="1"/><text x="1.8451%" y="911.50"></text></g><g><title>gimli::read::reader::Reader::read_uleb128 (1 samples, 0.12%)</title><rect x="1.5951%" y="885" width="0.1227%" height="15" fill="rgb(221,155,16)" fg:x="13" fg:w="1"/><text x="1.8451%" y="895.50"></text></g><g><title>gimli::leb128::read::unsigned (1 samples, 0.12%)</title><rect x="1.5951%" y="869" width="0.1227%" height="15" fill="rgb(215,215,53)" fg:x="13" fg:w="1"/><text x="1.8451%" y="879.50"></text></g><g><title>gimli::leb128::low_bits_of_byte (1 samples, 0.12%)</title><rect x="1.5951%" y="853" width="0.1227%" height="15" fill="rgb(223,4,10)" fg:x="13" fg:w="1"/><text x="1.8451%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (1 samples, 0.12%)</title><rect x="1.7178%" y="949" width="0.1227%" height="15" fill="rgb(234,103,6)" fg:x="14" fg:w="1"/><text x="1.9678%" y="959.50"></text></g><g><title>alloc::slice::merge_sort (1 samples, 0.12%)</title><rect x="1.7178%" y="933" width="0.1227%" height="15" fill="rgb(227,97,0)" fg:x="14" fg:w="1"/><text x="1.9678%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.12%)</title><rect x="1.7178%" y="917" width="0.1227%" height="15" fill="rgb(234,150,53)" fg:x="14" fg:w="1"/><text x="1.9678%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="1.7178%" y="901" width="0.1227%" height="15" fill="rgb(228,201,54)" fg:x="14" fg:w="1"/><text x="1.9678%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="1.7178%" y="885" width="0.1227%" height="15" fill="rgb(222,22,37)" fg:x="14" fg:w="1"/><text x="1.9678%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.12%)</title><rect x="1.7178%" y="869" width="0.1227%" height="15" fill="rgb(237,53,32)" fg:x="14" fg:w="1"/><text x="1.9678%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.12%)</title><rect x="1.7178%" y="853" width="0.1227%" height="15" fill="rgb(233,25,53)" fg:x="14" fg:w="1"/><text x="1.9678%" y="863.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.12%)</title><rect x="1.7178%" y="837" width="0.1227%" height="15" fill="rgb(210,40,34)" fg:x="14" fg:w="1"/><text x="1.9678%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.12%)</title><rect x="1.7178%" y="821" width="0.1227%" height="15" fill="rgb(241,220,44)" fg:x="14" fg:w="1"/><text x="1.9678%" y="831.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.12%)</title><rect x="1.7178%" y="805" width="0.1227%" height="15" fill="rgb(235,28,35)" fg:x="14" fg:w="1"/><text x="1.9678%" y="815.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.12%)</title><rect x="1.7178%" y="789" width="0.1227%" height="15" fill="rgb(210,56,17)" fg:x="14" fg:w="1"/><text x="1.9678%" y="799.50"></text></g><g><title>__libc_realloc (1 samples, 0.12%)</title><rect x="1.7178%" y="773" width="0.1227%" height="15" fill="rgb(224,130,29)" fg:x="14" fg:w="1"/><text x="1.9678%" y="783.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityInstance::get_epoch_of (6 samples, 0.74%)</title><rect x="1.2270%" y="1189" width="0.7362%" height="15" fill="rgb(235,212,8)" fg:x="10" fg:w="6"/><text x="1.4770%" y="1199.50"></text></g><g><title>blockstack_lib::clarity_vm::database::&lt;impl blockstack_lib::vm::database::clarity_db::BurnStateDB for blockstack_lib::util::db::IndexDBConn&lt;blockstack_lib::chainstate::burn::db::sortdb::SortitionDBTxContext,blockstack_lib::types::chainstate::SortitionId&gt;&gt;::get_stacks_epoch (6 samples, 0.74%)</title><rect x="1.2270%" y="1173" width="0.7362%" height="15" fill="rgb(223,33,50)" fg:x="10" fg:w="6"/><text x="1.4770%" y="1183.50"></text></g><g><title>blockstack_lib::chainstate::burn::db::sortdb::SortitionDB::get_stacks_epoch (6 samples, 0.74%)</title><rect x="1.2270%" y="1157" width="0.7362%" height="15" fill="rgb(219,149,13)" fg:x="10" fg:w="6"/><text x="1.4770%" y="1167.50"></text></g><g><title>backtrace::capture::Backtrace::new (6 samples, 0.74%)</title><rect x="1.2270%" y="1141" width="0.7362%" height="15" fill="rgb(250,156,29)" fg:x="10" fg:w="6"/><text x="1.4770%" y="1151.50"></text></g><g><title>backtrace::capture::Backtrace::resolve (6 samples, 0.74%)</title><rect x="1.2270%" y="1125" width="0.7362%" height="15" fill="rgb(216,193,19)" fg:x="10" fg:w="6"/><text x="1.4770%" y="1135.50"></text></g><g><title>backtrace::symbolize::resolve_frame (6 samples, 0.74%)</title><rect x="1.2270%" y="1109" width="0.7362%" height="15" fill="rgb(216,135,14)" fg:x="10" fg:w="6"/><text x="1.4770%" y="1119.50"></text></g><g><title>backtrace::symbolize::resolve_frame_unsynchronized (6 samples, 0.74%)</title><rect x="1.2270%" y="1093" width="0.7362%" height="15" fill="rgb(241,47,5)" fg:x="10" fg:w="6"/><text x="1.4770%" y="1103.50"></text></g><g><title>backtrace::symbolize::gimli::resolve (6 samples, 0.74%)</title><rect x="1.2270%" y="1077" width="0.7362%" height="15" fill="rgb(233,42,35)" fg:x="10" fg:w="6"/><text x="1.4770%" y="1087.50"></text></g><g><title>backtrace::symbolize::gimli::Cache::with_global (6 samples, 0.74%)</title><rect x="1.2270%" y="1061" width="0.7362%" height="15" fill="rgb(231,13,6)" fg:x="10" fg:w="6"/><text x="1.4770%" y="1071.50"></text></g><g><title>backtrace::symbolize::gimli::resolve::{{closure}} (6 samples, 0.74%)</title><rect x="1.2270%" y="1045" width="0.7362%" height="15" fill="rgb(207,181,40)" fg:x="10" fg:w="6"/><text x="1.4770%" y="1055.50"></text></g><g><title>addr2line::Context&lt;R&gt;::find_frames (6 samples, 0.74%)</title><rect x="1.2270%" y="1029" width="0.7362%" height="15" fill="rgb(254,173,49)" fg:x="10" fg:w="6"/><text x="1.4770%" y="1039.50"></text></g><g><title>addr2line::ResUnit&lt;R&gt;::find_location (2 samples, 0.25%)</title><rect x="1.7178%" y="1013" width="0.2454%" height="15" fill="rgb(221,1,38)" fg:x="14" fg:w="2"/><text x="1.9678%" y="1023.50"></text></g><g><title>addr2line::ResUnit&lt;R&gt;::parse_lines (2 samples, 0.25%)</title><rect x="1.7178%" y="997" width="0.2454%" height="15" fill="rgb(206,124,46)" fg:x="14" fg:w="2"/><text x="1.9678%" y="1007.50"></text></g><g><title>addr2line::lazy::LazyCell&lt;T&gt;::borrow_with (2 samples, 0.25%)</title><rect x="1.7178%" y="981" width="0.2454%" height="15" fill="rgb(249,21,11)" fg:x="14" fg:w="2"/><text x="1.9678%" y="991.50"></text></g><g><title>addr2line::ResUnit&lt;R&gt;::parse_lines::{{closure}} (2 samples, 0.25%)</title><rect x="1.7178%" y="965" width="0.2454%" height="15" fill="rgb(222,201,40)" fg:x="14" fg:w="2"/><text x="1.9678%" y="975.50"></text></g><g><title>gimli::read::line::LineRows&lt;R,Program,Offset&gt;::next_row (1 samples, 0.12%)</title><rect x="1.8405%" y="949" width="0.1227%" height="15" fill="rgb(235,61,29)" fg:x="15" fg:w="1"/><text x="2.0905%" y="959.50"></text></g><g><title>gimli::read::line::LineRow::execute (1 samples, 0.12%)</title><rect x="1.8405%" y="933" width="0.1227%" height="15" fill="rgb(219,207,3)" fg:x="15" fg:w="1"/><text x="2.0905%" y="943.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::StacksChainState::chainstate_block_begin (7 samples, 0.86%)</title><rect x="1.2270%" y="1237" width="0.8589%" height="15" fill="rgb(222,56,46)" fg:x="10" fg:w="7"/><text x="1.4770%" y="1247.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::StacksChainState::inner_clarity_tx_begin (7 samples, 0.86%)</title><rect x="1.2270%" y="1221" width="0.8589%" height="15" fill="rgb(239,76,54)" fg:x="10" fg:w="7"/><text x="1.4770%" y="1231.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityInstance::begin_block (7 samples, 0.86%)</title><rect x="1.2270%" y="1205" width="0.8589%" height="15" fill="rgb(231,124,27)" fg:x="10" fg:w="7"/><text x="1.4770%" y="1215.50"></text></g><g><title>blockstack_lib::clarity_vm::database::marf::MarfedKV::begin (1 samples, 0.12%)</title><rect x="1.9632%" y="1189" width="0.1227%" height="15" fill="rgb(249,195,6)" fg:x="16" fg:w="1"/><text x="2.2132%" y="1199.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt;::begin (1 samples, 0.12%)</title><rect x="1.9632%" y="1173" width="0.1227%" height="15" fill="rgb(237,174,47)" fg:x="16" fg:w="1"/><text x="2.2132%" y="1183.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt;::inner_setup_extension (1 samples, 0.12%)</title><rect x="1.9632%" y="1157" width="0.1227%" height="15" fill="rgb(206,201,31)" fg:x="16" fg:w="1"/><text x="2.2132%" y="1167.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt;::set_block_heights (1 samples, 0.12%)</title><rect x="1.9632%" y="1141" width="0.1227%" height="15" fill="rgb(231,57,52)" fg:x="16" fg:w="1"/><text x="2.2132%" y="1151.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt;::insert_batch (1 samples, 0.12%)</title><rect x="1.9632%" y="1125" width="0.1227%" height="15" fill="rgb(248,177,22)" fg:x="16" fg:w="1"/><text x="2.2132%" y="1135.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::inner_insert_batch (1 samples, 0.12%)</title><rect x="1.9632%" y="1109" width="0.1227%" height="15" fill="rgb(215,211,37)" fg:x="16" fg:w="1"/><text x="2.2132%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.12%)</title><rect x="1.9632%" y="1093" width="0.1227%" height="15" fill="rgb(241,128,51)" fg:x="16" fg:w="1"/><text x="2.2132%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.12%)</title><rect x="1.9632%" y="1077" width="0.1227%" height="15" fill="rgb(227,165,31)" fg:x="16" fg:w="1"/><text x="2.2132%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (1 samples, 0.12%)</title><rect x="1.9632%" y="1061" width="0.1227%" height="15" fill="rgb(228,167,24)" fg:x="16" fg:w="1"/><text x="2.2132%" y="1071.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::inner_insert_batch::{{closure}} (1 samples, 0.12%)</title><rect x="1.9632%" y="1045" width="0.1227%" height="15" fill="rgb(228,143,12)" fg:x="16" fg:w="1"/><text x="2.2132%" y="1055.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::insert_leaf_in_batch (1 samples, 0.12%)</title><rect x="1.9632%" y="1029" width="0.1227%" height="15" fill="rgb(249,149,8)" fg:x="16" fg:w="1"/><text x="2.2132%" y="1039.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::do_insert_leaf (1 samples, 0.12%)</title><rect x="1.9632%" y="1013" width="0.1227%" height="15" fill="rgb(243,35,44)" fg:x="16" fg:w="1"/><text x="2.2132%" y="1023.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::update_root_node_hash (1 samples, 0.12%)</title><rect x="1.9632%" y="997" width="0.1227%" height="15" fill="rgb(246,89,9)" fg:x="16" fg:w="1"/><text x="2.2132%" y="1007.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::recalculate_root_hash (1 samples, 0.12%)</title><rect x="1.9632%" y="981" width="0.1227%" height="15" fill="rgb(233,213,13)" fg:x="16" fg:w="1"/><text x="2.2132%" y="991.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::get_nodetype_hash (1 samples, 0.12%)</title><rect x="1.9632%" y="965" width="0.1227%" height="15" fill="rgb(233,141,41)" fg:x="16" fg:w="1"/><text x="2.2132%" y="975.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::node::TrieNodeType::write_consensus_bytes (1 samples, 0.12%)</title><rect x="1.9632%" y="949" width="0.1227%" height="15" fill="rgb(239,167,4)" fg:x="16" fg:w="1"/><text x="2.2132%" y="959.50"></text></g><g><title>&lt;T as blockstack_lib::chainstate::stacks::index::node::ConsensusSerializable&lt;M&gt;&gt;::write_consensus_bytes (1 samples, 0.12%)</title><rect x="1.9632%" y="933" width="0.1227%" height="15" fill="rgb(209,217,16)" fg:x="16" fg:w="1"/><text x="2.2132%" y="943.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::node::ptrs_consensus_hash (1 samples, 0.12%)</title><rect x="1.9632%" y="917" width="0.1227%" height="15" fill="rgb(219,88,35)" fg:x="16" fg:w="1"/><text x="2.2132%" y="927.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::node::TriePtr::write_consensus_bytes (1 samples, 0.12%)</title><rect x="1.9632%" y="901" width="0.1227%" height="15" fill="rgb(220,193,23)" fg:x="16" fg:w="1"/><text x="2.2132%" y="911.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt; as blockstack_lib::chainstate::stacks::index::BlockMap&gt;::get_block_hash_caching (1 samples, 0.12%)</title><rect x="1.9632%" y="885" width="0.1227%" height="15" fill="rgb(230,90,52)" fg:x="16" fg:w="1"/><text x="2.2132%" y="895.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt; as blockstack_lib::chainstate::stacks::index::BlockMap&gt;::get_block_hash (1 samples, 0.12%)</title><rect x="1.9632%" y="869" width="0.1227%" height="15" fill="rgb(252,106,19)" fg:x="16" fg:w="1"/><text x="2.2132%" y="879.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::get_block_hash (1 samples, 0.12%)</title><rect x="1.9632%" y="853" width="0.1227%" height="15" fill="rgb(206,74,20)" fg:x="16" fg:w="1"/><text x="2.2132%" y="863.50"></text></g><g><title>rusqlite::Connection::query_row (1 samples, 0.12%)</title><rect x="1.9632%" y="837" width="0.1227%" height="15" fill="rgb(230,138,44)" fg:x="16" fg:w="1"/><text x="2.2132%" y="847.50"></text></g><g><title>rusqlite::Connection::prepare (1 samples, 0.12%)</title><rect x="1.9632%" y="821" width="0.1227%" height="15" fill="rgb(235,182,43)" fg:x="16" fg:w="1"/><text x="2.2132%" y="831.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (1 samples, 0.12%)</title><rect x="1.9632%" y="805" width="0.1227%" height="15" fill="rgb(242,16,51)" fg:x="16" fg:w="1"/><text x="2.2132%" y="815.50"></text></g><g><title>sqlite3_prepare_v2 (1 samples, 0.12%)</title><rect x="1.9632%" y="789" width="0.1227%" height="15" fill="rgb(248,9,4)" fg:x="16" fg:w="1"/><text x="2.2132%" y="799.50"></text></g><g><title>sqlite3LockAndPrepare (1 samples, 0.12%)</title><rect x="1.9632%" y="773" width="0.1227%" height="15" fill="rgb(210,31,22)" fg:x="16" fg:w="1"/><text x="2.2132%" y="783.50"></text></g><g><title>sqlite3LockAndPrepare (1 samples, 0.12%)</title><rect x="1.9632%" y="757" width="0.1227%" height="15" fill="rgb(239,54,39)" fg:x="16" fg:w="1"/><text x="2.2132%" y="767.50"></text></g><g><title>sqlite3Prepare (1 samples, 0.12%)</title><rect x="1.9632%" y="741" width="0.1227%" height="15" fill="rgb(230,99,41)" fg:x="16" fg:w="1"/><text x="2.2132%" y="751.50"></text></g><g><title>sqlite3RunParser (1 samples, 0.12%)</title><rect x="1.9632%" y="725" width="0.1227%" height="15" fill="rgb(253,106,12)" fg:x="16" fg:w="1"/><text x="2.2132%" y="735.50"></text></g><g><title>sqlite3Parser (1 samples, 0.12%)</title><rect x="1.9632%" y="709" width="0.1227%" height="15" fill="rgb(213,46,41)" fg:x="16" fg:w="1"/><text x="2.2132%" y="719.50"></text></g><g><title>yy_reduce (1 samples, 0.12%)</title><rect x="1.9632%" y="693" width="0.1227%" height="15" fill="rgb(215,133,35)" fg:x="16" fg:w="1"/><text x="2.2132%" y="703.50"></text></g><g><title>moveToLeftmost (1 samples, 0.12%)</title><rect x="2.0859%" y="853" width="0.1227%" height="15" fill="rgb(213,28,5)" fg:x="17" fg:w="1"/><text x="2.3359%" y="863.50"></text></g><g><title>moveToChild (1 samples, 0.12%)</title><rect x="2.0859%" y="837" width="0.1227%" height="15" fill="rgb(215,77,49)" fg:x="17" fg:w="1"/><text x="2.3359%" y="847.50"></text></g><g><title>getAndInitPage (1 samples, 0.12%)</title><rect x="2.0859%" y="821" width="0.1227%" height="15" fill="rgb(248,100,22)" fg:x="17" fg:w="1"/><text x="2.3359%" y="831.50"></text></g><g><title>sqlite3PagerGet (1 samples, 0.12%)</title><rect x="2.0859%" y="805" width="0.1227%" height="15" fill="rgb(208,67,9)" fg:x="17" fg:w="1"/><text x="2.3359%" y="815.50"></text></g><g><title>getPageMMap (1 samples, 0.12%)</title><rect x="2.0859%" y="789" width="0.1227%" height="15" fill="rgb(219,133,21)" fg:x="17" fg:w="1"/><text x="2.3359%" y="799.50"></text></g><g><title>getPageNormal (1 samples, 0.12%)</title><rect x="2.0859%" y="773" width="0.1227%" height="15" fill="rgb(246,46,29)" fg:x="17" fg:w="1"/><text x="2.3359%" y="783.50"></text></g><g><title>readDbPage (1 samples, 0.12%)</title><rect x="2.0859%" y="757" width="0.1227%" height="15" fill="rgb(246,185,52)" fg:x="17" fg:w="1"/><text x="2.3359%" y="767.50"></text></g><g><title>sqlite3OsRead (1 samples, 0.12%)</title><rect x="2.0859%" y="741" width="0.1227%" height="15" fill="rgb(252,136,11)" fg:x="17" fg:w="1"/><text x="2.3359%" y="751.50"></text></g><g><title>unixRead (1 samples, 0.12%)</title><rect x="2.0859%" y="725" width="0.1227%" height="15" fill="rgb(219,138,53)" fg:x="17" fg:w="1"/><text x="2.3359%" y="735.50"></text></g><g><title>seekAndRead (1 samples, 0.12%)</title><rect x="2.0859%" y="709" width="0.1227%" height="15" fill="rgb(211,51,23)" fg:x="17" fg:w="1"/><text x="2.3359%" y="719.50"></text></g><g><title>__lseek64 (1 samples, 0.12%)</title><rect x="2.0859%" y="693" width="0.1227%" height="15" fill="rgb(247,221,28)" fg:x="17" fg:w="1"/><text x="2.3359%" y="703.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::accounts::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::get_scheduled_block_rewards (2 samples, 0.25%)</title><rect x="2.0859%" y="1237" width="0.2454%" height="15" fill="rgb(251,222,45)" fg:x="17" fg:w="2"/><text x="2.3359%" y="1247.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::accounts::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::get_scheduled_block_rewards_in_fork_at_height (2 samples, 0.25%)</title><rect x="2.0859%" y="1221" width="0.2454%" height="15" fill="rgb(217,162,53)" fg:x="17" fg:w="2"/><text x="2.3359%" y="1231.50"></text></g><g><title>blockstack_lib::util::db::query_rows (2 samples, 0.25%)</title><rect x="2.0859%" y="1205" width="0.2454%" height="15" fill="rgb(229,93,14)" fg:x="17" fg:w="2"/><text x="2.3359%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.25%)</title><rect x="2.0859%" y="1189" width="0.2454%" height="15" fill="rgb(209,67,49)" fg:x="17" fg:w="2"/><text x="2.3359%" y="1199.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (2 samples, 0.25%)</title><rect x="2.0859%" y="1173" width="0.2454%" height="15" fill="rgb(213,87,29)" fg:x="17" fg:w="2"/><text x="2.3359%" y="1183.50"></text></g><g><title>core::iter::adapters::process_results (2 samples, 0.25%)</title><rect x="2.0859%" y="1157" width="0.2454%" height="15" fill="rgb(205,151,52)" fg:x="17" fg:w="2"/><text x="2.3359%" y="1167.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (2 samples, 0.25%)</title><rect x="2.0859%" y="1141" width="0.2454%" height="15" fill="rgb(253,215,39)" fg:x="17" fg:w="2"/><text x="2.3359%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.25%)</title><rect x="2.0859%" y="1125" width="0.2454%" height="15" fill="rgb(221,220,41)" fg:x="17" fg:w="2"/><text x="2.3359%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.25%)</title><rect x="2.0859%" y="1109" width="0.2454%" height="15" fill="rgb(218,133,21)" fg:x="17" fg:w="2"/><text x="2.3359%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.25%)</title><rect x="2.0859%" y="1093" width="0.2454%" height="15" fill="rgb(221,193,43)" fg:x="17" fg:w="2"/><text x="2.3359%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.25%)</title><rect x="2.0859%" y="1077" width="0.2454%" height="15" fill="rgb(240,128,52)" fg:x="17" fg:w="2"/><text x="2.3359%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.25%)</title><rect x="2.0859%" y="1061" width="0.2454%" height="15" fill="rgb(253,114,12)" fg:x="17" fg:w="2"/><text x="2.3359%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (2 samples, 0.25%)</title><rect x="2.0859%" y="1045" width="0.2454%" height="15" fill="rgb(215,223,47)" fg:x="17" fg:w="2"/><text x="2.3359%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.25%)</title><rect x="2.0859%" y="1029" width="0.2454%" height="15" fill="rgb(248,225,23)" fg:x="17" fg:w="2"/><text x="2.3359%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.25%)</title><rect x="2.0859%" y="1013" width="0.2454%" height="15" fill="rgb(250,108,0)" fg:x="17" fg:w="2"/><text x="2.3359%" y="1023.50"></text></g><g><title>&lt;rusqlite::row::AndThenRows&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.25%)</title><rect x="2.0859%" y="997" width="0.2454%" height="15" fill="rgb(228,208,7)" fg:x="17" fg:w="2"/><text x="2.3359%" y="1007.50"></text></g><g><title>rusqlite::row::Rows::next (2 samples, 0.25%)</title><rect x="2.0859%" y="981" width="0.2454%" height="15" fill="rgb(244,45,10)" fg:x="17" fg:w="2"/><text x="2.3359%" y="991.50"></text></g><g><title>&lt;rusqlite::row::Rows as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (2 samples, 0.25%)</title><rect x="2.0859%" y="965" width="0.2454%" height="15" fill="rgb(207,125,25)" fg:x="17" fg:w="2"/><text x="2.3359%" y="975.50"></text></g><g><title>rusqlite::statement::Statement::step (2 samples, 0.25%)</title><rect x="2.0859%" y="949" width="0.2454%" height="15" fill="rgb(210,195,18)" fg:x="17" fg:w="2"/><text x="2.3359%" y="959.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (2 samples, 0.25%)</title><rect x="2.0859%" y="933" width="0.2454%" height="15" fill="rgb(249,80,12)" fg:x="17" fg:w="2"/><text x="2.3359%" y="943.50"></text></g><g><title>sqlite3_step (2 samples, 0.25%)</title><rect x="2.0859%" y="917" width="0.2454%" height="15" fill="rgb(221,65,9)" fg:x="17" fg:w="2"/><text x="2.3359%" y="927.50"></text></g><g><title>sqlite3_step (2 samples, 0.25%)</title><rect x="2.0859%" y="901" width="0.2454%" height="15" fill="rgb(235,49,36)" fg:x="17" fg:w="2"/><text x="2.3359%" y="911.50"></text></g><g><title>sqlite3Step (2 samples, 0.25%)</title><rect x="2.0859%" y="885" width="0.2454%" height="15" fill="rgb(225,32,20)" fg:x="17" fg:w="2"/><text x="2.3359%" y="895.50"></text></g><g><title>sqlite3VdbeExec (2 samples, 0.25%)</title><rect x="2.0859%" y="869" width="0.2454%" height="15" fill="rgb(215,141,46)" fg:x="17" fg:w="2"/><text x="2.3359%" y="879.50"></text></g><g><title>sqlite3BtreeNext (1 samples, 0.12%)</title><rect x="2.2086%" y="853" width="0.1227%" height="15" fill="rgb(250,160,47)" fg:x="18" fg:w="1"/><text x="2.4586%" y="863.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::blocks::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::get_parent_matured_miner (1 samples, 0.12%)</title><rect x="2.3313%" y="1237" width="0.1227%" height="15" fill="rgb(216,222,40)" fg:x="19" fg:w="1"/><text x="2.5813%" y="1247.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::accounts::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::get_scheduled_block_rewards_at_block (1 samples, 0.12%)</title><rect x="2.3313%" y="1221" width="0.1227%" height="15" fill="rgb(234,217,39)" fg:x="19" fg:w="1"/><text x="2.5813%" y="1231.50"></text></g><g><title>blockstack_lib::util::db::query_rows (1 samples, 0.12%)</title><rect x="2.3313%" y="1205" width="0.1227%" height="15" fill="rgb(207,178,40)" fg:x="19" fg:w="1"/><text x="2.5813%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.12%)</title><rect x="2.3313%" y="1189" width="0.1227%" height="15" fill="rgb(221,136,13)" fg:x="19" fg:w="1"/><text x="2.5813%" y="1199.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="2.3313%" y="1173" width="0.1227%" height="15" fill="rgb(249,199,10)" fg:x="19" fg:w="1"/><text x="2.5813%" y="1183.50"></text></g><g><title>core::iter::adapters::process_results (1 samples, 0.12%)</title><rect x="2.3313%" y="1157" width="0.1227%" height="15" fill="rgb(249,222,13)" fg:x="19" fg:w="1"/><text x="2.5813%" y="1167.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1 samples, 0.12%)</title><rect x="2.3313%" y="1141" width="0.1227%" height="15" fill="rgb(244,185,38)" fg:x="19" fg:w="1"/><text x="2.5813%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.12%)</title><rect x="2.3313%" y="1125" width="0.1227%" height="15" fill="rgb(236,202,9)" fg:x="19" fg:w="1"/><text x="2.5813%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="2.3313%" y="1109" width="0.1227%" height="15" fill="rgb(250,229,37)" fg:x="19" fg:w="1"/><text x="2.5813%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="2.3313%" y="1093" width="0.1227%" height="15" fill="rgb(206,174,23)" fg:x="19" fg:w="1"/><text x="2.5813%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="2.3313%" y="1077" width="0.1227%" height="15" fill="rgb(211,33,43)" fg:x="19" fg:w="1"/><text x="2.5813%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="2.3313%" y="1061" width="0.1227%" height="15" fill="rgb(245,58,50)" fg:x="19" fg:w="1"/><text x="2.5813%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.12%)</title><rect x="2.3313%" y="1045" width="0.1227%" height="15" fill="rgb(244,68,36)" fg:x="19" fg:w="1"/><text x="2.5813%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.12%)</title><rect x="2.3313%" y="1029" width="0.1227%" height="15" fill="rgb(232,229,15)" fg:x="19" fg:w="1"/><text x="2.5813%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.12%)</title><rect x="2.3313%" y="1013" width="0.1227%" height="15" fill="rgb(254,30,23)" fg:x="19" fg:w="1"/><text x="2.5813%" y="1023.50"></text></g><g><title>&lt;rusqlite::row::AndThenRows&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="2.3313%" y="997" width="0.1227%" height="15" fill="rgb(235,160,14)" fg:x="19" fg:w="1"/><text x="2.5813%" y="1007.50"></text></g><g><title>rusqlite::row::Rows::next (1 samples, 0.12%)</title><rect x="2.3313%" y="981" width="0.1227%" height="15" fill="rgb(212,155,44)" fg:x="19" fg:w="1"/><text x="2.5813%" y="991.50"></text></g><g><title>&lt;rusqlite::row::Rows as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (1 samples, 0.12%)</title><rect x="2.3313%" y="965" width="0.1227%" height="15" fill="rgb(226,2,50)" fg:x="19" fg:w="1"/><text x="2.5813%" y="975.50"></text></g><g><title>rusqlite::statement::Statement::step (1 samples, 0.12%)</title><rect x="2.3313%" y="949" width="0.1227%" height="15" fill="rgb(234,177,6)" fg:x="19" fg:w="1"/><text x="2.5813%" y="959.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (1 samples, 0.12%)</title><rect x="2.3313%" y="933" width="0.1227%" height="15" fill="rgb(217,24,9)" fg:x="19" fg:w="1"/><text x="2.5813%" y="943.50"></text></g><g><title>sqlite3_step (1 samples, 0.12%)</title><rect x="2.3313%" y="917" width="0.1227%" height="15" fill="rgb(220,13,46)" fg:x="19" fg:w="1"/><text x="2.5813%" y="927.50"></text></g><g><title>sqlite3_step (1 samples, 0.12%)</title><rect x="2.3313%" y="901" width="0.1227%" height="15" fill="rgb(239,221,27)" fg:x="19" fg:w="1"/><text x="2.5813%" y="911.50"></text></g><g><title>sqlite3Step (1 samples, 0.12%)</title><rect x="2.3313%" y="885" width="0.1227%" height="15" fill="rgb(222,198,25)" fg:x="19" fg:w="1"/><text x="2.5813%" y="895.50"></text></g><g><title>sqlite3VdbeExec (1 samples, 0.12%)</title><rect x="2.3313%" y="869" width="0.1227%" height="15" fill="rgb(211,99,13)" fg:x="19" fg:w="1"/><text x="2.5813%" y="879.50"></text></g><g><title>moveToLeftmost (1 samples, 0.12%)</title><rect x="2.3313%" y="853" width="0.1227%" height="15" fill="rgb(232,111,31)" fg:x="19" fg:w="1"/><text x="2.5813%" y="863.50"></text></g><g><title>moveToChild (1 samples, 0.12%)</title><rect x="2.3313%" y="837" width="0.1227%" height="15" fill="rgb(245,82,37)" fg:x="19" fg:w="1"/><text x="2.5813%" y="847.50"></text></g><g><title>getAndInitPage (1 samples, 0.12%)</title><rect x="2.3313%" y="821" width="0.1227%" height="15" fill="rgb(227,149,46)" fg:x="19" fg:w="1"/><text x="2.5813%" y="831.50"></text></g><g><title>sqlite3PagerGet (1 samples, 0.12%)</title><rect x="2.3313%" y="805" width="0.1227%" height="15" fill="rgb(218,36,50)" fg:x="19" fg:w="1"/><text x="2.5813%" y="815.50"></text></g><g><title>getPageMMap (1 samples, 0.12%)</title><rect x="2.3313%" y="789" width="0.1227%" height="15" fill="rgb(226,80,48)" fg:x="19" fg:w="1"/><text x="2.5813%" y="799.50"></text></g><g><title>getPageNormal (1 samples, 0.12%)</title><rect x="2.3313%" y="773" width="0.1227%" height="15" fill="rgb(238,224,15)" fg:x="19" fg:w="1"/><text x="2.5813%" y="783.50"></text></g><g><title>readDbPage (1 samples, 0.12%)</title><rect x="2.3313%" y="757" width="0.1227%" height="15" fill="rgb(241,136,10)" fg:x="19" fg:w="1"/><text x="2.5813%" y="767.50"></text></g><g><title>sqlite3OsRead (1 samples, 0.12%)</title><rect x="2.3313%" y="741" width="0.1227%" height="15" fill="rgb(208,32,45)" fg:x="19" fg:w="1"/><text x="2.5813%" y="751.50"></text></g><g><title>unixRead (1 samples, 0.12%)</title><rect x="2.3313%" y="725" width="0.1227%" height="15" fill="rgb(207,135,9)" fg:x="19" fg:w="1"/><text x="2.5813%" y="735.50"></text></g><g><title>seekAndRead (1 samples, 0.12%)</title><rect x="2.3313%" y="709" width="0.1227%" height="15" fill="rgb(206,86,44)" fg:x="19" fg:w="1"/><text x="2.5813%" y="719.50"></text></g><g><title>read (1 samples, 0.12%)</title><rect x="2.3313%" y="693" width="0.1227%" height="15" fill="rgb(245,177,15)" fg:x="19" fg:w="1"/><text x="2.5813%" y="703.50"></text></g><g><title>gimli::read::unit::EntriesRaw&lt;R&gt;::next_offset (1 samples, 0.12%)</title><rect x="2.4540%" y="869" width="0.1227%" height="15" fill="rgb(206,64,50)" fg:x="20" fg:w="1"/><text x="2.7040%" y="879.50"></text></g><g><title>gimli::read::unit::UnitHeader&lt;R,Offset&gt;::header_size (1 samples, 0.12%)</title><rect x="2.4540%" y="853" width="0.1227%" height="15" fill="rgb(234,36,40)" fg:x="20" fg:w="1"/><text x="2.7040%" y="863.50"></text></g><g><title>gimli::read::unit::UnitHeader&lt;R,Offset&gt;::length_including_self (1 samples, 0.12%)</title><rect x="2.4540%" y="837" width="0.1227%" height="15" fill="rgb(213,64,8)" fg:x="20" fg:w="1"/><text x="2.7040%" y="847.50"></text></g><g><title>gimli::common::Format::initial_length_size (1 samples, 0.12%)</title><rect x="2.4540%" y="821" width="0.1227%" height="15" fill="rgb(210,75,36)" fg:x="20" fg:w="1"/><text x="2.7040%" y="831.50"></text></g><g><title>addr2line::Context&lt;R&gt;::find_unit_and_address (2 samples, 0.25%)</title><rect x="2.4540%" y="949" width="0.2454%" height="15" fill="rgb(229,88,21)" fg:x="20" fg:w="2"/><text x="2.7040%" y="959.50"></text></g><g><title>addr2line::ResUnit&lt;R&gt;::parse_functions (2 samples, 0.25%)</title><rect x="2.4540%" y="933" width="0.2454%" height="15" fill="rgb(252,204,47)" fg:x="20" fg:w="2"/><text x="2.7040%" y="943.50"></text></g><g><title>addr2line::lazy::LazyCell&lt;T&gt;::borrow_with (2 samples, 0.25%)</title><rect x="2.4540%" y="917" width="0.2454%" height="15" fill="rgb(208,77,27)" fg:x="20" fg:w="2"/><text x="2.7040%" y="927.50"></text></g><g><title>addr2line::ResUnit&lt;R&gt;::parse_functions::{{closure}} (2 samples, 0.25%)</title><rect x="2.4540%" y="901" width="0.2454%" height="15" fill="rgb(221,76,26)" fg:x="20" fg:w="2"/><text x="2.7040%" y="911.50"></text></g><g><title>addr2line::Functions&lt;R&gt;::parse (2 samples, 0.25%)</title><rect x="2.4540%" y="885" width="0.2454%" height="15" fill="rgb(225,139,18)" fg:x="20" fg:w="2"/><text x="2.7040%" y="895.50"></text></g><g><title>gimli::read::unit::EntriesRaw&lt;R&gt;::read_attribute (1 samples, 0.12%)</title><rect x="2.5767%" y="869" width="0.1227%" height="15" fill="rgb(230,137,11)" fg:x="21" fg:w="1"/><text x="2.8267%" y="879.50"></text></g><g><title>gimli::read::unit::parse_attribute (1 samples, 0.12%)</title><rect x="2.5767%" y="853" width="0.1227%" height="15" fill="rgb(212,28,1)" fg:x="21" fg:w="1"/><text x="2.8267%" y="863.50"></text></g><g><title>blockstack_lib::chainstate::stacks::miner::&lt;impl blockstack_lib::chainstate::stacks::StacksBlockBuilder&gt;::epoch_begin (13 samples, 1.60%)</title><rect x="1.2270%" y="1269" width="1.5951%" height="15" fill="rgb(248,164,17)" fg:x="10" fg:w="13"/><text x="1.4770%" y="1279.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::blocks::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::setup_block (13 samples, 1.60%)</title><rect x="1.2270%" y="1253" width="1.5951%" height="15" fill="rgb(222,171,42)" fg:x="10" fg:w="13"/><text x="1.4770%" y="1263.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::blocks::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::process_epoch_transition (3 samples, 0.37%)</title><rect x="2.4540%" y="1237" width="0.3681%" height="15" fill="rgb(243,84,45)" fg:x="20" fg:w="3"/><text x="2.7040%" y="1247.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityConnection::with_clarity_db_readonly (3 samples, 0.37%)</title><rect x="2.4540%" y="1221" width="0.3681%" height="15" fill="rgb(252,49,23)" fg:x="20" fg:w="3"/><text x="2.7040%" y="1231.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::db::ClarityTx as blockstack_lib::clarity_vm::clarity::ClarityConnection&gt;::with_clarity_db_readonly_owned (3 samples, 0.37%)</title><rect x="2.4540%" y="1205" width="0.3681%" height="15" fill="rgb(215,19,7)" fg:x="20" fg:w="3"/><text x="2.7040%" y="1215.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::clarity::ClarityBlockConnection as blockstack_lib::clarity_vm::clarity::ClarityConnection&gt;::with_clarity_db_readonly_owned (3 samples, 0.37%)</title><rect x="2.4540%" y="1189" width="0.3681%" height="15" fill="rgb(238,81,41)" fg:x="20" fg:w="3"/><text x="2.7040%" y="1199.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityConnection::with_clarity_db_readonly::{{closure}} (3 samples, 0.37%)</title><rect x="2.4540%" y="1173" width="0.3681%" height="15" fill="rgb(210,199,37)" fg:x="20" fg:w="3"/><text x="2.7040%" y="1183.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::blocks::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::process_epoch_transition::{{closure}} (3 samples, 0.37%)</title><rect x="2.4540%" y="1157" width="0.3681%" height="15" fill="rgb(244,192,49)" fg:x="20" fg:w="3"/><text x="2.7040%" y="1167.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get_stacks_epoch (3 samples, 0.37%)</title><rect x="2.4540%" y="1141" width="0.3681%" height="15" fill="rgb(226,211,11)" fg:x="20" fg:w="3"/><text x="2.7040%" y="1151.50"></text></g><g><title>&lt;&amp;dyn blockstack_lib::vm::database::clarity_db::BurnStateDB as blockstack_lib::vm::database::clarity_db::BurnStateDB&gt;::get_stacks_epoch (3 samples, 0.37%)</title><rect x="2.4540%" y="1125" width="0.3681%" height="15" fill="rgb(236,162,54)" fg:x="20" fg:w="3"/><text x="2.7040%" y="1135.50"></text></g><g><title>blockstack_lib::clarity_vm::database::&lt;impl blockstack_lib::vm::database::clarity_db::BurnStateDB for blockstack_lib::util::db::IndexDBConn&lt;blockstack_lib::chainstate::burn::db::sortdb::SortitionDBTxContext,blockstack_lib::types::chainstate::SortitionId&gt;&gt;::get_stacks_epoch (3 samples, 0.37%)</title><rect x="2.4540%" y="1109" width="0.3681%" height="15" fill="rgb(220,229,9)" fg:x="20" fg:w="3"/><text x="2.7040%" y="1119.50"></text></g><g><title>blockstack_lib::chainstate::burn::db::sortdb::SortitionDB::get_stacks_epoch (3 samples, 0.37%)</title><rect x="2.4540%" y="1093" width="0.3681%" height="15" fill="rgb(250,87,22)" fg:x="20" fg:w="3"/><text x="2.7040%" y="1103.50"></text></g><g><title>backtrace::capture::Backtrace::new (3 samples, 0.37%)</title><rect x="2.4540%" y="1077" width="0.3681%" height="15" fill="rgb(239,43,17)" fg:x="20" fg:w="3"/><text x="2.7040%" y="1087.50"></text></g><g><title>backtrace::capture::Backtrace::resolve (3 samples, 0.37%)</title><rect x="2.4540%" y="1061" width="0.3681%" height="15" fill="rgb(231,177,25)" fg:x="20" fg:w="3"/><text x="2.7040%" y="1071.50"></text></g><g><title>backtrace::symbolize::resolve_frame (3 samples, 0.37%)</title><rect x="2.4540%" y="1045" width="0.3681%" height="15" fill="rgb(219,179,1)" fg:x="20" fg:w="3"/><text x="2.7040%" y="1055.50"></text></g><g><title>backtrace::symbolize::resolve_frame_unsynchronized (3 samples, 0.37%)</title><rect x="2.4540%" y="1029" width="0.3681%" height="15" fill="rgb(238,219,53)" fg:x="20" fg:w="3"/><text x="2.7040%" y="1039.50"></text></g><g><title>backtrace::symbolize::gimli::resolve (3 samples, 0.37%)</title><rect x="2.4540%" y="1013" width="0.3681%" height="15" fill="rgb(232,167,36)" fg:x="20" fg:w="3"/><text x="2.7040%" y="1023.50"></text></g><g><title>backtrace::symbolize::gimli::Cache::with_global (3 samples, 0.37%)</title><rect x="2.4540%" y="997" width="0.3681%" height="15" fill="rgb(244,19,51)" fg:x="20" fg:w="3"/><text x="2.7040%" y="1007.50"></text></g><g><title>backtrace::symbolize::gimli::resolve::{{closure}} (3 samples, 0.37%)</title><rect x="2.4540%" y="981" width="0.3681%" height="15" fill="rgb(224,6,22)" fg:x="20" fg:w="3"/><text x="2.7040%" y="991.50"></text></g><g><title>addr2line::Context&lt;R&gt;::find_frames (3 samples, 0.37%)</title><rect x="2.4540%" y="965" width="0.3681%" height="15" fill="rgb(224,145,5)" fg:x="20" fg:w="3"/><text x="2.7040%" y="975.50"></text></g><g><title>addr2line::ResUnit&lt;R&gt;::find_location (1 samples, 0.12%)</title><rect x="2.6994%" y="949" width="0.1227%" height="15" fill="rgb(234,130,49)" fg:x="22" fg:w="1"/><text x="2.9494%" y="959.50"></text></g><g><title>addr2line::ResUnit&lt;R&gt;::parse_lines (1 samples, 0.12%)</title><rect x="2.6994%" y="933" width="0.1227%" height="15" fill="rgb(254,6,2)" fg:x="22" fg:w="1"/><text x="2.9494%" y="943.50"></text></g><g><title>addr2line::lazy::LazyCell&lt;T&gt;::borrow_with (1 samples, 0.12%)</title><rect x="2.6994%" y="917" width="0.1227%" height="15" fill="rgb(208,96,46)" fg:x="22" fg:w="1"/><text x="2.9494%" y="927.50"></text></g><g><title>addr2line::ResUnit&lt;R&gt;::parse_lines::{{closure}} (1 samples, 0.12%)</title><rect x="2.6994%" y="901" width="0.1227%" height="15" fill="rgb(239,3,39)" fg:x="22" fg:w="1"/><text x="2.9494%" y="911.50"></text></g><g><title>gimli::read::line::LineRows&lt;R,Program,Offset&gt;::next_row (1 samples, 0.12%)</title><rect x="2.6994%" y="885" width="0.1227%" height="15" fill="rgb(233,210,1)" fg:x="22" fg:w="1"/><text x="2.9494%" y="895.50"></text></g><g><title>gimli::read::line::LineInstructions&lt;R&gt;::next_instruction (1 samples, 0.12%)</title><rect x="2.6994%" y="869" width="0.1227%" height="15" fill="rgb(244,137,37)" fg:x="22" fg:w="1"/><text x="2.9494%" y="879.50"></text></g><g><title>gimli::read::line::LineInstruction&lt;R,Offset&gt;::parse (1 samples, 0.12%)</title><rect x="2.6994%" y="853" width="0.1227%" height="15" fill="rgb(240,136,2)" fg:x="22" fg:w="1"/><text x="2.9494%" y="863.50"></text></g><g><title>gimli::read::reader::Reader::read_uleb128 (1 samples, 0.12%)</title><rect x="2.6994%" y="837" width="0.1227%" height="15" fill="rgb(239,18,37)" fg:x="22" fg:w="1"/><text x="2.9494%" y="847.50"></text></g><g><title>gimli::leb128::read::unsigned (1 samples, 0.12%)</title><rect x="2.6994%" y="821" width="0.1227%" height="15" fill="rgb(218,185,22)" fg:x="22" fg:w="1"/><text x="2.9494%" y="831.50"></text></g><g><title>blockstack_lib::chainstate::stacks::miner::&lt;impl blockstack_lib::chainstate::stacks::StacksBlockBuilder&gt;::epoch_finish (2 samples, 0.25%)</title><rect x="2.8221%" y="1269" width="0.2454%" height="15" fill="rgb(225,218,4)" fg:x="23" fg:w="2"/><text x="3.0721%" y="1279.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::ClarityTx::commit_mined_block (2 samples, 0.25%)</title><rect x="2.8221%" y="1253" width="0.2454%" height="15" fill="rgb(230,182,32)" fg:x="23" fg:w="2"/><text x="3.0721%" y="1263.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityBlockConnection::commit_mined_block (2 samples, 0.25%)</title><rect x="2.8221%" y="1237" width="0.2454%" height="15" fill="rgb(242,56,43)" fg:x="23" fg:w="2"/><text x="3.0721%" y="1247.50"></text></g><g><title>blockstack_lib::clarity_vm::database::marf::WritableMarfStore::commit_mined_block (2 samples, 0.25%)</title><rect x="2.8221%" y="1221" width="0.2454%" height="15" fill="rgb(233,99,24)" fg:x="23" fg:w="2"/><text x="3.0721%" y="1231.50"></text></g><g><title>blockstack_lib::vm::database::sqlite::SqliteConnection::drop_metadata (2 samples, 0.25%)</title><rect x="2.8221%" y="1205" width="0.2454%" height="15" fill="rgb(234,209,42)" fg:x="23" fg:w="2"/><text x="3.0721%" y="1215.50"></text></g><g><title>rusqlite::Connection::execute (2 samples, 0.25%)</title><rect x="2.8221%" y="1189" width="0.2454%" height="15" fill="rgb(227,7,12)" fg:x="23" fg:w="2"/><text x="3.0721%" y="1199.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.25%)</title><rect x="2.8221%" y="1173" width="0.2454%" height="15" fill="rgb(245,203,43)" fg:x="23" fg:w="2"/><text x="3.0721%" y="1183.50"></text></g><g><title>rusqlite::Connection::execute::{{closure}} (2 samples, 0.25%)</title><rect x="2.8221%" y="1157" width="0.2454%" height="15" fill="rgb(238,205,33)" fg:x="23" fg:w="2"/><text x="3.0721%" y="1167.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.25%)</title><rect x="2.8221%" y="1141" width="0.2454%" height="15" fill="rgb(231,56,7)" fg:x="23" fg:w="2"/><text x="3.0721%" y="1151.50"></text></g><g><title>rusqlite::Connection::execute::{{closure}}::{{closure}} (2 samples, 0.25%)</title><rect x="2.8221%" y="1125" width="0.2454%" height="15" fill="rgb(244,186,29)" fg:x="23" fg:w="2"/><text x="3.0721%" y="1135.50"></text></g><g><title>rusqlite::statement::Statement::execute (2 samples, 0.25%)</title><rect x="2.8221%" y="1109" width="0.2454%" height="15" fill="rgb(234,111,31)" fg:x="23" fg:w="2"/><text x="3.0721%" y="1119.50"></text></g><g><title>rusqlite::statement::Statement::execute_with_bound_parameters (2 samples, 0.25%)</title><rect x="2.8221%" y="1093" width="0.2454%" height="15" fill="rgb(241,149,10)" fg:x="23" fg:w="2"/><text x="3.0721%" y="1103.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (2 samples, 0.25%)</title><rect x="2.8221%" y="1077" width="0.2454%" height="15" fill="rgb(249,206,44)" fg:x="23" fg:w="2"/><text x="3.0721%" y="1087.50"></text></g><g><title>sqlite3_step (2 samples, 0.25%)</title><rect x="2.8221%" y="1061" width="0.2454%" height="15" fill="rgb(251,153,30)" fg:x="23" fg:w="2"/><text x="3.0721%" y="1071.50"></text></g><g><title>sqlite3_step (2 samples, 0.25%)</title><rect x="2.8221%" y="1045" width="0.2454%" height="15" fill="rgb(239,152,38)" fg:x="23" fg:w="2"/><text x="3.0721%" y="1055.50"></text></g><g><title>sqlite3Step (2 samples, 0.25%)</title><rect x="2.8221%" y="1029" width="0.2454%" height="15" fill="rgb(249,139,47)" fg:x="23" fg:w="2"/><text x="3.0721%" y="1039.50"></text></g><g><title>sqlite3VdbeExec (2 samples, 0.25%)</title><rect x="2.8221%" y="1013" width="0.2454%" height="15" fill="rgb(244,64,35)" fg:x="23" fg:w="2"/><text x="3.0721%" y="1023.50"></text></g><g><title>moveToLeftmost (2 samples, 0.25%)</title><rect x="2.8221%" y="997" width="0.2454%" height="15" fill="rgb(216,46,15)" fg:x="23" fg:w="2"/><text x="3.0721%" y="1007.50"></text></g><g><title>moveToChild (2 samples, 0.25%)</title><rect x="2.8221%" y="981" width="0.2454%" height="15" fill="rgb(250,74,19)" fg:x="23" fg:w="2"/><text x="3.0721%" y="991.50"></text></g><g><title>getAndInitPage (2 samples, 0.25%)</title><rect x="2.8221%" y="965" width="0.2454%" height="15" fill="rgb(249,42,33)" fg:x="23" fg:w="2"/><text x="3.0721%" y="975.50"></text></g><g><title>sqlite3PagerGet (2 samples, 0.25%)</title><rect x="2.8221%" y="949" width="0.2454%" height="15" fill="rgb(242,149,17)" fg:x="23" fg:w="2"/><text x="3.0721%" y="959.50"></text></g><g><title>getPageMMap (2 samples, 0.25%)</title><rect x="2.8221%" y="933" width="0.2454%" height="15" fill="rgb(244,29,21)" fg:x="23" fg:w="2"/><text x="3.0721%" y="943.50"></text></g><g><title>getPageNormal (2 samples, 0.25%)</title><rect x="2.8221%" y="917" width="0.2454%" height="15" fill="rgb(220,130,37)" fg:x="23" fg:w="2"/><text x="3.0721%" y="927.50"></text></g><g><title>readDbPage (2 samples, 0.25%)</title><rect x="2.8221%" y="901" width="0.2454%" height="15" fill="rgb(211,67,2)" fg:x="23" fg:w="2"/><text x="3.0721%" y="911.50"></text></g><g><title>sqlite3OsRead (2 samples, 0.25%)</title><rect x="2.8221%" y="885" width="0.2454%" height="15" fill="rgb(235,68,52)" fg:x="23" fg:w="2"/><text x="3.0721%" y="895.50"></text></g><g><title>unixRead (2 samples, 0.25%)</title><rect x="2.8221%" y="869" width="0.2454%" height="15" fill="rgb(246,142,3)" fg:x="23" fg:w="2"/><text x="3.0721%" y="879.50"></text></g><g><title>seekAndRead (2 samples, 0.25%)</title><rect x="2.8221%" y="853" width="0.2454%" height="15" fill="rgb(241,25,7)" fg:x="23" fg:w="2"/><text x="3.0721%" y="863.50"></text></g><g><title>read (2 samples, 0.25%)</title><rect x="2.8221%" y="837" width="0.2454%" height="15" fill="rgb(242,119,39)" fg:x="23" fg:w="2"/><text x="3.0721%" y="847.50"></text></g><g><title>readDbPage (1 samples, 0.12%)</title><rect x="3.5583%" y="965" width="0.1227%" height="15" fill="rgb(241,98,45)" fg:x="29" fg:w="1"/><text x="3.8083%" y="975.50"></text></g><g><title>sqlite3OsRead (1 samples, 0.12%)</title><rect x="3.5583%" y="949" width="0.1227%" height="15" fill="rgb(254,28,30)" fg:x="29" fg:w="1"/><text x="3.8083%" y="959.50"></text></g><g><title>unixRead (1 samples, 0.12%)</title><rect x="3.5583%" y="933" width="0.1227%" height="15" fill="rgb(241,142,54)" fg:x="29" fg:w="1"/><text x="3.8083%" y="943.50"></text></g><g><title>seekAndRead (1 samples, 0.12%)</title><rect x="3.5583%" y="917" width="0.1227%" height="15" fill="rgb(222,85,15)" fg:x="29" fg:w="1"/><text x="3.8083%" y="927.50"></text></g><g><title>read (1 samples, 0.12%)</title><rect x="3.5583%" y="901" width="0.1227%" height="15" fill="rgb(210,85,47)" fg:x="29" fg:w="1"/><text x="3.8083%" y="911.50"></text></g><g><title>blockstack_lib::chainstate::burn::db::sortdb::SortitionDB::get_canonical_burn_chain_tip (6 samples, 0.74%)</title><rect x="3.0675%" y="1253" width="0.7362%" height="15" fill="rgb(224,206,25)" fg:x="25" fg:w="6"/><text x="3.3175%" y="1263.50"></text></g><g><title>blockstack_lib::util::db::query_row (6 samples, 0.74%)</title><rect x="3.0675%" y="1237" width="0.7362%" height="15" fill="rgb(243,201,19)" fg:x="25" fg:w="6"/><text x="3.3175%" y="1247.50"></text></g><g><title>rusqlite::Connection::query_row_and_then (6 samples, 0.74%)</title><rect x="3.0675%" y="1221" width="0.7362%" height="15" fill="rgb(236,59,4)" fg:x="25" fg:w="6"/><text x="3.3175%" y="1231.50"></text></g><g><title>rusqlite::row::Rows::get_expected_row (6 samples, 0.74%)</title><rect x="3.0675%" y="1205" width="0.7362%" height="15" fill="rgb(254,179,45)" fg:x="25" fg:w="6"/><text x="3.3175%" y="1215.50"></text></g><g><title>rusqlite::row::Rows::next (6 samples, 0.74%)</title><rect x="3.0675%" y="1189" width="0.7362%" height="15" fill="rgb(226,14,10)" fg:x="25" fg:w="6"/><text x="3.3175%" y="1199.50"></text></g><g><title>&lt;rusqlite::row::Rows as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (6 samples, 0.74%)</title><rect x="3.0675%" y="1173" width="0.7362%" height="15" fill="rgb(244,27,41)" fg:x="25" fg:w="6"/><text x="3.3175%" y="1183.50"></text></g><g><title>rusqlite::statement::Statement::step (6 samples, 0.74%)</title><rect x="3.0675%" y="1157" width="0.7362%" height="15" fill="rgb(235,35,32)" fg:x="25" fg:w="6"/><text x="3.3175%" y="1167.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (6 samples, 0.74%)</title><rect x="3.0675%" y="1141" width="0.7362%" height="15" fill="rgb(218,68,31)" fg:x="25" fg:w="6"/><text x="3.3175%" y="1151.50"></text></g><g><title>sqlite3_step (6 samples, 0.74%)</title><rect x="3.0675%" y="1125" width="0.7362%" height="15" fill="rgb(207,120,37)" fg:x="25" fg:w="6"/><text x="3.3175%" y="1135.50"></text></g><g><title>sqlite3_step (6 samples, 0.74%)</title><rect x="3.0675%" y="1109" width="0.7362%" height="15" fill="rgb(227,98,0)" fg:x="25" fg:w="6"/><text x="3.3175%" y="1119.50"></text></g><g><title>sqlite3Step (6 samples, 0.74%)</title><rect x="3.0675%" y="1093" width="0.7362%" height="15" fill="rgb(207,7,3)" fg:x="25" fg:w="6"/><text x="3.3175%" y="1103.50"></text></g><g><title>sqlite3VdbeExec (6 samples, 0.74%)</title><rect x="3.0675%" y="1077" width="0.7362%" height="15" fill="rgb(206,98,19)" fg:x="25" fg:w="6"/><text x="3.3175%" y="1087.50"></text></g><g><title>moveToLeftmost (2 samples, 0.25%)</title><rect x="3.5583%" y="1061" width="0.2454%" height="15" fill="rgb(217,5,26)" fg:x="29" fg:w="2"/><text x="3.8083%" y="1071.50"></text></g><g><title>moveToChild (2 samples, 0.25%)</title><rect x="3.5583%" y="1045" width="0.2454%" height="15" fill="rgb(235,190,38)" fg:x="29" fg:w="2"/><text x="3.8083%" y="1055.50"></text></g><g><title>getAndInitPage (2 samples, 0.25%)</title><rect x="3.5583%" y="1029" width="0.2454%" height="15" fill="rgb(247,86,24)" fg:x="29" fg:w="2"/><text x="3.8083%" y="1039.50"></text></g><g><title>sqlite3PagerGet (2 samples, 0.25%)</title><rect x="3.5583%" y="1013" width="0.2454%" height="15" fill="rgb(205,101,16)" fg:x="29" fg:w="2"/><text x="3.8083%" y="1023.50"></text></g><g><title>getPageMMap (2 samples, 0.25%)</title><rect x="3.5583%" y="997" width="0.2454%" height="15" fill="rgb(246,168,33)" fg:x="29" fg:w="2"/><text x="3.8083%" y="1007.50"></text></g><g><title>getPageNormal (2 samples, 0.25%)</title><rect x="3.5583%" y="981" width="0.2454%" height="15" fill="rgb(231,114,1)" fg:x="29" fg:w="2"/><text x="3.8083%" y="991.50"></text></g><g><title>sqlite3PcacheFetch (1 samples, 0.12%)</title><rect x="3.6810%" y="965" width="0.1227%" height="15" fill="rgb(207,184,53)" fg:x="30" fg:w="1"/><text x="3.9310%" y="975.50"></text></g><g><title>pcache1Fetch (1 samples, 0.12%)</title><rect x="3.6810%" y="949" width="0.1227%" height="15" fill="rgb(224,95,51)" fg:x="30" fg:w="1"/><text x="3.9310%" y="959.50"></text></g><g><title>pcache1FetchWithMutex (1 samples, 0.12%)</title><rect x="3.6810%" y="933" width="0.1227%" height="15" fill="rgb(212,188,45)" fg:x="30" fg:w="1"/><text x="3.9310%" y="943.50"></text></g><g><title>pcache1FetchNoMutex (1 samples, 0.12%)</title><rect x="3.6810%" y="917" width="0.1227%" height="15" fill="rgb(223,154,38)" fg:x="30" fg:w="1"/><text x="3.9310%" y="927.50"></text></g><g><title>pcache1FetchNoMutex (1 samples, 0.12%)</title><rect x="3.6810%" y="901" width="0.1227%" height="15" fill="rgb(251,22,52)" fg:x="30" fg:w="1"/><text x="3.9310%" y="911.50"></text></g><g><title>pcache1FetchStage2 (1 samples, 0.12%)</title><rect x="3.6810%" y="885" width="0.1227%" height="15" fill="rgb(229,209,22)" fg:x="30" fg:w="1"/><text x="3.9310%" y="895.50"></text></g><g><title>pcache1PinPage (1 samples, 0.12%)</title><rect x="3.6810%" y="869" width="0.1227%" height="15" fill="rgb(234,138,34)" fg:x="30" fg:w="1"/><text x="3.9310%" y="879.50"></text></g><g><title>readDbPage (2 samples, 0.25%)</title><rect x="3.8037%" y="965" width="0.2454%" height="15" fill="rgb(212,95,11)" fg:x="31" fg:w="2"/><text x="4.0537%" y="975.50"></text></g><g><title>sqlite3OsRead (2 samples, 0.25%)</title><rect x="3.8037%" y="949" width="0.2454%" height="15" fill="rgb(240,179,47)" fg:x="31" fg:w="2"/><text x="4.0537%" y="959.50"></text></g><g><title>unixRead (2 samples, 0.25%)</title><rect x="3.8037%" y="933" width="0.2454%" height="15" fill="rgb(240,163,11)" fg:x="31" fg:w="2"/><text x="4.0537%" y="943.50"></text></g><g><title>seekAndRead (2 samples, 0.25%)</title><rect x="3.8037%" y="917" width="0.2454%" height="15" fill="rgb(236,37,12)" fg:x="31" fg:w="2"/><text x="4.0537%" y="927.50"></text></g><g><title>read (2 samples, 0.25%)</title><rect x="3.8037%" y="901" width="0.2454%" height="15" fill="rgb(232,164,16)" fg:x="31" fg:w="2"/><text x="4.0537%" y="911.50"></text></g><g><title>blockstack_lib::chainstate::burn::db::sortdb::SortitionDB::get_canonical_chain_tip_bhh (3 samples, 0.37%)</title><rect x="3.8037%" y="1253" width="0.3681%" height="15" fill="rgb(244,205,15)" fg:x="31" fg:w="3"/><text x="4.0537%" y="1263.50"></text></g><g><title>rusqlite::Connection::query_row (3 samples, 0.37%)</title><rect x="3.8037%" y="1237" width="0.3681%" height="15" fill="rgb(223,117,47)" fg:x="31" fg:w="3"/><text x="4.0537%" y="1247.50"></text></g><g><title>rusqlite::statement::Statement::query_row (3 samples, 0.37%)</title><rect x="3.8037%" y="1221" width="0.3681%" height="15" fill="rgb(244,107,35)" fg:x="31" fg:w="3"/><text x="4.0537%" y="1231.50"></text></g><g><title>rusqlite::row::Rows::get_expected_row (3 samples, 0.37%)</title><rect x="3.8037%" y="1205" width="0.3681%" height="15" fill="rgb(205,140,8)" fg:x="31" fg:w="3"/><text x="4.0537%" y="1215.50"></text></g><g><title>rusqlite::row::Rows::next (3 samples, 0.37%)</title><rect x="3.8037%" y="1189" width="0.3681%" height="15" fill="rgb(228,84,46)" fg:x="31" fg:w="3"/><text x="4.0537%" y="1199.50"></text></g><g><title>&lt;rusqlite::row::Rows as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (3 samples, 0.37%)</title><rect x="3.8037%" y="1173" width="0.3681%" height="15" fill="rgb(254,188,9)" fg:x="31" fg:w="3"/><text x="4.0537%" y="1183.50"></text></g><g><title>rusqlite::statement::Statement::step (3 samples, 0.37%)</title><rect x="3.8037%" y="1157" width="0.3681%" height="15" fill="rgb(206,112,54)" fg:x="31" fg:w="3"/><text x="4.0537%" y="1167.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (3 samples, 0.37%)</title><rect x="3.8037%" y="1141" width="0.3681%" height="15" fill="rgb(216,84,49)" fg:x="31" fg:w="3"/><text x="4.0537%" y="1151.50"></text></g><g><title>sqlite3_step (3 samples, 0.37%)</title><rect x="3.8037%" y="1125" width="0.3681%" height="15" fill="rgb(214,194,35)" fg:x="31" fg:w="3"/><text x="4.0537%" y="1135.50"></text></g><g><title>sqlite3_step (3 samples, 0.37%)</title><rect x="3.8037%" y="1109" width="0.3681%" height="15" fill="rgb(249,28,3)" fg:x="31" fg:w="3"/><text x="4.0537%" y="1119.50"></text></g><g><title>sqlite3Step (3 samples, 0.37%)</title><rect x="3.8037%" y="1093" width="0.3681%" height="15" fill="rgb(222,56,52)" fg:x="31" fg:w="3"/><text x="4.0537%" y="1103.50"></text></g><g><title>sqlite3VdbeExec (3 samples, 0.37%)</title><rect x="3.8037%" y="1077" width="0.3681%" height="15" fill="rgb(245,217,50)" fg:x="31" fg:w="3"/><text x="4.0537%" y="1087.50"></text></g><g><title>moveToLeftmost (3 samples, 0.37%)</title><rect x="3.8037%" y="1061" width="0.3681%" height="15" fill="rgb(213,201,24)" fg:x="31" fg:w="3"/><text x="4.0537%" y="1071.50"></text></g><g><title>moveToChild (3 samples, 0.37%)</title><rect x="3.8037%" y="1045" width="0.3681%" height="15" fill="rgb(248,116,28)" fg:x="31" fg:w="3"/><text x="4.0537%" y="1055.50"></text></g><g><title>getAndInitPage (3 samples, 0.37%)</title><rect x="3.8037%" y="1029" width="0.3681%" height="15" fill="rgb(219,72,43)" fg:x="31" fg:w="3"/><text x="4.0537%" y="1039.50"></text></g><g><title>sqlite3PagerGet (3 samples, 0.37%)</title><rect x="3.8037%" y="1013" width="0.3681%" height="15" fill="rgb(209,138,14)" fg:x="31" fg:w="3"/><text x="4.0537%" y="1023.50"></text></g><g><title>getPageMMap (3 samples, 0.37%)</title><rect x="3.8037%" y="997" width="0.3681%" height="15" fill="rgb(222,18,33)" fg:x="31" fg:w="3"/><text x="4.0537%" y="1007.50"></text></g><g><title>getPageNormal (3 samples, 0.37%)</title><rect x="3.8037%" y="981" width="0.3681%" height="15" fill="rgb(213,199,7)" fg:x="31" fg:w="3"/><text x="4.0537%" y="991.50"></text></g><g><title>sqlite3PcacheFetch (1 samples, 0.12%)</title><rect x="4.0491%" y="965" width="0.1227%" height="15" fill="rgb(250,110,10)" fg:x="33" fg:w="1"/><text x="4.2991%" y="975.50"></text></g><g><title>pcache1Fetch (1 samples, 0.12%)</title><rect x="4.0491%" y="949" width="0.1227%" height="15" fill="rgb(248,123,6)" fg:x="33" fg:w="1"/><text x="4.2991%" y="959.50"></text></g><g><title>pcache1FetchWithMutex (1 samples, 0.12%)</title><rect x="4.0491%" y="933" width="0.1227%" height="15" fill="rgb(206,91,31)" fg:x="33" fg:w="1"/><text x="4.2991%" y="943.50"></text></g><g><title>pcache1FetchNoMutex (1 samples, 0.12%)</title><rect x="4.0491%" y="917" width="0.1227%" height="15" fill="rgb(211,154,13)" fg:x="33" fg:w="1"/><text x="4.2991%" y="927.50"></text></g><g><title>pcache1FetchNoMutex (1 samples, 0.12%)</title><rect x="4.0491%" y="901" width="0.1227%" height="15" fill="rgb(225,148,7)" fg:x="33" fg:w="1"/><text x="4.2991%" y="911.50"></text></g><g><title>pcache1FetchStage2 (1 samples, 0.12%)</title><rect x="4.0491%" y="885" width="0.1227%" height="15" fill="rgb(220,160,43)" fg:x="33" fg:w="1"/><text x="4.2991%" y="895.50"></text></g><g><title>pcache1PinPage (1 samples, 0.12%)</title><rect x="4.0491%" y="869" width="0.1227%" height="15" fill="rgb(213,52,39)" fg:x="33" fg:w="1"/><text x="4.2991%" y="879.50"></text></g><g><title>blockstack_lib::chainstate::stacks::miner::&lt;impl blockstack_lib::chainstate::stacks::StacksBlockBuilder&gt;::pre_epoch_begin (10 samples, 1.23%)</title><rect x="3.0675%" y="1269" width="1.2270%" height="15" fill="rgb(243,137,7)" fg:x="25" fg:w="10"/><text x="3.3175%" y="1279.50"></text></g><g><title>blockstack_lib::chainstate::stacks::miner::&lt;impl blockstack_lib::chainstate::stacks::StacksBlockBuilder&gt;::load_parent_microblocks (1 samples, 0.12%)</title><rect x="4.1718%" y="1253" width="0.1227%" height="15" fill="rgb(230,79,13)" fg:x="34" fg:w="1"/><text x="4.4218%" y="1263.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::blocks::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::load_descendant_staging_microblock_stream_with_poison (1 samples, 0.12%)</title><rect x="4.1718%" y="1237" width="0.1227%" height="15" fill="rgb(247,105,23)" fg:x="34" fg:w="1"/><text x="4.4218%" y="1247.50"></text></g><g><title>blockstack_lib::chainstate::stacks::block::&lt;impl blockstack_lib::codec::StacksMessageCodec for blockstack_lib::chainstate::stacks::StacksMicroblock&gt;::consensus_deserialize (1 samples, 0.12%)</title><rect x="4.1718%" y="1221" width="0.1227%" height="15" fill="rgb(223,179,41)" fg:x="34" fg:w="1"/><text x="4.4218%" y="1231.50"></text></g><g><title>blockstack_lib::codec::read_next (1 samples, 0.12%)</title><rect x="4.1718%" y="1205" width="0.1227%" height="15" fill="rgb(218,9,34)" fg:x="34" fg:w="1"/><text x="4.4218%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as blockstack_lib::codec::StacksMessageCodec&gt;::consensus_deserialize (1 samples, 0.12%)</title><rect x="4.1718%" y="1189" width="0.1227%" height="15" fill="rgb(222,106,8)" fg:x="34" fg:w="1"/><text x="4.4218%" y="1199.50"></text></g><g><title>blockstack_lib::codec::read_next_at_most (1 samples, 0.12%)</title><rect x="4.1718%" y="1173" width="0.1227%" height="15" fill="rgb(211,220,0)" fg:x="34" fg:w="1"/><text x="4.4218%" y="1183.50"></text></g><g><title>blockstack_lib::codec::read_next_vec (1 samples, 0.12%)</title><rect x="4.1718%" y="1157" width="0.1227%" height="15" fill="rgb(229,52,16)" fg:x="34" fg:w="1"/><text x="4.4218%" y="1167.50"></text></g><g><title>blockstack_lib::chainstate::stacks::transaction::&lt;impl blockstack_lib::codec::StacksMessageCodec for blockstack_lib::chainstate::stacks::StacksTransaction&gt;::consensus_deserialize (1 samples, 0.12%)</title><rect x="4.1718%" y="1141" width="0.1227%" height="15" fill="rgb(212,155,18)" fg:x="34" fg:w="1"/><text x="4.4218%" y="1151.50"></text></g><g><title>blockstack_lib::chainstate::stacks::transaction::&lt;impl blockstack_lib::chainstate::stacks::StacksTransaction&gt;::consensus_deserialize_with_len (1 samples, 0.12%)</title><rect x="4.1718%" y="1125" width="0.1227%" height="15" fill="rgb(242,21,14)" fg:x="34" fg:w="1"/><text x="4.4218%" y="1135.50"></text></g><g><title>blockstack_lib::codec::read_next (1 samples, 0.12%)</title><rect x="4.1718%" y="1109" width="0.1227%" height="15" fill="rgb(222,19,48)" fg:x="34" fg:w="1"/><text x="4.4218%" y="1119.50"></text></g><g><title>blockstack_lib::chainstate::stacks::transaction::&lt;impl blockstack_lib::codec::StacksMessageCodec for blockstack_lib::chainstate::stacks::TransactionPayload&gt;::consensus_deserialize (1 samples, 0.12%)</title><rect x="4.1718%" y="1093" width="0.1227%" height="15" fill="rgb(232,45,27)" fg:x="34" fg:w="1"/><text x="4.4218%" y="1103.50"></text></g><g><title>blockstack_lib::codec::read_next (1 samples, 0.12%)</title><rect x="4.1718%" y="1077" width="0.1227%" height="15" fill="rgb(249,103,42)" fg:x="34" fg:w="1"/><text x="4.4218%" y="1087.50"></text></g><g><title>blockstack_lib::chainstate::stacks::transaction::&lt;impl blockstack_lib::codec::StacksMessageCodec for blockstack_lib::chainstate::stacks::TransactionContractCall&gt;::consensus_deserialize (1 samples, 0.12%)</title><rect x="4.1718%" y="1061" width="0.1227%" height="15" fill="rgb(246,81,33)" fg:x="34" fg:w="1"/><text x="4.4218%" y="1071.50"></text></g><g><title>blockstack_lib::util::strings::StacksString::is_clarity_variable (1 samples, 0.12%)</title><rect x="4.1718%" y="1045" width="0.1227%" height="15" fill="rgb(252,33,42)" fg:x="34" fg:w="1"/><text x="4.4218%" y="1055.50"></text></g><g><title>blockstack_lib::vm::ast::parser::lex (1 samples, 0.12%)</title><rect x="4.1718%" y="1029" width="0.1227%" height="15" fill="rgb(209,212,41)" fg:x="34" fg:w="1"/><text x="4.4218%" y="1039.50"></text></g><g><title>blockstack_lib::vm::ast::parser::LexMatcher::new (1 samples, 0.12%)</title><rect x="4.1718%" y="1013" width="0.1227%" height="15" fill="rgb(207,154,6)" fg:x="34" fg:w="1"/><text x="4.4218%" y="1023.50"></text></g><g><title>regex::re_unicode::Regex::new (1 samples, 0.12%)</title><rect x="4.1718%" y="997" width="0.1227%" height="15" fill="rgb(223,64,47)" fg:x="34" fg:w="1"/><text x="4.4218%" y="1007.50"></text></g><g><title>regex::re_builder::set_unicode::RegexSetBuilder::build (1 samples, 0.12%)</title><rect x="4.1718%" y="981" width="0.1227%" height="15" fill="rgb(211,161,38)" fg:x="34" fg:w="1"/><text x="4.4218%" y="991.50"></text></g><g><title>regex::exec::ExecBuilder::build (1 samples, 0.12%)</title><rect x="4.1718%" y="965" width="0.1227%" height="15" fill="rgb(219,138,40)" fg:x="34" fg:w="1"/><text x="4.4218%" y="975.50"></text></g><g><title>regex::exec::ExecBuilder::parse (1 samples, 0.12%)</title><rect x="4.1718%" y="949" width="0.1227%" height="15" fill="rgb(241,228,46)" fg:x="34" fg:w="1"/><text x="4.4218%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.12%)</title><rect x="4.1718%" y="933" width="0.1227%" height="15" fill="rgb(223,209,38)" fg:x="34" fg:w="1"/><text x="4.4218%" y="943.50"></text></g><g><title>regex::exec::ExecBuilder::parse::{{closure}} (1 samples, 0.12%)</title><rect x="4.1718%" y="917" width="0.1227%" height="15" fill="rgb(236,164,45)" fg:x="34" fg:w="1"/><text x="4.4218%" y="927.50"></text></g><g><title>regex_syntax::hir::literal::Literals::union_prefixes (1 samples, 0.12%)</title><rect x="4.1718%" y="901" width="0.1227%" height="15" fill="rgb(231,15,5)" fg:x="34" fg:w="1"/><text x="4.4218%" y="911.50"></text></g><g><title>regex_syntax::hir::literal::prefixes (1 samples, 0.12%)</title><rect x="4.1718%" y="885" width="0.1227%" height="15" fill="rgb(252,35,15)" fg:x="34" fg:w="1"/><text x="4.4218%" y="895.50"></text></g><g><title>regex_syntax::hir::literal::Literals::cross_product (1 samples, 0.12%)</title><rect x="4.1718%" y="869" width="0.1227%" height="15" fill="rgb(248,181,18)" fg:x="34" fg:w="1"/><text x="4.4218%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="4.1718%" y="853" width="0.1227%" height="15" fill="rgb(233,39,42)" fg:x="34" fg:w="1"/><text x="4.4218%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.12%)</title><rect x="4.1718%" y="837" width="0.1227%" height="15" fill="rgb(238,110,33)" fg:x="34" fg:w="1"/><text x="4.4218%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.12%)</title><rect x="4.1718%" y="821" width="0.1227%" height="15" fill="rgb(233,195,10)" fg:x="34" fg:w="1"/><text x="4.4218%" y="831.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.12%)</title><rect x="4.1718%" y="805" width="0.1227%" height="15" fill="rgb(254,105,3)" fg:x="34" fg:w="1"/><text x="4.4218%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.12%)</title><rect x="4.1718%" y="789" width="0.1227%" height="15" fill="rgb(221,225,9)" fg:x="34" fg:w="1"/><text x="4.4218%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.12%)</title><rect x="4.1718%" y="773" width="0.1227%" height="15" fill="rgb(224,227,45)" fg:x="34" fg:w="1"/><text x="4.4218%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.12%)</title><rect x="4.1718%" y="757" width="0.1227%" height="15" fill="rgb(229,198,43)" fg:x="34" fg:w="1"/><text x="4.4218%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.12%)</title><rect x="4.1718%" y="741" width="0.1227%" height="15" fill="rgb(206,209,35)" fg:x="34" fg:w="1"/><text x="4.4218%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.12%)</title><rect x="4.1718%" y="725" width="0.1227%" height="15" fill="rgb(245,195,53)" fg:x="34" fg:w="1"/><text x="4.4218%" y="735.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.12%)</title><rect x="4.1718%" y="709" width="0.1227%" height="15" fill="rgb(240,92,26)" fg:x="34" fg:w="1"/><text x="4.4218%" y="719.50"></text></g><g><title>malloc (1 samples, 0.12%)</title><rect x="4.1718%" y="693" width="0.1227%" height="15" fill="rgb(207,40,23)" fg:x="34" fg:w="1"/><text x="4.4218%" y="703.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::transactions::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::check_transaction_nonces (2 samples, 0.25%)</title><rect x="4.2945%" y="1221" width="0.2454%" height="15" fill="rgb(223,111,35)" fg:x="35" fg:w="2"/><text x="4.5445%" y="1231.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::accounts::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::get_account (2 samples, 0.25%)</title><rect x="4.2945%" y="1205" width="0.2454%" height="15" fill="rgb(229,147,28)" fg:x="35" fg:w="2"/><text x="4.5445%" y="1215.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityConnection::with_clarity_db_readonly (2 samples, 0.25%)</title><rect x="4.2945%" y="1189" width="0.2454%" height="15" fill="rgb(211,29,28)" fg:x="35" fg:w="2"/><text x="4.5445%" y="1199.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection as blockstack_lib::clarity_vm::clarity::ClarityConnection&gt;::with_clarity_db_readonly_owned (2 samples, 0.25%)</title><rect x="4.2945%" y="1173" width="0.2454%" height="15" fill="rgb(228,72,33)" fg:x="35" fg:w="2"/><text x="4.5445%" y="1183.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection as blockstack_lib::clarity_vm::clarity::ClarityConnection&gt;::with_clarity_db_readonly_owned::{{closure}} (2 samples, 0.25%)</title><rect x="4.2945%" y="1157" width="0.2454%" height="15" fill="rgb(205,214,31)" fg:x="35" fg:w="2"/><text x="4.5445%" y="1167.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityConnection::with_clarity_db_readonly::{{closure}} (2 samples, 0.25%)</title><rect x="4.2945%" y="1141" width="0.2454%" height="15" fill="rgb(224,111,15)" fg:x="35" fg:w="2"/><text x="4.5445%" y="1151.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::accounts::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::get_account::{{closure}} (2 samples, 0.25%)</title><rect x="4.2945%" y="1125" width="0.2454%" height="15" fill="rgb(253,21,26)" fg:x="35" fg:w="2"/><text x="4.5445%" y="1135.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get_account_nonce (2 samples, 0.25%)</title><rect x="4.2945%" y="1109" width="0.2454%" height="15" fill="rgb(245,139,43)" fg:x="35" fg:w="2"/><text x="4.5445%" y="1119.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get (2 samples, 0.25%)</title><rect x="4.2945%" y="1093" width="0.2454%" height="15" fill="rgb(252,170,7)" fg:x="35" fg:w="2"/><text x="4.5445%" y="1103.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get (2 samples, 0.25%)</title><rect x="4.2945%" y="1077" width="0.2454%" height="15" fill="rgb(231,118,14)" fg:x="35" fg:w="2"/><text x="4.5445%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (2 samples, 0.25%)</title><rect x="4.2945%" y="1061" width="0.2454%" height="15" fill="rgb(238,83,0)" fg:x="35" fg:w="2"/><text x="4.5445%" y="1071.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get::{{closure}} (2 samples, 0.25%)</title><rect x="4.2945%" y="1045" width="0.2454%" height="15" fill="rgb(221,39,39)" fg:x="35" fg:w="2"/><text x="4.5445%" y="1055.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::get (2 samples, 0.25%)</title><rect x="4.2945%" y="1029" width="0.2454%" height="15" fill="rgb(222,119,46)" fg:x="35" fg:w="2"/><text x="4.5445%" y="1039.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get (2 samples, 0.25%)</title><rect x="4.2945%" y="1013" width="0.2454%" height="15" fill="rgb(222,165,49)" fg:x="35" fg:w="2"/><text x="4.5445%" y="1023.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt; as blockstack_lib::chainstate::stacks::index::marf::MarfConnection&lt;T&gt;&gt;::with_conn (2 samples, 0.25%)</title><rect x="4.2945%" y="997" width="0.2454%" height="15" fill="rgb(219,113,52)" fg:x="35" fg:w="2"/><text x="4.5445%" y="1007.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get::{{closure}} (2 samples, 0.25%)</title><rect x="4.2945%" y="981" width="0.2454%" height="15" fill="rgb(214,7,15)" fg:x="35" fg:w="2"/><text x="4.5445%" y="991.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_by_key (2 samples, 0.25%)</title><rect x="4.2945%" y="965" width="0.2454%" height="15" fill="rgb(235,32,4)" fg:x="35" fg:w="2"/><text x="4.5445%" y="975.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_path (2 samples, 0.25%)</title><rect x="4.2945%" y="949" width="0.2454%" height="15" fill="rgb(238,90,54)" fg:x="35" fg:w="2"/><text x="4.5445%" y="959.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk (2 samples, 0.25%)</title><rect x="4.2945%" y="933" width="0.2454%" height="15" fill="rgb(213,208,19)" fg:x="35" fg:w="2"/><text x="4.5445%" y="943.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_backptr (2 samples, 0.25%)</title><rect x="4.2945%" y="917" width="0.2454%" height="15" fill="rgb(233,156,4)" fg:x="35" fg:w="2"/><text x="4.5445%" y="927.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_backptr (2 samples, 0.25%)</title><rect x="4.2945%" y="901" width="0.2454%" height="15" fill="rgb(207,194,5)" fg:x="35" fg:w="2"/><text x="4.5445%" y="911.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (2 samples, 0.25%)</title><rect x="4.2945%" y="885" width="0.2454%" height="15" fill="rgb(206,111,30)" fg:x="35" fg:w="2"/><text x="4.5445%" y="895.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (2 samples, 0.25%)</title><rect x="4.2945%" y="869" width="0.2454%" height="15" fill="rgb(243,70,54)" fg:x="35" fg:w="2"/><text x="4.5445%" y="879.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (2 samples, 0.25%)</title><rect x="4.2945%" y="853" width="0.2454%" height="15" fill="rgb(242,28,8)" fg:x="35" fg:w="2"/><text x="4.5445%" y="863.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (2 samples, 0.25%)</title><rect x="4.2945%" y="837" width="0.2454%" height="15" fill="rgb(219,106,18)" fg:x="35" fg:w="2"/><text x="4.5445%" y="847.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (2 samples, 0.25%)</title><rect x="4.2945%" y="821" width="0.2454%" height="15" fill="rgb(244,222,10)" fg:x="35" fg:w="2"/><text x="4.5445%" y="831.50"></text></g><g><title>std::io::Read::read_exact (2 samples, 0.25%)</title><rect x="4.2945%" y="805" width="0.2454%" height="15" fill="rgb(236,179,52)" fg:x="35" fg:w="2"/><text x="4.5445%" y="815.50"></text></g><g><title>std::io::default_read_exact (2 samples, 0.25%)</title><rect x="4.2945%" y="789" width="0.2454%" height="15" fill="rgb(213,23,39)" fg:x="35" fg:w="2"/><text x="4.5445%" y="799.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (2 samples, 0.25%)</title><rect x="4.2945%" y="773" width="0.2454%" height="15" fill="rgb(238,48,10)" fg:x="35" fg:w="2"/><text x="4.5445%" y="783.50"></text></g><g><title>sqlite3_blob_read (2 samples, 0.25%)</title><rect x="4.2945%" y="757" width="0.2454%" height="15" fill="rgb(251,196,23)" fg:x="35" fg:w="2"/><text x="4.5445%" y="767.50"></text></g><g><title>blobReadWrite (2 samples, 0.25%)</title><rect x="4.2945%" y="741" width="0.2454%" height="15" fill="rgb(250,152,24)" fg:x="35" fg:w="2"/><text x="4.5445%" y="751.50"></text></g><g><title>sqlite3BtreePayloadChecked (2 samples, 0.25%)</title><rect x="4.2945%" y="725" width="0.2454%" height="15" fill="rgb(209,150,17)" fg:x="35" fg:w="2"/><text x="4.5445%" y="735.50"></text></g><g><title>sqlite3BtreePayloadChecked (2 samples, 0.25%)</title><rect x="4.2945%" y="709" width="0.2454%" height="15" fill="rgb(234,202,34)" fg:x="35" fg:w="2"/><text x="4.5445%" y="719.50"></text></g><g><title>accessPayload (2 samples, 0.25%)</title><rect x="4.2945%" y="693" width="0.2454%" height="15" fill="rgb(253,148,53)" fg:x="35" fg:w="2"/><text x="4.5445%" y="703.50"></text></g><g><title>getOverflowPage (2 samples, 0.25%)</title><rect x="4.2945%" y="677" width="0.2454%" height="15" fill="rgb(218,129,16)" fg:x="35" fg:w="2"/><text x="4.5445%" y="687.50"></text></g><g><title>sqlite3Get4byte (2 samples, 0.25%)</title><rect x="4.2945%" y="661" width="0.2454%" height="15" fill="rgb(216,85,19)" fg:x="35" fg:w="2"/><text x="4.5445%" y="671.50"></text></g><g><title>blockstack_lib::chainstate::stacks::miner::&lt;impl blockstack_lib::chainstate::stacks::StacksBlockBuilder&gt;::try_mine_tx (3 samples, 0.37%)</title><rect x="4.2945%" y="1269" width="0.3681%" height="15" fill="rgb(235,228,7)" fg:x="35" fg:w="3"/><text x="4.5445%" y="1279.50"></text></g><g><title>blockstack_lib::chainstate::stacks::miner::&lt;impl blockstack_lib::chainstate::stacks::StacksBlockBuilder&gt;::try_mine_tx_with_len (3 samples, 0.37%)</title><rect x="4.2945%" y="1253" width="0.3681%" height="15" fill="rgb(245,175,0)" fg:x="35" fg:w="3"/><text x="4.5445%" y="1263.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::transactions::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::process_transaction (3 samples, 0.37%)</title><rect x="4.2945%" y="1237" width="0.3681%" height="15" fill="rgb(208,168,36)" fg:x="35" fg:w="3"/><text x="4.5445%" y="1247.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::commit (1 samples, 0.12%)</title><rect x="4.5399%" y="1221" width="0.1227%" height="15" fill="rgb(246,171,24)" fg:x="37" fg:w="1"/><text x="4.7899%" y="1231.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::commit (1 samples, 0.12%)</title><rect x="4.5399%" y="1205" width="0.1227%" height="15" fill="rgb(215,142,24)" fg:x="37" fg:w="1"/><text x="4.7899%" y="1215.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::put_all (1 samples, 0.12%)</title><rect x="4.5399%" y="1189" width="0.1227%" height="15" fill="rgb(250,187,7)" fg:x="37" fg:w="1"/><text x="4.7899%" y="1199.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt;::insert_batch (1 samples, 0.12%)</title><rect x="4.5399%" y="1173" width="0.1227%" height="15" fill="rgb(228,66,33)" fg:x="37" fg:w="1"/><text x="4.7899%" y="1183.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::inner_insert_batch (1 samples, 0.12%)</title><rect x="4.5399%" y="1157" width="0.1227%" height="15" fill="rgb(234,215,21)" fg:x="37" fg:w="1"/><text x="4.7899%" y="1167.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::insert_leaf (1 samples, 0.12%)</title><rect x="4.5399%" y="1141" width="0.1227%" height="15" fill="rgb(222,191,20)" fg:x="37" fg:w="1"/><text x="4.7899%" y="1151.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::do_insert_leaf (1 samples, 0.12%)</title><rect x="4.5399%" y="1125" width="0.1227%" height="15" fill="rgb(245,79,54)" fg:x="37" fg:w="1"/><text x="4.7899%" y="1135.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_cow (1 samples, 0.12%)</title><rect x="4.5399%" y="1109" width="0.1227%" height="15" fill="rgb(240,10,37)" fg:x="37" fg:w="1"/><text x="4.7899%" y="1119.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::node_child_copy (1 samples, 0.12%)</title><rect x="4.5399%" y="1093" width="0.1227%" height="15" fill="rgb(214,192,32)" fg:x="37" fg:w="1"/><text x="4.7899%" y="1103.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_backptr (1 samples, 0.12%)</title><rect x="4.5399%" y="1077" width="0.1227%" height="15" fill="rgb(209,36,54)" fg:x="37" fg:w="1"/><text x="4.7899%" y="1087.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_backptr (1 samples, 0.12%)</title><rect x="4.5399%" y="1061" width="0.1227%" height="15" fill="rgb(220,10,11)" fg:x="37" fg:w="1"/><text x="4.7899%" y="1071.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (1 samples, 0.12%)</title><rect x="4.5399%" y="1045" width="0.1227%" height="15" fill="rgb(221,106,17)" fg:x="37" fg:w="1"/><text x="4.7899%" y="1055.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (1 samples, 0.12%)</title><rect x="4.5399%" y="1029" width="0.1227%" height="15" fill="rgb(251,142,44)" fg:x="37" fg:w="1"/><text x="4.7899%" y="1039.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (1 samples, 0.12%)</title><rect x="4.5399%" y="1013" width="0.1227%" height="15" fill="rgb(238,13,15)" fg:x="37" fg:w="1"/><text x="4.7899%" y="1023.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (1 samples, 0.12%)</title><rect x="4.5399%" y="997" width="0.1227%" height="15" fill="rgb(208,107,27)" fg:x="37" fg:w="1"/><text x="4.7899%" y="1007.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (1 samples, 0.12%)</title><rect x="4.5399%" y="981" width="0.1227%" height="15" fill="rgb(205,136,37)" fg:x="37" fg:w="1"/><text x="4.7899%" y="991.50"></text></g><g><title>std::io::Read::read_exact (1 samples, 0.12%)</title><rect x="4.5399%" y="965" width="0.1227%" height="15" fill="rgb(250,205,27)" fg:x="37" fg:w="1"/><text x="4.7899%" y="975.50"></text></g><g><title>std::io::default_read_exact (1 samples, 0.12%)</title><rect x="4.5399%" y="949" width="0.1227%" height="15" fill="rgb(210,80,43)" fg:x="37" fg:w="1"/><text x="4.7899%" y="959.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="4.5399%" y="933" width="0.1227%" height="15" fill="rgb(247,160,36)" fg:x="37" fg:w="1"/><text x="4.7899%" y="943.50"></text></g><g><title>sqlite3_blob_read (1 samples, 0.12%)</title><rect x="4.5399%" y="917" width="0.1227%" height="15" fill="rgb(234,13,49)" fg:x="37" fg:w="1"/><text x="4.7899%" y="927.50"></text></g><g><title>blobReadWrite (1 samples, 0.12%)</title><rect x="4.5399%" y="901" width="0.1227%" height="15" fill="rgb(234,122,0)" fg:x="37" fg:w="1"/><text x="4.7899%" y="911.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="4.5399%" y="885" width="0.1227%" height="15" fill="rgb(207,146,38)" fg:x="37" fg:w="1"/><text x="4.7899%" y="895.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="4.5399%" y="869" width="0.1227%" height="15" fill="rgb(207,177,25)" fg:x="37" fg:w="1"/><text x="4.7899%" y="879.50"></text></g><g><title>accessPayload (1 samples, 0.12%)</title><rect x="4.5399%" y="853" width="0.1227%" height="15" fill="rgb(211,178,42)" fg:x="37" fg:w="1"/><text x="4.7899%" y="863.50"></text></g><g><title>getOverflowPage (1 samples, 0.12%)</title><rect x="4.5399%" y="837" width="0.1227%" height="15" fill="rgb(230,69,54)" fg:x="37" fg:w="1"/><text x="4.7899%" y="847.50"></text></g><g><title>sqlite3Get4byte (1 samples, 0.12%)</title><rect x="4.5399%" y="821" width="0.1227%" height="15" fill="rgb(214,135,41)" fg:x="37" fg:w="1"/><text x="4.7899%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.12%)</title><rect x="4.6626%" y="1109" width="0.1227%" height="15" fill="rgb(237,67,25)" fg:x="38" fg:w="1"/><text x="4.9126%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.12%)</title><rect x="4.6626%" y="1093" width="0.1227%" height="15" fill="rgb(222,189,50)" fg:x="38" fg:w="1"/><text x="4.9126%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="4.6626%" y="1077" width="0.1227%" height="15" fill="rgb(245,148,34)" fg:x="38" fg:w="1"/><text x="4.9126%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (1 samples, 0.12%)</title><rect x="4.6626%" y="1061" width="0.1227%" height="15" fill="rgb(222,29,6)" fg:x="38" fg:w="1"/><text x="4.9126%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.12%)</title><rect x="4.6626%" y="1045" width="0.1227%" height="15" fill="rgb(221,189,43)" fg:x="38" fg:w="1"/><text x="4.9126%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.12%)</title><rect x="4.6626%" y="1029" width="0.1227%" height="15" fill="rgb(207,36,27)" fg:x="38" fg:w="1"/><text x="4.9126%" y="1039.50"></text></g><g><title>&lt;rusqlite::row::AndThenRows&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="4.6626%" y="1013" width="0.1227%" height="15" fill="rgb(217,90,24)" fg:x="38" fg:w="1"/><text x="4.9126%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.12%)</title><rect x="4.6626%" y="997" width="0.1227%" height="15" fill="rgb(224,66,35)" fg:x="38" fg:w="1"/><text x="4.9126%" y="1007.50"></text></g><g><title>&lt;rusqlite::row::AndThenRows&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (1 samples, 0.12%)</title><rect x="4.6626%" y="981" width="0.1227%" height="15" fill="rgb(221,13,50)" fg:x="38" fg:w="1"/><text x="4.9126%" y="991.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.12%)</title><rect x="4.6626%" y="965" width="0.1227%" height="15" fill="rgb(236,68,49)" fg:x="38" fg:w="1"/><text x="4.9126%" y="975.50"></text></g><g><title>&lt;rusqlite::row::AndThenRows&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="4.6626%" y="949" width="0.1227%" height="15" fill="rgb(229,146,28)" fg:x="38" fg:w="1"/><text x="4.9126%" y="959.50"></text></g><g><title>blockstack_lib::util::db::query_rows::{{closure}} (1 samples, 0.12%)</title><rect x="4.6626%" y="933" width="0.1227%" height="15" fill="rgb(225,31,38)" fg:x="38" fg:w="1"/><text x="4.9126%" y="943.50"></text></g><g><title>&lt;blockstack_lib::core::mempool::MemPoolTxInfo as blockstack_lib::util::db::FromRow&lt;blockstack_lib::core::mempool::MemPoolTxInfo&gt;&gt;::from_row (1 samples, 0.12%)</title><rect x="4.6626%" y="917" width="0.1227%" height="15" fill="rgb(250,208,3)" fg:x="38" fg:w="1"/><text x="4.9126%" y="927.50"></text></g><g><title>blockstack_lib::chainstate::stacks::transaction::&lt;impl blockstack_lib::codec::StacksMessageCodec for blockstack_lib::chainstate::stacks::StacksTransaction&gt;::consensus_deserialize (1 samples, 0.12%)</title><rect x="4.6626%" y="901" width="0.1227%" height="15" fill="rgb(246,54,23)" fg:x="38" fg:w="1"/><text x="4.9126%" y="911.50"></text></g><g><title>blockstack_lib::chainstate::stacks::transaction::&lt;impl blockstack_lib::chainstate::stacks::StacksTransaction&gt;::consensus_deserialize_with_len (1 samples, 0.12%)</title><rect x="4.6626%" y="885" width="0.1227%" height="15" fill="rgb(243,76,11)" fg:x="38" fg:w="1"/><text x="4.9126%" y="895.50"></text></g><g><title>blockstack_lib::codec::read_next (1 samples, 0.12%)</title><rect x="4.6626%" y="869" width="0.1227%" height="15" fill="rgb(245,21,50)" fg:x="38" fg:w="1"/><text x="4.9126%" y="879.50"></text></g><g><title>blockstack_lib::chainstate::stacks::transaction::&lt;impl blockstack_lib::codec::StacksMessageCodec for blockstack_lib::chainstate::stacks::TransactionPayload&gt;::consensus_deserialize (1 samples, 0.12%)</title><rect x="4.6626%" y="853" width="0.1227%" height="15" fill="rgb(228,9,43)" fg:x="38" fg:w="1"/><text x="4.9126%" y="863.50"></text></g><g><title>blockstack_lib::codec::read_next (1 samples, 0.12%)</title><rect x="4.6626%" y="837" width="0.1227%" height="15" fill="rgb(208,100,47)" fg:x="38" fg:w="1"/><text x="4.9126%" y="847.50"></text></g><g><title>blockstack_lib::chainstate::stacks::transaction::&lt;impl blockstack_lib::codec::StacksMessageCodec for blockstack_lib::chainstate::stacks::TransactionContractCall&gt;::consensus_deserialize (1 samples, 0.12%)</title><rect x="4.6626%" y="821" width="0.1227%" height="15" fill="rgb(232,26,8)" fg:x="38" fg:w="1"/><text x="4.9126%" y="831.50"></text></g><g><title>blockstack_lib::util::strings::StacksString::is_clarity_variable (1 samples, 0.12%)</title><rect x="4.6626%" y="805" width="0.1227%" height="15" fill="rgb(216,166,38)" fg:x="38" fg:w="1"/><text x="4.9126%" y="815.50"></text></g><g><title>blockstack_lib::vm::ast::parser::lex (1 samples, 0.12%)</title><rect x="4.6626%" y="789" width="0.1227%" height="15" fill="rgb(251,202,51)" fg:x="38" fg:w="1"/><text x="4.9126%" y="799.50"></text></g><g><title>blockstack_lib::vm::ast::parser::LexMatcher::new (1 samples, 0.12%)</title><rect x="4.6626%" y="773" width="0.1227%" height="15" fill="rgb(254,216,34)" fg:x="38" fg:w="1"/><text x="4.9126%" y="783.50"></text></g><g><title>regex::re_unicode::Regex::new (1 samples, 0.12%)</title><rect x="4.6626%" y="757" width="0.1227%" height="15" fill="rgb(251,32,27)" fg:x="38" fg:w="1"/><text x="4.9126%" y="767.50"></text></g><g><title>regex::re_builder::set_unicode::RegexSetBuilder::build (1 samples, 0.12%)</title><rect x="4.6626%" y="741" width="0.1227%" height="15" fill="rgb(208,127,28)" fg:x="38" fg:w="1"/><text x="4.9126%" y="751.50"></text></g><g><title>regex::exec::ExecBuilder::build (1 samples, 0.12%)</title><rect x="4.6626%" y="725" width="0.1227%" height="15" fill="rgb(224,137,22)" fg:x="38" fg:w="1"/><text x="4.9126%" y="735.50"></text></g><g><title>regex::compile::Compiler::compile (1 samples, 0.12%)</title><rect x="4.6626%" y="709" width="0.1227%" height="15" fill="rgb(254,70,32)" fg:x="38" fg:w="1"/><text x="4.9126%" y="719.50"></text></g><g><title>regex::compile::Compiler::compile_one (1 samples, 0.12%)</title><rect x="4.6626%" y="693" width="0.1227%" height="15" fill="rgb(229,75,37)" fg:x="38" fg:w="1"/><text x="4.9126%" y="703.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.12%)</title><rect x="4.6626%" y="677" width="0.1227%" height="15" fill="rgb(252,64,23)" fg:x="38" fg:w="1"/><text x="4.9126%" y="687.50"></text></g><g><title>regex::compile::Compiler::c_concat (1 samples, 0.12%)</title><rect x="4.6626%" y="661" width="0.1227%" height="15" fill="rgb(232,162,48)" fg:x="38" fg:w="1"/><text x="4.9126%" y="671.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.12%)</title><rect x="4.6626%" y="645" width="0.1227%" height="15" fill="rgb(246,160,12)" fg:x="38" fg:w="1"/><text x="4.9126%" y="655.50"></text></g><g><title>regex::compile::Compiler::c_repeat_range (1 samples, 0.12%)</title><rect x="4.6626%" y="629" width="0.1227%" height="15" fill="rgb(247,166,0)" fg:x="38" fg:w="1"/><text x="4.9126%" y="639.50"></text></g><g><title>regex::compile::Compiler::c_alternate (1 samples, 0.12%)</title><rect x="4.6626%" y="613" width="0.1227%" height="15" fill="rgb(249,219,21)" fg:x="38" fg:w="1"/><text x="4.9126%" y="623.50"></text></g><g><title>regex::compile::Compiler::c_class (1 samples, 0.12%)</title><rect x="4.6626%" y="597" width="0.1227%" height="15" fill="rgb(205,209,3)" fg:x="38" fg:w="1"/><text x="4.9126%" y="607.50"></text></g><g><title>regex::compile::CompileClass::compile (1 samples, 0.12%)</title><rect x="4.6626%" y="581" width="0.1227%" height="15" fill="rgb(243,44,1)" fg:x="38" fg:w="1"/><text x="4.9126%" y="591.50"></text></g><g><title>regex::compile::Compiler::fill (1 samples, 0.12%)</title><rect x="4.6626%" y="565" width="0.1227%" height="15" fill="rgb(206,159,16)" fg:x="38" fg:w="1"/><text x="4.9126%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.12%)</title><rect x="4.7853%" y="1029" width="0.1227%" height="15" fill="rgb(244,77,30)" fg:x="39" fg:w="1"/><text x="5.0353%" y="1039.50"></text></g><g><title>&lt;rusqlite::row::AndThenRows&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (1 samples, 0.12%)</title><rect x="4.7853%" y="1013" width="0.1227%" height="15" fill="rgb(218,69,12)" fg:x="39" fg:w="1"/><text x="5.0353%" y="1023.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.12%)</title><rect x="4.7853%" y="997" width="0.1227%" height="15" fill="rgb(212,87,7)" fg:x="39" fg:w="1"/><text x="5.0353%" y="1007.50"></text></g><g><title>&lt;rusqlite::row::AndThenRows&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="4.7853%" y="981" width="0.1227%" height="15" fill="rgb(245,114,25)" fg:x="39" fg:w="1"/><text x="5.0353%" y="991.50"></text></g><g><title>blockstack_lib::util::db::query_rows::{{closure}} (1 samples, 0.12%)</title><rect x="4.7853%" y="965" width="0.1227%" height="15" fill="rgb(210,61,42)" fg:x="39" fg:w="1"/><text x="5.0353%" y="975.50"></text></g><g><title>&lt;blockstack_lib::core::mempool::MemPoolTxInfo as blockstack_lib::util::db::FromRow&lt;blockstack_lib::core::mempool::MemPoolTxInfo&gt;&gt;::from_row (1 samples, 0.12%)</title><rect x="4.7853%" y="949" width="0.1227%" height="15" fill="rgb(211,52,33)" fg:x="39" fg:w="1"/><text x="5.0353%" y="959.50"></text></g><g><title>blockstack_lib::chainstate::stacks::transaction::&lt;impl blockstack_lib::codec::StacksMessageCodec for blockstack_lib::chainstate::stacks::StacksTransaction&gt;::consensus_deserialize (1 samples, 0.12%)</title><rect x="4.7853%" y="933" width="0.1227%" height="15" fill="rgb(234,58,33)" fg:x="39" fg:w="1"/><text x="5.0353%" y="943.50"></text></g><g><title>blockstack_lib::chainstate::stacks::transaction::&lt;impl blockstack_lib::chainstate::stacks::StacksTransaction&gt;::consensus_deserialize_with_len (1 samples, 0.12%)</title><rect x="4.7853%" y="917" width="0.1227%" height="15" fill="rgb(220,115,36)" fg:x="39" fg:w="1"/><text x="5.0353%" y="927.50"></text></g><g><title>blockstack_lib::codec::read_next (1 samples, 0.12%)</title><rect x="4.7853%" y="901" width="0.1227%" height="15" fill="rgb(243,153,54)" fg:x="39" fg:w="1"/><text x="5.0353%" y="911.50"></text></g><g><title>blockstack_lib::chainstate::stacks::auth::&lt;impl blockstack_lib::codec::StacksMessageCodec for blockstack_lib::chainstate::stacks::TransactionAuth&gt;::consensus_deserialize (1 samples, 0.12%)</title><rect x="4.7853%" y="885" width="0.1227%" height="15" fill="rgb(251,47,18)" fg:x="39" fg:w="1"/><text x="5.0353%" y="895.50"></text></g><g><title>blockstack_lib::codec::read_next (1 samples, 0.12%)</title><rect x="4.7853%" y="869" width="0.1227%" height="15" fill="rgb(242,102,42)" fg:x="39" fg:w="1"/><text x="5.0353%" y="879.50"></text></g><g><title>blockstack_lib::chainstate::stacks::auth::&lt;impl blockstack_lib::codec::StacksMessageCodec for blockstack_lib::chainstate::stacks::TransactionSpendingCondition&gt;::consensus_deserialize (1 samples, 0.12%)</title><rect x="4.7853%" y="853" width="0.1227%" height="15" fill="rgb(234,31,38)" fg:x="39" fg:w="1"/><text x="5.0353%" y="863.50"></text></g><g><title>blockstack_lib::chainstate::stacks::auth::&lt;impl blockstack_lib::codec::StacksMessageCodec for blockstack_lib::chainstate::stacks::SinglesigSpendingCondition&gt;::consensus_deserialize (1 samples, 0.12%)</title><rect x="4.7853%" y="837" width="0.1227%" height="15" fill="rgb(221,117,51)" fg:x="39" fg:w="1"/><text x="5.0353%" y="847.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.12%)</title><rect x="4.7853%" y="821" width="0.1227%" height="15" fill="rgb(212,20,18)" fg:x="39" fg:w="1"/><text x="5.0353%" y="831.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.12%)</title><rect x="4.7853%" y="805" width="0.1227%" height="15" fill="rgb(245,133,36)" fg:x="39" fg:w="1"/><text x="5.0353%" y="815.50"></text></g><g><title>core::fmt::write (1 samples, 0.12%)</title><rect x="4.7853%" y="789" width="0.1227%" height="15" fill="rgb(212,6,19)" fg:x="39" fg:w="1"/><text x="5.0353%" y="799.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (1 samples, 0.12%)</title><rect x="4.7853%" y="773" width="0.1227%" height="15" fill="rgb(218,1,36)" fg:x="39" fg:w="1"/><text x="5.0353%" y="783.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.12%)</title><rect x="4.7853%" y="757" width="0.1227%" height="15" fill="rgb(246,84,54)" fg:x="39" fg:w="1"/><text x="5.0353%" y="767.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.12%)</title><rect x="4.7853%" y="741" width="0.1227%" height="15" fill="rgb(242,110,6)" fg:x="39" fg:w="1"/><text x="5.0353%" y="751.50"></text></g><g><title>sqlite3BtreeMovetoUnpacked (3 samples, 0.37%)</title><rect x="4.9080%" y="901" width="0.3681%" height="15" fill="rgb(214,47,5)" fg:x="40" fg:w="3"/><text x="5.1580%" y="911.50"></text></g><g><title>sqlite3BtreePayloadSize (1 samples, 0.12%)</title><rect x="5.2761%" y="901" width="0.1227%" height="15" fill="rgb(218,159,25)" fg:x="43" fg:w="1"/><text x="5.5261%" y="911.50"></text></g><g><title>btreeParseCellPtr (1 samples, 0.12%)</title><rect x="5.2761%" y="885" width="0.1227%" height="15" fill="rgb(215,211,28)" fg:x="43" fg:w="1"/><text x="5.5261%" y="895.50"></text></g><g><title>blockstack_lib::core::mempool::MemPoolDB::estimate_tx_rates (7 samples, 0.86%)</title><rect x="4.6626%" y="1269" width="0.8589%" height="15" fill="rgb(238,59,32)" fg:x="38" fg:w="7"/><text x="4.9126%" y="1279.50"></text></g><g><title>blockstack_lib::util::db::query_rows (7 samples, 0.86%)</title><rect x="4.6626%" y="1253" width="0.8589%" height="15" fill="rgb(226,82,3)" fg:x="38" fg:w="7"/><text x="4.9126%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (7 samples, 0.86%)</title><rect x="4.6626%" y="1237" width="0.8589%" height="15" fill="rgb(240,164,32)" fg:x="38" fg:w="7"/><text x="4.9126%" y="1247.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (7 samples, 0.86%)</title><rect x="4.6626%" y="1221" width="0.8589%" height="15" fill="rgb(232,46,7)" fg:x="38" fg:w="7"/><text x="4.9126%" y="1231.50"></text></g><g><title>core::iter::adapters::process_results (7 samples, 0.86%)</title><rect x="4.6626%" y="1205" width="0.8589%" height="15" fill="rgb(229,129,53)" fg:x="38" fg:w="7"/><text x="4.9126%" y="1215.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (7 samples, 0.86%)</title><rect x="4.6626%" y="1189" width="0.8589%" height="15" fill="rgb(234,188,29)" fg:x="38" fg:w="7"/><text x="4.9126%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (7 samples, 0.86%)</title><rect x="4.6626%" y="1173" width="0.8589%" height="15" fill="rgb(246,141,4)" fg:x="38" fg:w="7"/><text x="4.9126%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (7 samples, 0.86%)</title><rect x="4.6626%" y="1157" width="0.8589%" height="15" fill="rgb(229,23,39)" fg:x="38" fg:w="7"/><text x="4.9126%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.86%)</title><rect x="4.6626%" y="1141" width="0.8589%" height="15" fill="rgb(206,12,3)" fg:x="38" fg:w="7"/><text x="4.9126%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (7 samples, 0.86%)</title><rect x="4.6626%" y="1125" width="0.8589%" height="15" fill="rgb(252,226,20)" fg:x="38" fg:w="7"/><text x="4.9126%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.74%)</title><rect x="4.7853%" y="1109" width="0.7362%" height="15" fill="rgb(216,123,35)" fg:x="39" fg:w="6"/><text x="5.0353%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (6 samples, 0.74%)</title><rect x="4.7853%" y="1093" width="0.7362%" height="15" fill="rgb(212,68,40)" fg:x="39" fg:w="6"/><text x="5.0353%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::ResultShunt&lt;I,E&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.74%)</title><rect x="4.7853%" y="1077" width="0.7362%" height="15" fill="rgb(254,125,32)" fg:x="39" fg:w="6"/><text x="5.0353%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.74%)</title><rect x="4.7853%" y="1061" width="0.7362%" height="15" fill="rgb(253,97,22)" fg:x="39" fg:w="6"/><text x="5.0353%" y="1071.50"></text></g><g><title>&lt;rusqlite::row::AndThenRows&lt;F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.74%)</title><rect x="4.7853%" y="1045" width="0.7362%" height="15" fill="rgb(241,101,14)" fg:x="39" fg:w="6"/><text x="5.0353%" y="1055.50"></text></g><g><title>rusqlite::row::Rows::next (5 samples, 0.61%)</title><rect x="4.9080%" y="1029" width="0.6135%" height="15" fill="rgb(238,103,29)" fg:x="40" fg:w="5"/><text x="5.1580%" y="1039.50"></text></g><g><title>&lt;rusqlite::row::Rows as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (5 samples, 0.61%)</title><rect x="4.9080%" y="1013" width="0.6135%" height="15" fill="rgb(233,195,47)" fg:x="40" fg:w="5"/><text x="5.1580%" y="1023.50"></text></g><g><title>rusqlite::statement::Statement::step (5 samples, 0.61%)</title><rect x="4.9080%" y="997" width="0.6135%" height="15" fill="rgb(246,218,30)" fg:x="40" fg:w="5"/><text x="5.1580%" y="1007.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (5 samples, 0.61%)</title><rect x="4.9080%" y="981" width="0.6135%" height="15" fill="rgb(219,145,47)" fg:x="40" fg:w="5"/><text x="5.1580%" y="991.50"></text></g><g><title>sqlite3_step (5 samples, 0.61%)</title><rect x="4.9080%" y="965" width="0.6135%" height="15" fill="rgb(243,12,26)" fg:x="40" fg:w="5"/><text x="5.1580%" y="975.50"></text></g><g><title>sqlite3_step (5 samples, 0.61%)</title><rect x="4.9080%" y="949" width="0.6135%" height="15" fill="rgb(214,87,16)" fg:x="40" fg:w="5"/><text x="5.1580%" y="959.50"></text></g><g><title>sqlite3Step (5 samples, 0.61%)</title><rect x="4.9080%" y="933" width="0.6135%" height="15" fill="rgb(208,99,42)" fg:x="40" fg:w="5"/><text x="5.1580%" y="943.50"></text></g><g><title>sqlite3VdbeExec (5 samples, 0.61%)</title><rect x="4.9080%" y="917" width="0.6135%" height="15" fill="rgb(253,99,2)" fg:x="40" fg:w="5"/><text x="5.1580%" y="927.50"></text></g><g><title>sqlite3VdbeSerialGet (1 samples, 0.12%)</title><rect x="5.3988%" y="901" width="0.1227%" height="15" fill="rgb(220,168,23)" fg:x="44" fg:w="1"/><text x="5.6488%" y="911.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::node::TrieCursor&lt;T&gt;::repair_backptr_step_backptr (1 samples, 0.12%)</title><rect x="5.6442%" y="933" width="0.1227%" height="15" fill="rgb(242,38,24)" fg:x="46" fg:w="1"/><text x="5.8942%" y="943.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::node::TrieNodeType as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="5.6442%" y="917" width="0.1227%" height="15" fill="rgb(225,182,9)" fg:x="46" fg:w="1"/><text x="5.8942%" y="927.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="5.6442%" y="901" width="0.1227%" height="15" fill="rgb(243,178,37)" fg:x="46" fg:w="1"/><text x="5.8942%" y="911.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (1 samples, 0.12%)</title><rect x="5.6442%" y="885" width="0.1227%" height="15" fill="rgb(232,139,19)" fg:x="46" fg:w="1"/><text x="5.8942%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (1 samples, 0.12%)</title><rect x="5.6442%" y="869" width="0.1227%" height="15" fill="rgb(225,201,24)" fg:x="46" fg:w="1"/><text x="5.8942%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.12%)</title><rect x="5.6442%" y="853" width="0.1227%" height="15" fill="rgb(221,47,46)" fg:x="46" fg:w="1"/><text x="5.8942%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.12%)</title><rect x="5.6442%" y="837" width="0.1227%" height="15" fill="rgb(249,23,13)" fg:x="46" fg:w="1"/><text x="5.8942%" y="847.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.12%)</title><rect x="5.6442%" y="821" width="0.1227%" height="15" fill="rgb(219,9,5)" fg:x="46" fg:w="1"/><text x="5.8942%" y="831.50"></text></g><g><title>malloc (1 samples, 0.12%)</title><rect x="5.6442%" y="805" width="0.1227%" height="15" fill="rgb(254,171,16)" fg:x="46" fg:w="1"/><text x="5.8942%" y="815.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_backptr (6 samples, 0.74%)</title><rect x="5.6442%" y="965" width="0.7362%" height="15" fill="rgb(230,171,20)" fg:x="46" fg:w="6"/><text x="5.8942%" y="975.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_backptr (6 samples, 0.74%)</title><rect x="5.6442%" y="949" width="0.7362%" height="15" fill="rgb(210,71,41)" fg:x="46" fg:w="6"/><text x="5.8942%" y="959.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (5 samples, 0.61%)</title><rect x="5.7669%" y="933" width="0.6135%" height="15" fill="rgb(206,173,20)" fg:x="47" fg:w="5"/><text x="6.0169%" y="943.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (5 samples, 0.61%)</title><rect x="5.7669%" y="917" width="0.6135%" height="15" fill="rgb(233,88,34)" fg:x="47" fg:w="5"/><text x="6.0169%" y="927.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (5 samples, 0.61%)</title><rect x="5.7669%" y="901" width="0.6135%" height="15" fill="rgb(223,209,46)" fg:x="47" fg:w="5"/><text x="6.0169%" y="911.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (5 samples, 0.61%)</title><rect x="5.7669%" y="885" width="0.6135%" height="15" fill="rgb(250,43,18)" fg:x="47" fg:w="5"/><text x="6.0169%" y="895.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (4 samples, 0.49%)</title><rect x="5.8896%" y="869" width="0.4908%" height="15" fill="rgb(208,13,10)" fg:x="48" fg:w="4"/><text x="6.1396%" y="879.50"></text></g><g><title>std::io::Read::read_exact (4 samples, 0.49%)</title><rect x="5.8896%" y="853" width="0.4908%" height="15" fill="rgb(212,200,36)" fg:x="48" fg:w="4"/><text x="6.1396%" y="863.50"></text></g><g><title>std::io::default_read_exact (4 samples, 0.49%)</title><rect x="5.8896%" y="837" width="0.4908%" height="15" fill="rgb(225,90,30)" fg:x="48" fg:w="4"/><text x="6.1396%" y="847.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (4 samples, 0.49%)</title><rect x="5.8896%" y="821" width="0.4908%" height="15" fill="rgb(236,182,39)" fg:x="48" fg:w="4"/><text x="6.1396%" y="831.50"></text></g><g><title>sqlite3_blob_read (4 samples, 0.49%)</title><rect x="5.8896%" y="805" width="0.4908%" height="15" fill="rgb(212,144,35)" fg:x="48" fg:w="4"/><text x="6.1396%" y="815.50"></text></g><g><title>blobReadWrite (4 samples, 0.49%)</title><rect x="5.8896%" y="789" width="0.4908%" height="15" fill="rgb(228,63,44)" fg:x="48" fg:w="4"/><text x="6.1396%" y="799.50"></text></g><g><title>sqlite3BtreePayloadChecked (4 samples, 0.49%)</title><rect x="5.8896%" y="773" width="0.4908%" height="15" fill="rgb(228,109,6)" fg:x="48" fg:w="4"/><text x="6.1396%" y="783.50"></text></g><g><title>sqlite3BtreePayloadChecked (4 samples, 0.49%)</title><rect x="5.8896%" y="757" width="0.4908%" height="15" fill="rgb(238,117,24)" fg:x="48" fg:w="4"/><text x="6.1396%" y="767.50"></text></g><g><title>accessPayload (4 samples, 0.49%)</title><rect x="5.8896%" y="741" width="0.4908%" height="15" fill="rgb(242,26,26)" fg:x="48" fg:w="4"/><text x="6.1396%" y="751.50"></text></g><g><title>getOverflowPage (4 samples, 0.49%)</title><rect x="5.8896%" y="725" width="0.4908%" height="15" fill="rgb(221,92,48)" fg:x="48" fg:w="4"/><text x="6.1396%" y="735.50"></text></g><g><title>btreeGetPage (4 samples, 0.49%)</title><rect x="5.8896%" y="709" width="0.4908%" height="15" fill="rgb(209,209,32)" fg:x="48" fg:w="4"/><text x="6.1396%" y="719.50"></text></g><g><title>sqlite3PagerGet (4 samples, 0.49%)</title><rect x="5.8896%" y="693" width="0.4908%" height="15" fill="rgb(221,70,22)" fg:x="48" fg:w="4"/><text x="6.1396%" y="703.50"></text></g><g><title>getPageMMap (4 samples, 0.49%)</title><rect x="5.8896%" y="677" width="0.4908%" height="15" fill="rgb(248,145,5)" fg:x="48" fg:w="4"/><text x="6.1396%" y="687.50"></text></g><g><title>getPageNormal (4 samples, 0.49%)</title><rect x="5.8896%" y="661" width="0.4908%" height="15" fill="rgb(226,116,26)" fg:x="48" fg:w="4"/><text x="6.1396%" y="671.50"></text></g><g><title>readDbPage (4 samples, 0.49%)</title><rect x="5.8896%" y="645" width="0.4908%" height="15" fill="rgb(244,5,17)" fg:x="48" fg:w="4"/><text x="6.1396%" y="655.50"></text></g><g><title>sqlite3OsRead (4 samples, 0.49%)</title><rect x="5.8896%" y="629" width="0.4908%" height="15" fill="rgb(252,159,33)" fg:x="48" fg:w="4"/><text x="6.1396%" y="639.50"></text></g><g><title>unixRead (4 samples, 0.49%)</title><rect x="5.8896%" y="613" width="0.4908%" height="15" fill="rgb(206,71,0)" fg:x="48" fg:w="4"/><text x="6.1396%" y="623.50"></text></g><g><title>seekAndRead (4 samples, 0.49%)</title><rect x="5.8896%" y="597" width="0.4908%" height="15" fill="rgb(233,118,54)" fg:x="48" fg:w="4"/><text x="6.1396%" y="607.50"></text></g><g><title>read (4 samples, 0.49%)</title><rect x="5.8896%" y="581" width="0.4908%" height="15" fill="rgb(234,83,48)" fg:x="48" fg:w="4"/><text x="6.1396%" y="591.50"></text></g><g><title>__lseek64 (1 samples, 0.12%)</title><rect x="6.3804%" y="597" width="0.1227%" height="15" fill="rgb(228,3,54)" fg:x="52" fg:w="1"/><text x="6.6304%" y="607.50"></text></g><g><title>readDbPage (2 samples, 0.25%)</title><rect x="6.3804%" y="661" width="0.2454%" height="15" fill="rgb(226,155,13)" fg:x="52" fg:w="2"/><text x="6.6304%" y="671.50"></text></g><g><title>sqlite3OsRead (2 samples, 0.25%)</title><rect x="6.3804%" y="645" width="0.2454%" height="15" fill="rgb(241,28,37)" fg:x="52" fg:w="2"/><text x="6.6304%" y="655.50"></text></g><g><title>unixRead (2 samples, 0.25%)</title><rect x="6.3804%" y="629" width="0.2454%" height="15" fill="rgb(233,93,10)" fg:x="52" fg:w="2"/><text x="6.6304%" y="639.50"></text></g><g><title>seekAndRead (2 samples, 0.25%)</title><rect x="6.3804%" y="613" width="0.2454%" height="15" fill="rgb(225,113,19)" fg:x="52" fg:w="2"/><text x="6.6304%" y="623.50"></text></g><g><title>read (1 samples, 0.12%)</title><rect x="6.5031%" y="597" width="0.1227%" height="15" fill="rgb(241,2,18)" fg:x="53" fg:w="1"/><text x="6.7531%" y="607.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get (10 samples, 1.23%)</title><rect x="5.5215%" y="1061" width="1.2270%" height="15" fill="rgb(228,207,21)" fg:x="45" fg:w="10"/><text x="5.7715%" y="1071.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt; as blockstack_lib::chainstate::stacks::index::marf::MarfConnection&lt;T&gt;&gt;::with_conn (10 samples, 1.23%)</title><rect x="5.5215%" y="1045" width="1.2270%" height="15" fill="rgb(213,211,35)" fg:x="45" fg:w="10"/><text x="5.7715%" y="1055.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get::{{closure}} (10 samples, 1.23%)</title><rect x="5.5215%" y="1029" width="1.2270%" height="15" fill="rgb(209,83,10)" fg:x="45" fg:w="10"/><text x="5.7715%" y="1039.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_by_key (10 samples, 1.23%)</title><rect x="5.5215%" y="1013" width="1.2270%" height="15" fill="rgb(209,164,1)" fg:x="45" fg:w="10"/><text x="5.7715%" y="1023.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_path (10 samples, 1.23%)</title><rect x="5.5215%" y="997" width="1.2270%" height="15" fill="rgb(213,184,43)" fg:x="45" fg:w="10"/><text x="5.7715%" y="1007.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk (10 samples, 1.23%)</title><rect x="5.5215%" y="981" width="1.2270%" height="15" fill="rgb(231,61,34)" fg:x="45" fg:w="10"/><text x="5.7715%" y="991.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_from (3 samples, 0.37%)</title><rect x="6.3804%" y="965" width="0.3681%" height="15" fill="rgb(235,75,3)" fg:x="52" fg:w="3"/><text x="6.6304%" y="975.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (3 samples, 0.37%)</title><rect x="6.3804%" y="949" width="0.3681%" height="15" fill="rgb(220,106,47)" fg:x="52" fg:w="3"/><text x="6.6304%" y="959.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (3 samples, 0.37%)</title><rect x="6.3804%" y="933" width="0.3681%" height="15" fill="rgb(210,196,33)" fg:x="52" fg:w="3"/><text x="6.6304%" y="943.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (3 samples, 0.37%)</title><rect x="6.3804%" y="917" width="0.3681%" height="15" fill="rgb(229,154,42)" fg:x="52" fg:w="3"/><text x="6.6304%" y="927.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (3 samples, 0.37%)</title><rect x="6.3804%" y="901" width="0.3681%" height="15" fill="rgb(228,114,26)" fg:x="52" fg:w="3"/><text x="6.6304%" y="911.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (3 samples, 0.37%)</title><rect x="6.3804%" y="885" width="0.3681%" height="15" fill="rgb(208,144,1)" fg:x="52" fg:w="3"/><text x="6.6304%" y="895.50"></text></g><g><title>std::io::Read::read_exact (3 samples, 0.37%)</title><rect x="6.3804%" y="869" width="0.3681%" height="15" fill="rgb(239,112,37)" fg:x="52" fg:w="3"/><text x="6.6304%" y="879.50"></text></g><g><title>std::io::default_read_exact (3 samples, 0.37%)</title><rect x="6.3804%" y="853" width="0.3681%" height="15" fill="rgb(210,96,50)" fg:x="52" fg:w="3"/><text x="6.6304%" y="863.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (3 samples, 0.37%)</title><rect x="6.3804%" y="837" width="0.3681%" height="15" fill="rgb(222,178,2)" fg:x="52" fg:w="3"/><text x="6.6304%" y="847.50"></text></g><g><title>sqlite3_blob_read (3 samples, 0.37%)</title><rect x="6.3804%" y="821" width="0.3681%" height="15" fill="rgb(226,74,18)" fg:x="52" fg:w="3"/><text x="6.6304%" y="831.50"></text></g><g><title>blobReadWrite (3 samples, 0.37%)</title><rect x="6.3804%" y="805" width="0.3681%" height="15" fill="rgb(225,67,54)" fg:x="52" fg:w="3"/><text x="6.6304%" y="815.50"></text></g><g><title>sqlite3BtreePayloadChecked (3 samples, 0.37%)</title><rect x="6.3804%" y="789" width="0.3681%" height="15" fill="rgb(251,92,32)" fg:x="52" fg:w="3"/><text x="6.6304%" y="799.50"></text></g><g><title>sqlite3BtreePayloadChecked (3 samples, 0.37%)</title><rect x="6.3804%" y="773" width="0.3681%" height="15" fill="rgb(228,149,22)" fg:x="52" fg:w="3"/><text x="6.6304%" y="783.50"></text></g><g><title>accessPayload (3 samples, 0.37%)</title><rect x="6.3804%" y="757" width="0.3681%" height="15" fill="rgb(243,54,13)" fg:x="52" fg:w="3"/><text x="6.6304%" y="767.50"></text></g><g><title>getOverflowPage (3 samples, 0.37%)</title><rect x="6.3804%" y="741" width="0.3681%" height="15" fill="rgb(243,180,28)" fg:x="52" fg:w="3"/><text x="6.6304%" y="751.50"></text></g><g><title>btreeGetPage (3 samples, 0.37%)</title><rect x="6.3804%" y="725" width="0.3681%" height="15" fill="rgb(208,167,24)" fg:x="52" fg:w="3"/><text x="6.6304%" y="735.50"></text></g><g><title>sqlite3PagerGet (3 samples, 0.37%)</title><rect x="6.3804%" y="709" width="0.3681%" height="15" fill="rgb(245,73,45)" fg:x="52" fg:w="3"/><text x="6.6304%" y="719.50"></text></g><g><title>getPageMMap (3 samples, 0.37%)</title><rect x="6.3804%" y="693" width="0.3681%" height="15" fill="rgb(237,203,48)" fg:x="52" fg:w="3"/><text x="6.6304%" y="703.50"></text></g><g><title>getPageNormal (3 samples, 0.37%)</title><rect x="6.3804%" y="677" width="0.3681%" height="15" fill="rgb(211,197,16)" fg:x="52" fg:w="3"/><text x="6.6304%" y="687.50"></text></g><g><title>sqlite3PcacheFetch (1 samples, 0.12%)</title><rect x="6.6258%" y="661" width="0.1227%" height="15" fill="rgb(243,99,51)" fg:x="54" fg:w="1"/><text x="6.8758%" y="671.50"></text></g><g><title>pcache1Fetch (1 samples, 0.12%)</title><rect x="6.6258%" y="645" width="0.1227%" height="15" fill="rgb(215,123,29)" fg:x="54" fg:w="1"/><text x="6.8758%" y="655.50"></text></g><g><title>pcache1FetchWithMutex (1 samples, 0.12%)</title><rect x="6.6258%" y="629" width="0.1227%" height="15" fill="rgb(239,186,37)" fg:x="54" fg:w="1"/><text x="6.8758%" y="639.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.12%)</title><rect x="6.6258%" y="613" width="0.1227%" height="15" fill="rgb(252,136,39)" fg:x="54" fg:w="1"/><text x="6.8758%" y="623.50"></text></g><g><title>moveToChild (1 samples, 0.12%)</title><rect x="6.7485%" y="805" width="0.1227%" height="15" fill="rgb(223,213,32)" fg:x="55" fg:w="1"/><text x="6.9985%" y="815.50"></text></g><g><title>getAndInitPage (1 samples, 0.12%)</title><rect x="6.7485%" y="789" width="0.1227%" height="15" fill="rgb(233,115,5)" fg:x="55" fg:w="1"/><text x="6.9985%" y="799.50"></text></g><g><title>sqlite3PagerGet (1 samples, 0.12%)</title><rect x="6.7485%" y="773" width="0.1227%" height="15" fill="rgb(207,226,44)" fg:x="55" fg:w="1"/><text x="6.9985%" y="783.50"></text></g><g><title>getPageMMap (1 samples, 0.12%)</title><rect x="6.7485%" y="757" width="0.1227%" height="15" fill="rgb(208,126,0)" fg:x="55" fg:w="1"/><text x="6.9985%" y="767.50"></text></g><g><title>getPageNormal (1 samples, 0.12%)</title><rect x="6.7485%" y="741" width="0.1227%" height="15" fill="rgb(244,66,21)" fg:x="55" fg:w="1"/><text x="6.9985%" y="751.50"></text></g><g><title>readDbPage (1 samples, 0.12%)</title><rect x="6.7485%" y="725" width="0.1227%" height="15" fill="rgb(222,97,12)" fg:x="55" fg:w="1"/><text x="6.9985%" y="735.50"></text></g><g><title>sqlite3OsRead (1 samples, 0.12%)</title><rect x="6.7485%" y="709" width="0.1227%" height="15" fill="rgb(219,213,19)" fg:x="55" fg:w="1"/><text x="6.9985%" y="719.50"></text></g><g><title>unixRead (1 samples, 0.12%)</title><rect x="6.7485%" y="693" width="0.1227%" height="15" fill="rgb(252,169,30)" fg:x="55" fg:w="1"/><text x="6.9985%" y="703.50"></text></g><g><title>seekAndRead (1 samples, 0.12%)</title><rect x="6.7485%" y="677" width="0.1227%" height="15" fill="rgb(206,32,51)" fg:x="55" fg:w="1"/><text x="6.9985%" y="687.50"></text></g><g><title>read (1 samples, 0.12%)</title><rect x="6.7485%" y="661" width="0.1227%" height="15" fill="rgb(250,172,42)" fg:x="55" fg:w="1"/><text x="6.9985%" y="671.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get_account_nonce (12 samples, 1.47%)</title><rect x="5.5215%" y="1157" width="1.4724%" height="15" fill="rgb(209,34,43)" fg:x="45" fg:w="12"/><text x="5.7715%" y="1167.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get (12 samples, 1.47%)</title><rect x="5.5215%" y="1141" width="1.4724%" height="15" fill="rgb(223,11,35)" fg:x="45" fg:w="12"/><text x="5.7715%" y="1151.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get (12 samples, 1.47%)</title><rect x="5.5215%" y="1125" width="1.4724%" height="15" fill="rgb(251,219,26)" fg:x="45" fg:w="12"/><text x="5.7715%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (12 samples, 1.47%)</title><rect x="5.5215%" y="1109" width="1.4724%" height="15" fill="rgb(231,119,3)" fg:x="45" fg:w="12"/><text x="5.7715%" y="1119.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get::{{closure}} (12 samples, 1.47%)</title><rect x="5.5215%" y="1093" width="1.4724%" height="15" fill="rgb(216,97,11)" fg:x="45" fg:w="12"/><text x="5.7715%" y="1103.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::get (12 samples, 1.47%)</title><rect x="5.5215%" y="1077" width="1.4724%" height="15" fill="rgb(223,59,9)" fg:x="45" fg:w="12"/><text x="5.7715%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.25%)</title><rect x="6.7485%" y="1061" width="0.2454%" height="15" fill="rgb(233,93,31)" fg:x="55" fg:w="2"/><text x="6.9985%" y="1071.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::get::{{closure}} (2 samples, 0.25%)</title><rect x="6.7485%" y="1045" width="0.2454%" height="15" fill="rgb(239,81,33)" fg:x="55" fg:w="2"/><text x="6.9985%" y="1055.50"></text></g><g><title>blockstack_lib::vm::database::sqlite::SqliteConnection::get (2 samples, 0.25%)</title><rect x="6.7485%" y="1029" width="0.2454%" height="15" fill="rgb(213,120,34)" fg:x="55" fg:w="2"/><text x="6.9985%" y="1039.50"></text></g><g><title>blockstack_lib::vm::database::sqlite::sqlite_get (2 samples, 0.25%)</title><rect x="6.7485%" y="1013" width="0.2454%" height="15" fill="rgb(243,49,53)" fg:x="55" fg:w="2"/><text x="6.9985%" y="1023.50"></text></g><g><title>rusqlite::Connection::query_row (2 samples, 0.25%)</title><rect x="6.7485%" y="997" width="0.2454%" height="15" fill="rgb(247,216,33)" fg:x="55" fg:w="2"/><text x="6.9985%" y="1007.50"></text></g><g><title>rusqlite::statement::Statement::query_row (2 samples, 0.25%)</title><rect x="6.7485%" y="981" width="0.2454%" height="15" fill="rgb(226,26,14)" fg:x="55" fg:w="2"/><text x="6.9985%" y="991.50"></text></g><g><title>rusqlite::row::Rows::get_expected_row (2 samples, 0.25%)</title><rect x="6.7485%" y="965" width="0.2454%" height="15" fill="rgb(215,49,53)" fg:x="55" fg:w="2"/><text x="6.9985%" y="975.50"></text></g><g><title>rusqlite::row::Rows::next (2 samples, 0.25%)</title><rect x="6.7485%" y="949" width="0.2454%" height="15" fill="rgb(245,162,40)" fg:x="55" fg:w="2"/><text x="6.9985%" y="959.50"></text></g><g><title>&lt;rusqlite::row::Rows as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (2 samples, 0.25%)</title><rect x="6.7485%" y="933" width="0.2454%" height="15" fill="rgb(229,68,17)" fg:x="55" fg:w="2"/><text x="6.9985%" y="943.50"></text></g><g><title>rusqlite::statement::Statement::step (2 samples, 0.25%)</title><rect x="6.7485%" y="917" width="0.2454%" height="15" fill="rgb(213,182,10)" fg:x="55" fg:w="2"/><text x="6.9985%" y="927.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (2 samples, 0.25%)</title><rect x="6.7485%" y="901" width="0.2454%" height="15" fill="rgb(245,125,30)" fg:x="55" fg:w="2"/><text x="6.9985%" y="911.50"></text></g><g><title>sqlite3_step (2 samples, 0.25%)</title><rect x="6.7485%" y="885" width="0.2454%" height="15" fill="rgb(232,202,2)" fg:x="55" fg:w="2"/><text x="6.9985%" y="895.50"></text></g><g><title>sqlite3_step (2 samples, 0.25%)</title><rect x="6.7485%" y="869" width="0.2454%" height="15" fill="rgb(237,140,51)" fg:x="55" fg:w="2"/><text x="6.9985%" y="879.50"></text></g><g><title>sqlite3Step (2 samples, 0.25%)</title><rect x="6.7485%" y="853" width="0.2454%" height="15" fill="rgb(236,157,25)" fg:x="55" fg:w="2"/><text x="6.9985%" y="863.50"></text></g><g><title>sqlite3VdbeExec (2 samples, 0.25%)</title><rect x="6.7485%" y="837" width="0.2454%" height="15" fill="rgb(219,209,0)" fg:x="55" fg:w="2"/><text x="6.9985%" y="847.50"></text></g><g><title>sqlite3BtreeMovetoUnpacked (2 samples, 0.25%)</title><rect x="6.7485%" y="821" width="0.2454%" height="15" fill="rgb(240,116,54)" fg:x="55" fg:w="2"/><text x="6.9985%" y="831.50"></text></g><g><title>moveToRoot (1 samples, 0.12%)</title><rect x="6.8712%" y="805" width="0.1227%" height="15" fill="rgb(216,10,36)" fg:x="56" fg:w="1"/><text x="7.1212%" y="815.50"></text></g><g><title>getAndInitPage (1 samples, 0.12%)</title><rect x="6.8712%" y="789" width="0.1227%" height="15" fill="rgb(222,72,44)" fg:x="56" fg:w="1"/><text x="7.1212%" y="799.50"></text></g><g><title>sqlite3PagerGet (1 samples, 0.12%)</title><rect x="6.8712%" y="773" width="0.1227%" height="15" fill="rgb(232,159,9)" fg:x="56" fg:w="1"/><text x="7.1212%" y="783.50"></text></g><g><title>getPageMMap (1 samples, 0.12%)</title><rect x="6.8712%" y="757" width="0.1227%" height="15" fill="rgb(210,39,32)" fg:x="56" fg:w="1"/><text x="7.1212%" y="767.50"></text></g><g><title>sqlite3PagerLookup (1 samples, 0.12%)</title><rect x="6.8712%" y="741" width="0.1227%" height="15" fill="rgb(216,194,45)" fg:x="56" fg:w="1"/><text x="7.1212%" y="751.50"></text></g><g><title>sqlite3PcacheFetch (1 samples, 0.12%)</title><rect x="6.8712%" y="725" width="0.1227%" height="15" fill="rgb(218,18,35)" fg:x="56" fg:w="1"/><text x="7.1212%" y="735.50"></text></g><g><title>pcache1Fetch (1 samples, 0.12%)</title><rect x="6.8712%" y="709" width="0.1227%" height="15" fill="rgb(207,83,51)" fg:x="56" fg:w="1"/><text x="7.1212%" y="719.50"></text></g><g><title>__lseek64 (1 samples, 0.12%)</title><rect x="7.1166%" y="581" width="0.1227%" height="15" fill="rgb(225,63,43)" fg:x="58" fg:w="1"/><text x="7.3666%" y="591.50"></text></g><g><title>readDbPage (4 samples, 0.49%)</title><rect x="6.9939%" y="645" width="0.4908%" height="15" fill="rgb(207,57,36)" fg:x="57" fg:w="4"/><text x="7.2439%" y="655.50"></text></g><g><title>sqlite3OsRead (4 samples, 0.49%)</title><rect x="6.9939%" y="629" width="0.4908%" height="15" fill="rgb(216,99,33)" fg:x="57" fg:w="4"/><text x="7.2439%" y="639.50"></text></g><g><title>unixRead (4 samples, 0.49%)</title><rect x="6.9939%" y="613" width="0.4908%" height="15" fill="rgb(225,42,16)" fg:x="57" fg:w="4"/><text x="7.2439%" y="623.50"></text></g><g><title>seekAndRead (3 samples, 0.37%)</title><rect x="7.1166%" y="597" width="0.3681%" height="15" fill="rgb(220,201,45)" fg:x="58" fg:w="3"/><text x="7.3666%" y="607.50"></text></g><g><title>read (2 samples, 0.25%)</title><rect x="7.2393%" y="581" width="0.2454%" height="15" fill="rgb(225,33,4)" fg:x="59" fg:w="2"/><text x="7.4893%" y="591.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_backptr (5 samples, 0.61%)</title><rect x="6.9939%" y="965" width="0.6135%" height="15" fill="rgb(224,33,50)" fg:x="57" fg:w="5"/><text x="7.2439%" y="975.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_backptr (5 samples, 0.61%)</title><rect x="6.9939%" y="949" width="0.6135%" height="15" fill="rgb(246,198,51)" fg:x="57" fg:w="5"/><text x="7.2439%" y="959.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (5 samples, 0.61%)</title><rect x="6.9939%" y="933" width="0.6135%" height="15" fill="rgb(205,22,4)" fg:x="57" fg:w="5"/><text x="7.2439%" y="943.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (5 samples, 0.61%)</title><rect x="6.9939%" y="917" width="0.6135%" height="15" fill="rgb(206,3,8)" fg:x="57" fg:w="5"/><text x="7.2439%" y="927.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (5 samples, 0.61%)</title><rect x="6.9939%" y="901" width="0.6135%" height="15" fill="rgb(251,23,15)" fg:x="57" fg:w="5"/><text x="7.2439%" y="911.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (5 samples, 0.61%)</title><rect x="6.9939%" y="885" width="0.6135%" height="15" fill="rgb(252,88,28)" fg:x="57" fg:w="5"/><text x="7.2439%" y="895.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (5 samples, 0.61%)</title><rect x="6.9939%" y="869" width="0.6135%" height="15" fill="rgb(212,127,14)" fg:x="57" fg:w="5"/><text x="7.2439%" y="879.50"></text></g><g><title>std::io::Read::read_exact (5 samples, 0.61%)</title><rect x="6.9939%" y="853" width="0.6135%" height="15" fill="rgb(247,145,37)" fg:x="57" fg:w="5"/><text x="7.2439%" y="863.50"></text></g><g><title>std::io::default_read_exact (5 samples, 0.61%)</title><rect x="6.9939%" y="837" width="0.6135%" height="15" fill="rgb(209,117,53)" fg:x="57" fg:w="5"/><text x="7.2439%" y="847.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (5 samples, 0.61%)</title><rect x="6.9939%" y="821" width="0.6135%" height="15" fill="rgb(212,90,42)" fg:x="57" fg:w="5"/><text x="7.2439%" y="831.50"></text></g><g><title>sqlite3_blob_read (5 samples, 0.61%)</title><rect x="6.9939%" y="805" width="0.6135%" height="15" fill="rgb(218,164,37)" fg:x="57" fg:w="5"/><text x="7.2439%" y="815.50"></text></g><g><title>blobReadWrite (5 samples, 0.61%)</title><rect x="6.9939%" y="789" width="0.6135%" height="15" fill="rgb(246,65,34)" fg:x="57" fg:w="5"/><text x="7.2439%" y="799.50"></text></g><g><title>sqlite3BtreePayloadChecked (5 samples, 0.61%)</title><rect x="6.9939%" y="773" width="0.6135%" height="15" fill="rgb(231,100,33)" fg:x="57" fg:w="5"/><text x="7.2439%" y="783.50"></text></g><g><title>sqlite3BtreePayloadChecked (5 samples, 0.61%)</title><rect x="6.9939%" y="757" width="0.6135%" height="15" fill="rgb(228,126,14)" fg:x="57" fg:w="5"/><text x="7.2439%" y="767.50"></text></g><g><title>accessPayload (5 samples, 0.61%)</title><rect x="6.9939%" y="741" width="0.6135%" height="15" fill="rgb(215,173,21)" fg:x="57" fg:w="5"/><text x="7.2439%" y="751.50"></text></g><g><title>getOverflowPage (5 samples, 0.61%)</title><rect x="6.9939%" y="725" width="0.6135%" height="15" fill="rgb(210,6,40)" fg:x="57" fg:w="5"/><text x="7.2439%" y="735.50"></text></g><g><title>btreeGetPage (5 samples, 0.61%)</title><rect x="6.9939%" y="709" width="0.6135%" height="15" fill="rgb(212,48,18)" fg:x="57" fg:w="5"/><text x="7.2439%" y="719.50"></text></g><g><title>sqlite3PagerGet (5 samples, 0.61%)</title><rect x="6.9939%" y="693" width="0.6135%" height="15" fill="rgb(230,214,11)" fg:x="57" fg:w="5"/><text x="7.2439%" y="703.50"></text></g><g><title>getPageMMap (5 samples, 0.61%)</title><rect x="6.9939%" y="677" width="0.6135%" height="15" fill="rgb(254,105,39)" fg:x="57" fg:w="5"/><text x="7.2439%" y="687.50"></text></g><g><title>getPageNormal (5 samples, 0.61%)</title><rect x="6.9939%" y="661" width="0.6135%" height="15" fill="rgb(245,158,5)" fg:x="57" fg:w="5"/><text x="7.2439%" y="671.50"></text></g><g><title>sqlite3PcacheFetch (1 samples, 0.12%)</title><rect x="7.4847%" y="645" width="0.1227%" height="15" fill="rgb(249,208,11)" fg:x="61" fg:w="1"/><text x="7.7347%" y="655.50"></text></g><g><title>pcache1Fetch (1 samples, 0.12%)</title><rect x="7.4847%" y="629" width="0.1227%" height="15" fill="rgb(210,39,28)" fg:x="61" fg:w="1"/><text x="7.7347%" y="639.50"></text></g><g><title>pcache1FetchWithMutex (1 samples, 0.12%)</title><rect x="7.4847%" y="613" width="0.1227%" height="15" fill="rgb(211,56,53)" fg:x="61" fg:w="1"/><text x="7.7347%" y="623.50"></text></g><g><title>pcache1FetchNoMutex (1 samples, 0.12%)</title><rect x="7.4847%" y="597" width="0.1227%" height="15" fill="rgb(226,201,30)" fg:x="61" fg:w="1"/><text x="7.7347%" y="607.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::node::TrieCursor&lt;T&gt;::repair_backptr_finish (1 samples, 0.12%)</title><rect x="7.6074%" y="965" width="0.1227%" height="15" fill="rgb(239,101,34)" fg:x="62" fg:w="1"/><text x="7.8574%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.12%)</title><rect x="7.6074%" y="949" width="0.1227%" height="15" fill="rgb(226,209,5)" fg:x="62" fg:w="1"/><text x="7.8574%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="7.6074%" y="933" width="0.1227%" height="15" fill="rgb(250,105,47)" fg:x="62" fg:w="1"/><text x="7.8574%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="7.6074%" y="917" width="0.1227%" height="15" fill="rgb(230,72,3)" fg:x="62" fg:w="1"/><text x="7.8574%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.12%)</title><rect x="7.6074%" y="901" width="0.1227%" height="15" fill="rgb(232,218,39)" fg:x="62" fg:w="1"/><text x="7.8574%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.12%)</title><rect x="7.6074%" y="885" width="0.1227%" height="15" fill="rgb(248,166,6)" fg:x="62" fg:w="1"/><text x="7.8574%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.12%)</title><rect x="7.6074%" y="869" width="0.1227%" height="15" fill="rgb(247,89,20)" fg:x="62" fg:w="1"/><text x="7.8574%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.12%)</title><rect x="7.6074%" y="853" width="0.1227%" height="15" fill="rgb(248,130,54)" fg:x="62" fg:w="1"/><text x="7.8574%" y="863.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.12%)</title><rect x="7.6074%" y="837" width="0.1227%" height="15" fill="rgb(234,196,4)" fg:x="62" fg:w="1"/><text x="7.8574%" y="847.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.12%)</title><rect x="7.6074%" y="821" width="0.1227%" height="15" fill="rgb(250,143,31)" fg:x="62" fg:w="1"/><text x="7.8574%" y="831.50"></text></g><g><title>__libc_realloc (1 samples, 0.12%)</title><rect x="7.6074%" y="805" width="0.1227%" height="15" fill="rgb(211,110,34)" fg:x="62" fg:w="1"/><text x="7.8574%" y="815.50"></text></g><g><title>&lt;blockstack_lib::types::proof::TrieLeaf as blockstack_lib::chainstate::stacks::index::node::TrieNode&gt;::from_bytes (1 samples, 0.12%)</title><rect x="7.8528%" y="885" width="0.1227%" height="15" fill="rgb(215,124,48)" fg:x="64" fg:w="1"/><text x="8.1028%" y="895.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::path_from_bytes (1 samples, 0.12%)</title><rect x="7.8528%" y="869" width="0.1227%" height="15" fill="rgb(216,46,13)" fg:x="64" fg:w="1"/><text x="8.1028%" y="879.50"></text></g><g><title>std::io::Read::read_exact (1 samples, 0.12%)</title><rect x="7.8528%" y="853" width="0.1227%" height="15" fill="rgb(205,184,25)" fg:x="64" fg:w="1"/><text x="8.1028%" y="863.50"></text></g><g><title>std::io::default_read_exact (1 samples, 0.12%)</title><rect x="7.8528%" y="837" width="0.1227%" height="15" fill="rgb(228,1,10)" fg:x="64" fg:w="1"/><text x="8.1028%" y="847.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="7.8528%" y="821" width="0.1227%" height="15" fill="rgb(213,116,27)" fg:x="64" fg:w="1"/><text x="8.1028%" y="831.50"></text></g><g><title>__lseek64 (1 samples, 0.12%)</title><rect x="7.9755%" y="597" width="0.1227%" height="15" fill="rgb(241,95,50)" fg:x="65" fg:w="1"/><text x="8.2255%" y="607.50"></text></g><g><title>readDbPage (3 samples, 0.37%)</title><rect x="7.9755%" y="661" width="0.3681%" height="15" fill="rgb(238,48,32)" fg:x="65" fg:w="3"/><text x="8.2255%" y="671.50"></text></g><g><title>sqlite3OsRead (3 samples, 0.37%)</title><rect x="7.9755%" y="645" width="0.3681%" height="15" fill="rgb(235,113,49)" fg:x="65" fg:w="3"/><text x="8.2255%" y="655.50"></text></g><g><title>unixRead (3 samples, 0.37%)</title><rect x="7.9755%" y="629" width="0.3681%" height="15" fill="rgb(205,127,43)" fg:x="65" fg:w="3"/><text x="8.2255%" y="639.50"></text></g><g><title>seekAndRead (3 samples, 0.37%)</title><rect x="7.9755%" y="613" width="0.3681%" height="15" fill="rgb(250,162,2)" fg:x="65" fg:w="3"/><text x="8.2255%" y="623.50"></text></g><g><title>read (2 samples, 0.25%)</title><rect x="8.0982%" y="597" width="0.2454%" height="15" fill="rgb(220,13,41)" fg:x="66" fg:w="2"/><text x="8.3482%" y="607.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get (12 samples, 1.47%)</title><rect x="6.9939%" y="1061" width="1.4724%" height="15" fill="rgb(249,221,25)" fg:x="57" fg:w="12"/><text x="7.2439%" y="1071.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt; as blockstack_lib::chainstate::stacks::index::marf::MarfConnection&lt;T&gt;&gt;::with_conn (12 samples, 1.47%)</title><rect x="6.9939%" y="1045" width="1.4724%" height="15" fill="rgb(215,208,19)" fg:x="57" fg:w="12"/><text x="7.2439%" y="1055.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get::{{closure}} (12 samples, 1.47%)</title><rect x="6.9939%" y="1029" width="1.4724%" height="15" fill="rgb(236,175,2)" fg:x="57" fg:w="12"/><text x="7.2439%" y="1039.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_by_key (12 samples, 1.47%)</title><rect x="6.9939%" y="1013" width="1.4724%" height="15" fill="rgb(241,52,2)" fg:x="57" fg:w="12"/><text x="7.2439%" y="1023.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_path (12 samples, 1.47%)</title><rect x="6.9939%" y="997" width="1.4724%" height="15" fill="rgb(248,140,14)" fg:x="57" fg:w="12"/><text x="7.2439%" y="1007.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk (12 samples, 1.47%)</title><rect x="6.9939%" y="981" width="1.4724%" height="15" fill="rgb(253,22,42)" fg:x="57" fg:w="12"/><text x="7.2439%" y="991.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_from (6 samples, 0.74%)</title><rect x="7.7301%" y="965" width="0.7362%" height="15" fill="rgb(234,61,47)" fg:x="63" fg:w="6"/><text x="7.9801%" y="975.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (5 samples, 0.61%)</title><rect x="7.8528%" y="949" width="0.6135%" height="15" fill="rgb(208,226,15)" fg:x="64" fg:w="5"/><text x="8.1028%" y="959.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (5 samples, 0.61%)</title><rect x="7.8528%" y="933" width="0.6135%" height="15" fill="rgb(217,221,4)" fg:x="64" fg:w="5"/><text x="8.1028%" y="943.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (5 samples, 0.61%)</title><rect x="7.8528%" y="917" width="0.6135%" height="15" fill="rgb(212,174,34)" fg:x="64" fg:w="5"/><text x="8.1028%" y="927.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (5 samples, 0.61%)</title><rect x="7.8528%" y="901" width="0.6135%" height="15" fill="rgb(253,83,4)" fg:x="64" fg:w="5"/><text x="8.1028%" y="911.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (4 samples, 0.49%)</title><rect x="7.9755%" y="885" width="0.4908%" height="15" fill="rgb(250,195,49)" fg:x="65" fg:w="4"/><text x="8.2255%" y="895.50"></text></g><g><title>std::io::Read::read_exact (4 samples, 0.49%)</title><rect x="7.9755%" y="869" width="0.4908%" height="15" fill="rgb(241,192,25)" fg:x="65" fg:w="4"/><text x="8.2255%" y="879.50"></text></g><g><title>std::io::default_read_exact (4 samples, 0.49%)</title><rect x="7.9755%" y="853" width="0.4908%" height="15" fill="rgb(208,124,10)" fg:x="65" fg:w="4"/><text x="8.2255%" y="863.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (4 samples, 0.49%)</title><rect x="7.9755%" y="837" width="0.4908%" height="15" fill="rgb(222,33,0)" fg:x="65" fg:w="4"/><text x="8.2255%" y="847.50"></text></g><g><title>sqlite3_blob_read (4 samples, 0.49%)</title><rect x="7.9755%" y="821" width="0.4908%" height="15" fill="rgb(234,209,28)" fg:x="65" fg:w="4"/><text x="8.2255%" y="831.50"></text></g><g><title>blobReadWrite (4 samples, 0.49%)</title><rect x="7.9755%" y="805" width="0.4908%" height="15" fill="rgb(224,11,23)" fg:x="65" fg:w="4"/><text x="8.2255%" y="815.50"></text></g><g><title>sqlite3BtreePayloadChecked (4 samples, 0.49%)</title><rect x="7.9755%" y="789" width="0.4908%" height="15" fill="rgb(232,99,1)" fg:x="65" fg:w="4"/><text x="8.2255%" y="799.50"></text></g><g><title>sqlite3BtreePayloadChecked (4 samples, 0.49%)</title><rect x="7.9755%" y="773" width="0.4908%" height="15" fill="rgb(237,95,45)" fg:x="65" fg:w="4"/><text x="8.2255%" y="783.50"></text></g><g><title>accessPayload (4 samples, 0.49%)</title><rect x="7.9755%" y="757" width="0.4908%" height="15" fill="rgb(208,109,11)" fg:x="65" fg:w="4"/><text x="8.2255%" y="767.50"></text></g><g><title>getOverflowPage (4 samples, 0.49%)</title><rect x="7.9755%" y="741" width="0.4908%" height="15" fill="rgb(216,190,48)" fg:x="65" fg:w="4"/><text x="8.2255%" y="751.50"></text></g><g><title>btreeGetPage (4 samples, 0.49%)</title><rect x="7.9755%" y="725" width="0.4908%" height="15" fill="rgb(251,171,36)" fg:x="65" fg:w="4"/><text x="8.2255%" y="735.50"></text></g><g><title>sqlite3PagerGet (4 samples, 0.49%)</title><rect x="7.9755%" y="709" width="0.4908%" height="15" fill="rgb(230,62,22)" fg:x="65" fg:w="4"/><text x="8.2255%" y="719.50"></text></g><g><title>getPageMMap (4 samples, 0.49%)</title><rect x="7.9755%" y="693" width="0.4908%" height="15" fill="rgb(225,114,35)" fg:x="65" fg:w="4"/><text x="8.2255%" y="703.50"></text></g><g><title>getPageNormal (4 samples, 0.49%)</title><rect x="7.9755%" y="677" width="0.4908%" height="15" fill="rgb(215,118,42)" fg:x="65" fg:w="4"/><text x="8.2255%" y="687.50"></text></g><g><title>sqlite3PcacheFetch (1 samples, 0.12%)</title><rect x="8.3436%" y="661" width="0.1227%" height="15" fill="rgb(243,119,21)" fg:x="68" fg:w="1"/><text x="8.5936%" y="671.50"></text></g><g><title>pcache1Fetch (1 samples, 0.12%)</title><rect x="8.3436%" y="645" width="0.1227%" height="15" fill="rgb(252,177,53)" fg:x="68" fg:w="1"/><text x="8.5936%" y="655.50"></text></g><g><title>pcache1FetchWithMutex (1 samples, 0.12%)</title><rect x="8.3436%" y="629" width="0.1227%" height="15" fill="rgb(237,209,29)" fg:x="68" fg:w="1"/><text x="8.5936%" y="639.50"></text></g><g><title>pcache1FetchNoMutex (1 samples, 0.12%)</title><rect x="8.3436%" y="613" width="0.1227%" height="15" fill="rgb(212,65,23)" fg:x="68" fg:w="1"/><text x="8.5936%" y="623.50"></text></g><g><title>rusqlite::Connection::prepare (1 samples, 0.12%)</title><rect x="8.4663%" y="981" width="0.1227%" height="15" fill="rgb(230,222,46)" fg:x="69" fg:w="1"/><text x="8.7163%" y="991.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (1 samples, 0.12%)</title><rect x="8.4663%" y="965" width="0.1227%" height="15" fill="rgb(215,135,32)" fg:x="69" fg:w="1"/><text x="8.7163%" y="975.50"></text></g><g><title>sqlite3_prepare_v2 (1 samples, 0.12%)</title><rect x="8.4663%" y="949" width="0.1227%" height="15" fill="rgb(246,101,22)" fg:x="69" fg:w="1"/><text x="8.7163%" y="959.50"></text></g><g><title>sqlite3LockAndPrepare (1 samples, 0.12%)</title><rect x="8.4663%" y="933" width="0.1227%" height="15" fill="rgb(206,107,13)" fg:x="69" fg:w="1"/><text x="8.7163%" y="943.50"></text></g><g><title>sqlite3LockAndPrepare (1 samples, 0.12%)</title><rect x="8.4663%" y="917" width="0.1227%" height="15" fill="rgb(250,100,44)" fg:x="69" fg:w="1"/><text x="8.7163%" y="927.50"></text></g><g><title>sqlite3Prepare (1 samples, 0.12%)</title><rect x="8.4663%" y="901" width="0.1227%" height="15" fill="rgb(231,147,38)" fg:x="69" fg:w="1"/><text x="8.7163%" y="911.50"></text></g><g><title>sqlite3RunParser (1 samples, 0.12%)</title><rect x="8.4663%" y="885" width="0.1227%" height="15" fill="rgb(229,8,40)" fg:x="69" fg:w="1"/><text x="8.7163%" y="895.50"></text></g><g><title>sqlite3Parser (1 samples, 0.12%)</title><rect x="8.4663%" y="869" width="0.1227%" height="15" fill="rgb(221,135,30)" fg:x="69" fg:w="1"/><text x="8.7163%" y="879.50"></text></g><g><title>yy_reduce (1 samples, 0.12%)</title><rect x="8.4663%" y="853" width="0.1227%" height="15" fill="rgb(249,193,18)" fg:x="69" fg:w="1"/><text x="8.7163%" y="863.50"></text></g><g><title>sqlite3Select (1 samples, 0.12%)</title><rect x="8.4663%" y="837" width="0.1227%" height="15" fill="rgb(209,133,39)" fg:x="69" fg:w="1"/><text x="8.7163%" y="847.50"></text></g><g><title>sqlite3SelectPrep (1 samples, 0.12%)</title><rect x="8.4663%" y="821" width="0.1227%" height="15" fill="rgb(232,100,14)" fg:x="69" fg:w="1"/><text x="8.7163%" y="831.50"></text></g><g><title>sqlite3ResolveSelectNames (1 samples, 0.12%)</title><rect x="8.4663%" y="805" width="0.1227%" height="15" fill="rgb(224,185,1)" fg:x="69" fg:w="1"/><text x="8.7163%" y="815.50"></text></g><g><title>sqlite3WalkSelect (1 samples, 0.12%)</title><rect x="8.4663%" y="789" width="0.1227%" height="15" fill="rgb(223,139,8)" fg:x="69" fg:w="1"/><text x="8.7163%" y="799.50"></text></g><g><title>sqlite3WalkSelect (1 samples, 0.12%)</title><rect x="8.4663%" y="773" width="0.1227%" height="15" fill="rgb(232,213,38)" fg:x="69" fg:w="1"/><text x="8.7163%" y="783.50"></text></g><g><title>resolveSelectStep (1 samples, 0.12%)</title><rect x="8.4663%" y="757" width="0.1227%" height="15" fill="rgb(207,94,22)" fg:x="69" fg:w="1"/><text x="8.7163%" y="767.50"></text></g><g><title>sqlite3ResolveExprListNames (1 samples, 0.12%)</title><rect x="8.4663%" y="741" width="0.1227%" height="15" fill="rgb(219,183,54)" fg:x="69" fg:w="1"/><text x="8.7163%" y="751.50"></text></g><g><title>sqlite3WalkExpr (1 samples, 0.12%)</title><rect x="8.4663%" y="725" width="0.1227%" height="15" fill="rgb(216,185,54)" fg:x="69" fg:w="1"/><text x="8.7163%" y="735.50"></text></g><g><title>walkExpr (1 samples, 0.12%)</title><rect x="8.4663%" y="709" width="0.1227%" height="15" fill="rgb(254,217,39)" fg:x="69" fg:w="1"/><text x="8.7163%" y="719.50"></text></g><g><title>resolveExprStep (1 samples, 0.12%)</title><rect x="8.4663%" y="693" width="0.1227%" height="15" fill="rgb(240,178,23)" fg:x="69" fg:w="1"/><text x="8.7163%" y="703.50"></text></g><g><title>lookupName (1 samples, 0.12%)</title><rect x="8.4663%" y="677" width="0.1227%" height="15" fill="rgb(218,11,47)" fg:x="69" fg:w="1"/><text x="8.7163%" y="687.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::accounts::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::get_account (26 samples, 3.19%)</title><rect x="5.5215%" y="1253" width="3.1902%" height="15" fill="rgb(218,51,51)" fg:x="45" fg:w="26"/><text x="5.7715%" y="1263.50">blo..</text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityConnection::with_clarity_db_readonly (26 samples, 3.19%)</title><rect x="5.5215%" y="1237" width="3.1902%" height="15" fill="rgb(238,126,27)" fg:x="45" fg:w="26"/><text x="5.7715%" y="1247.50">blo..</text></g><g><title>&lt;blockstack_lib::chainstate::stacks::db::ClarityTx as blockstack_lib::clarity_vm::clarity::ClarityConnection&gt;::with_clarity_db_readonly_owned (26 samples, 3.19%)</title><rect x="5.5215%" y="1221" width="3.1902%" height="15" fill="rgb(249,202,22)" fg:x="45" fg:w="26"/><text x="5.7715%" y="1231.50">&lt;bl..</text></g><g><title>&lt;blockstack_lib::clarity_vm::clarity::ClarityBlockConnection as blockstack_lib::clarity_vm::clarity::ClarityConnection&gt;::with_clarity_db_readonly_owned (26 samples, 3.19%)</title><rect x="5.5215%" y="1205" width="3.1902%" height="15" fill="rgb(254,195,49)" fg:x="45" fg:w="26"/><text x="5.7715%" y="1215.50">&lt;bl..</text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityConnection::with_clarity_db_readonly::{{closure}} (26 samples, 3.19%)</title><rect x="5.5215%" y="1189" width="3.1902%" height="15" fill="rgb(208,123,14)" fg:x="45" fg:w="26"/><text x="5.7715%" y="1199.50">blo..</text></g><g><title>blockstack_lib::chainstate::stacks::db::accounts::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::get_account::{{closure}} (26 samples, 3.19%)</title><rect x="5.5215%" y="1173" width="3.1902%" height="15" fill="rgb(224,200,8)" fg:x="45" fg:w="26"/><text x="5.7715%" y="1183.50">blo..</text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get_account_stx_balance (14 samples, 1.72%)</title><rect x="6.9939%" y="1157" width="1.7178%" height="15" fill="rgb(217,61,36)" fg:x="57" fg:w="14"/><text x="7.2439%" y="1167.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get (14 samples, 1.72%)</title><rect x="6.9939%" y="1141" width="1.7178%" height="15" fill="rgb(206,35,45)" fg:x="57" fg:w="14"/><text x="7.2439%" y="1151.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get (14 samples, 1.72%)</title><rect x="6.9939%" y="1125" width="1.7178%" height="15" fill="rgb(217,65,33)" fg:x="57" fg:w="14"/><text x="7.2439%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (14 samples, 1.72%)</title><rect x="6.9939%" y="1109" width="1.7178%" height="15" fill="rgb(222,158,48)" fg:x="57" fg:w="14"/><text x="7.2439%" y="1119.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get::{{closure}} (14 samples, 1.72%)</title><rect x="6.9939%" y="1093" width="1.7178%" height="15" fill="rgb(254,2,54)" fg:x="57" fg:w="14"/><text x="7.2439%" y="1103.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::get (14 samples, 1.72%)</title><rect x="6.9939%" y="1077" width="1.7178%" height="15" fill="rgb(250,143,38)" fg:x="57" fg:w="14"/><text x="7.2439%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.25%)</title><rect x="8.4663%" y="1061" width="0.2454%" height="15" fill="rgb(248,25,0)" fg:x="69" fg:w="2"/><text x="8.7163%" y="1071.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::get::{{closure}} (2 samples, 0.25%)</title><rect x="8.4663%" y="1045" width="0.2454%" height="15" fill="rgb(206,152,27)" fg:x="69" fg:w="2"/><text x="8.7163%" y="1055.50"></text></g><g><title>blockstack_lib::vm::database::sqlite::SqliteConnection::get (2 samples, 0.25%)</title><rect x="8.4663%" y="1029" width="0.2454%" height="15" fill="rgb(240,77,30)" fg:x="69" fg:w="2"/><text x="8.7163%" y="1039.50"></text></g><g><title>blockstack_lib::vm::database::sqlite::sqlite_get (2 samples, 0.25%)</title><rect x="8.4663%" y="1013" width="0.2454%" height="15" fill="rgb(231,5,3)" fg:x="69" fg:w="2"/><text x="8.7163%" y="1023.50"></text></g><g><title>rusqlite::Connection::query_row (2 samples, 0.25%)</title><rect x="8.4663%" y="997" width="0.2454%" height="15" fill="rgb(207,226,32)" fg:x="69" fg:w="2"/><text x="8.7163%" y="1007.50"></text></g><g><title>rusqlite::statement::Statement::query_row (1 samples, 0.12%)</title><rect x="8.5890%" y="981" width="0.1227%" height="15" fill="rgb(222,207,47)" fg:x="70" fg:w="1"/><text x="8.8390%" y="991.50"></text></g><g><title>rusqlite::row::Rows::get_expected_row (1 samples, 0.12%)</title><rect x="8.5890%" y="965" width="0.1227%" height="15" fill="rgb(229,115,45)" fg:x="70" fg:w="1"/><text x="8.8390%" y="975.50"></text></g><g><title>rusqlite::row::Rows::next (1 samples, 0.12%)</title><rect x="8.5890%" y="949" width="0.1227%" height="15" fill="rgb(224,191,6)" fg:x="70" fg:w="1"/><text x="8.8390%" y="959.50"></text></g><g><title>&lt;rusqlite::row::Rows as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (1 samples, 0.12%)</title><rect x="8.5890%" y="933" width="0.1227%" height="15" fill="rgb(230,227,24)" fg:x="70" fg:w="1"/><text x="8.8390%" y="943.50"></text></g><g><title>rusqlite::statement::Statement::step (1 samples, 0.12%)</title><rect x="8.5890%" y="917" width="0.1227%" height="15" fill="rgb(228,80,19)" fg:x="70" fg:w="1"/><text x="8.8390%" y="927.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (1 samples, 0.12%)</title><rect x="8.5890%" y="901" width="0.1227%" height="15" fill="rgb(247,229,0)" fg:x="70" fg:w="1"/><text x="8.8390%" y="911.50"></text></g><g><title>sqlite3_step (1 samples, 0.12%)</title><rect x="8.5890%" y="885" width="0.1227%" height="15" fill="rgb(237,194,15)" fg:x="70" fg:w="1"/><text x="8.8390%" y="895.50"></text></g><g><title>sqlite3_step (1 samples, 0.12%)</title><rect x="8.5890%" y="869" width="0.1227%" height="15" fill="rgb(219,203,20)" fg:x="70" fg:w="1"/><text x="8.8390%" y="879.50"></text></g><g><title>sqlite3Step (1 samples, 0.12%)</title><rect x="8.5890%" y="853" width="0.1227%" height="15" fill="rgb(234,128,8)" fg:x="70" fg:w="1"/><text x="8.8390%" y="863.50"></text></g><g><title>sqlite3VdbeExec (1 samples, 0.12%)</title><rect x="8.5890%" y="837" width="0.1227%" height="15" fill="rgb(248,202,8)" fg:x="70" fg:w="1"/><text x="8.8390%" y="847.50"></text></g><g><title>sqlite3VdbeCursorMoveto (1 samples, 0.12%)</title><rect x="8.5890%" y="821" width="0.1227%" height="15" fill="rgb(206,104,37)" fg:x="70" fg:w="1"/><text x="8.8390%" y="831.50"></text></g><g><title>sqlite3VdbeFinishMoveto (1 samples, 0.12%)</title><rect x="8.5890%" y="805" width="0.1227%" height="15" fill="rgb(223,8,27)" fg:x="70" fg:w="1"/><text x="8.8390%" y="815.50"></text></g><g><title>sqlite3BtreeMovetoUnpacked (1 samples, 0.12%)</title><rect x="8.5890%" y="789" width="0.1227%" height="15" fill="rgb(216,217,28)" fg:x="70" fg:w="1"/><text x="8.8390%" y="799.50"></text></g><g><title>moveToChild (1 samples, 0.12%)</title><rect x="8.5890%" y="773" width="0.1227%" height="15" fill="rgb(249,199,1)" fg:x="70" fg:w="1"/><text x="8.8390%" y="783.50"></text></g><g><title>getAndInitPage (1 samples, 0.12%)</title><rect x="8.5890%" y="757" width="0.1227%" height="15" fill="rgb(240,85,17)" fg:x="70" fg:w="1"/><text x="8.8390%" y="767.50"></text></g><g><title>sqlite3PagerGet (1 samples, 0.12%)</title><rect x="8.5890%" y="741" width="0.1227%" height="15" fill="rgb(206,108,45)" fg:x="70" fg:w="1"/><text x="8.8390%" y="751.50"></text></g><g><title>getPageMMap (1 samples, 0.12%)</title><rect x="8.5890%" y="725" width="0.1227%" height="15" fill="rgb(245,210,41)" fg:x="70" fg:w="1"/><text x="8.8390%" y="735.50"></text></g><g><title>getPageNormal (1 samples, 0.12%)</title><rect x="8.5890%" y="709" width="0.1227%" height="15" fill="rgb(206,13,37)" fg:x="70" fg:w="1"/><text x="8.8390%" y="719.50"></text></g><g><title>readDbPage (1 samples, 0.12%)</title><rect x="8.5890%" y="693" width="0.1227%" height="15" fill="rgb(250,61,18)" fg:x="70" fg:w="1"/><text x="8.8390%" y="703.50"></text></g><g><title>sqlite3OsRead (1 samples, 0.12%)</title><rect x="8.5890%" y="677" width="0.1227%" height="15" fill="rgb(235,172,48)" fg:x="70" fg:w="1"/><text x="8.8390%" y="687.50"></text></g><g><title>unixRead (1 samples, 0.12%)</title><rect x="8.5890%" y="661" width="0.1227%" height="15" fill="rgb(249,201,17)" fg:x="70" fg:w="1"/><text x="8.8390%" y="671.50"></text></g><g><title>seekAndRead (1 samples, 0.12%)</title><rect x="8.5890%" y="645" width="0.1227%" height="15" fill="rgb(219,208,6)" fg:x="70" fg:w="1"/><text x="8.8390%" y="655.50"></text></g><g><title>read (1 samples, 0.12%)</title><rect x="8.5890%" y="629" width="0.1227%" height="15" fill="rgb(248,31,23)" fg:x="70" fg:w="1"/><text x="8.8390%" y="639.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::transactions::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::get_payer_account (1 samples, 0.12%)</title><rect x="8.7117%" y="1205" width="0.1227%" height="15" fill="rgb(245,15,42)" fg:x="71" fg:w="1"/><text x="8.9617%" y="1215.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::accounts::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::get_account (1 samples, 0.12%)</title><rect x="8.7117%" y="1189" width="0.1227%" height="15" fill="rgb(222,217,39)" fg:x="71" fg:w="1"/><text x="8.9617%" y="1199.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityConnection::with_clarity_db_readonly (1 samples, 0.12%)</title><rect x="8.7117%" y="1173" width="0.1227%" height="15" fill="rgb(210,219,27)" fg:x="71" fg:w="1"/><text x="8.9617%" y="1183.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection as blockstack_lib::clarity_vm::clarity::ClarityConnection&gt;::with_clarity_db_readonly_owned (1 samples, 0.12%)</title><rect x="8.7117%" y="1157" width="0.1227%" height="15" fill="rgb(252,166,36)" fg:x="71" fg:w="1"/><text x="8.9617%" y="1167.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection as blockstack_lib::clarity_vm::clarity::ClarityConnection&gt;::with_clarity_db_readonly_owned::{{closure}} (1 samples, 0.12%)</title><rect x="8.7117%" y="1141" width="0.1227%" height="15" fill="rgb(245,132,34)" fg:x="71" fg:w="1"/><text x="8.9617%" y="1151.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityConnection::with_clarity_db_readonly::{{closure}} (1 samples, 0.12%)</title><rect x="8.7117%" y="1125" width="0.1227%" height="15" fill="rgb(236,54,3)" fg:x="71" fg:w="1"/><text x="8.9617%" y="1135.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::accounts::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::get_account::{{closure}} (1 samples, 0.12%)</title><rect x="8.7117%" y="1109" width="0.1227%" height="15" fill="rgb(241,173,43)" fg:x="71" fg:w="1"/><text x="8.9617%" y="1119.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get_account_nonce (1 samples, 0.12%)</title><rect x="8.7117%" y="1093" width="0.1227%" height="15" fill="rgb(215,190,9)" fg:x="71" fg:w="1"/><text x="8.9617%" y="1103.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get (1 samples, 0.12%)</title><rect x="8.7117%" y="1077" width="0.1227%" height="15" fill="rgb(242,101,16)" fg:x="71" fg:w="1"/><text x="8.9617%" y="1087.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get (1 samples, 0.12%)</title><rect x="8.7117%" y="1061" width="0.1227%" height="15" fill="rgb(223,190,21)" fg:x="71" fg:w="1"/><text x="8.9617%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.12%)</title><rect x="8.7117%" y="1045" width="0.1227%" height="15" fill="rgb(215,228,25)" fg:x="71" fg:w="1"/><text x="8.9617%" y="1055.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get::{{closure}} (1 samples, 0.12%)</title><rect x="8.7117%" y="1029" width="0.1227%" height="15" fill="rgb(225,36,22)" fg:x="71" fg:w="1"/><text x="8.9617%" y="1039.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::get (1 samples, 0.12%)</title><rect x="8.7117%" y="1013" width="0.1227%" height="15" fill="rgb(251,106,46)" fg:x="71" fg:w="1"/><text x="8.9617%" y="1023.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get (1 samples, 0.12%)</title><rect x="8.7117%" y="997" width="0.1227%" height="15" fill="rgb(208,90,1)" fg:x="71" fg:w="1"/><text x="8.9617%" y="1007.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt; as blockstack_lib::chainstate::stacks::index::marf::MarfConnection&lt;T&gt;&gt;::with_conn (1 samples, 0.12%)</title><rect x="8.7117%" y="981" width="0.1227%" height="15" fill="rgb(243,10,4)" fg:x="71" fg:w="1"/><text x="8.9617%" y="991.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get::{{closure}} (1 samples, 0.12%)</title><rect x="8.7117%" y="965" width="0.1227%" height="15" fill="rgb(212,137,27)" fg:x="71" fg:w="1"/><text x="8.9617%" y="975.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_by_key (1 samples, 0.12%)</title><rect x="8.7117%" y="949" width="0.1227%" height="15" fill="rgb(231,220,49)" fg:x="71" fg:w="1"/><text x="8.9617%" y="959.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_path (1 samples, 0.12%)</title><rect x="8.7117%" y="933" width="0.1227%" height="15" fill="rgb(237,96,20)" fg:x="71" fg:w="1"/><text x="8.9617%" y="943.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk (1 samples, 0.12%)</title><rect x="8.7117%" y="917" width="0.1227%" height="15" fill="rgb(239,229,30)" fg:x="71" fg:w="1"/><text x="8.9617%" y="927.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_from (1 samples, 0.12%)</title><rect x="8.7117%" y="901" width="0.1227%" height="15" fill="rgb(219,65,33)" fg:x="71" fg:w="1"/><text x="8.9617%" y="911.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (1 samples, 0.12%)</title><rect x="8.7117%" y="885" width="0.1227%" height="15" fill="rgb(243,134,7)" fg:x="71" fg:w="1"/><text x="8.9617%" y="895.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (1 samples, 0.12%)</title><rect x="8.7117%" y="869" width="0.1227%" height="15" fill="rgb(216,177,54)" fg:x="71" fg:w="1"/><text x="8.9617%" y="879.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (1 samples, 0.12%)</title><rect x="8.7117%" y="853" width="0.1227%" height="15" fill="rgb(211,160,20)" fg:x="71" fg:w="1"/><text x="8.9617%" y="863.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (1 samples, 0.12%)</title><rect x="8.7117%" y="837" width="0.1227%" height="15" fill="rgb(239,85,39)" fg:x="71" fg:w="1"/><text x="8.9617%" y="847.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (1 samples, 0.12%)</title><rect x="8.7117%" y="821" width="0.1227%" height="15" fill="rgb(232,125,22)" fg:x="71" fg:w="1"/><text x="8.9617%" y="831.50"></text></g><g><title>std::io::Read::read_exact (1 samples, 0.12%)</title><rect x="8.7117%" y="805" width="0.1227%" height="15" fill="rgb(244,57,34)" fg:x="71" fg:w="1"/><text x="8.9617%" y="815.50"></text></g><g><title>std::io::default_read_exact (1 samples, 0.12%)</title><rect x="8.7117%" y="789" width="0.1227%" height="15" fill="rgb(214,203,32)" fg:x="71" fg:w="1"/><text x="8.9617%" y="799.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="8.7117%" y="773" width="0.1227%" height="15" fill="rgb(207,58,43)" fg:x="71" fg:w="1"/><text x="8.9617%" y="783.50"></text></g><g><title>sqlite3_blob_read (1 samples, 0.12%)</title><rect x="8.7117%" y="757" width="0.1227%" height="15" fill="rgb(215,193,15)" fg:x="71" fg:w="1"/><text x="8.9617%" y="767.50"></text></g><g><title>blobReadWrite (1 samples, 0.12%)</title><rect x="8.7117%" y="741" width="0.1227%" height="15" fill="rgb(232,15,44)" fg:x="71" fg:w="1"/><text x="8.9617%" y="751.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="8.7117%" y="725" width="0.1227%" height="15" fill="rgb(212,3,48)" fg:x="71" fg:w="1"/><text x="8.9617%" y="735.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="8.7117%" y="709" width="0.1227%" height="15" fill="rgb(218,128,7)" fg:x="71" fg:w="1"/><text x="8.9617%" y="719.50"></text></g><g><title>accessPayload (1 samples, 0.12%)</title><rect x="8.7117%" y="693" width="0.1227%" height="15" fill="rgb(226,216,39)" fg:x="71" fg:w="1"/><text x="8.9617%" y="703.50"></text></g><g><title>getOverflowPage (1 samples, 0.12%)</title><rect x="8.7117%" y="677" width="0.1227%" height="15" fill="rgb(243,47,51)" fg:x="71" fg:w="1"/><text x="8.9617%" y="687.50"></text></g><g><title>btreeGetPage (1 samples, 0.12%)</title><rect x="8.7117%" y="661" width="0.1227%" height="15" fill="rgb(241,183,40)" fg:x="71" fg:w="1"/><text x="8.9617%" y="671.50"></text></g><g><title>sqlite3PagerGet (1 samples, 0.12%)</title><rect x="8.7117%" y="645" width="0.1227%" height="15" fill="rgb(231,217,32)" fg:x="71" fg:w="1"/><text x="8.9617%" y="655.50"></text></g><g><title>getPageMMap (1 samples, 0.12%)</title><rect x="8.7117%" y="629" width="0.1227%" height="15" fill="rgb(229,61,38)" fg:x="71" fg:w="1"/><text x="8.9617%" y="639.50"></text></g><g><title>getPageNormal (1 samples, 0.12%)</title><rect x="8.7117%" y="613" width="0.1227%" height="15" fill="rgb(225,210,5)" fg:x="71" fg:w="1"/><text x="8.9617%" y="623.50"></text></g><g><title>readDbPage (1 samples, 0.12%)</title><rect x="8.7117%" y="597" width="0.1227%" height="15" fill="rgb(231,79,45)" fg:x="71" fg:w="1"/><text x="8.9617%" y="607.50"></text></g><g><title>sqlite3OsRead (1 samples, 0.12%)</title><rect x="8.7117%" y="581" width="0.1227%" height="15" fill="rgb(224,100,7)" fg:x="71" fg:w="1"/><text x="8.9617%" y="591.50"></text></g><g><title>unixRead (1 samples, 0.12%)</title><rect x="8.7117%" y="565" width="0.1227%" height="15" fill="rgb(241,198,18)" fg:x="71" fg:w="1"/><text x="8.9617%" y="575.50"></text></g><g><title>seekAndRead (1 samples, 0.12%)</title><rect x="8.7117%" y="549" width="0.1227%" height="15" fill="rgb(252,97,53)" fg:x="71" fg:w="1"/><text x="8.9617%" y="559.50"></text></g><g><title>__lseek64 (1 samples, 0.12%)</title><rect x="8.7117%" y="533" width="0.1227%" height="15" fill="rgb(220,88,7)" fg:x="71" fg:w="1"/><text x="8.9617%" y="543.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::transactions::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::pay_transaction_fee (1 samples, 0.12%)</title><rect x="8.8344%" y="1205" width="0.1227%" height="15" fill="rgb(213,176,14)" fg:x="72" fg:w="1"/><text x="9.0844%" y="1215.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityConnection::with_clarity_db_readonly (1 samples, 0.12%)</title><rect x="8.8344%" y="1189" width="0.1227%" height="15" fill="rgb(246,73,7)" fg:x="72" fg:w="1"/><text x="9.0844%" y="1199.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection as blockstack_lib::clarity_vm::clarity::ClarityConnection&gt;::with_clarity_db_readonly_owned (1 samples, 0.12%)</title><rect x="8.8344%" y="1173" width="0.1227%" height="15" fill="rgb(245,64,36)" fg:x="72" fg:w="1"/><text x="9.0844%" y="1183.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection as blockstack_lib::clarity_vm::clarity::ClarityConnection&gt;::with_clarity_db_readonly_owned::{{closure}} (1 samples, 0.12%)</title><rect x="8.8344%" y="1157" width="0.1227%" height="15" fill="rgb(245,80,10)" fg:x="72" fg:w="1"/><text x="9.0844%" y="1167.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityConnection::with_clarity_db_readonly::{{closure}} (1 samples, 0.12%)</title><rect x="8.8344%" y="1141" width="0.1227%" height="15" fill="rgb(232,107,50)" fg:x="72" fg:w="1"/><text x="9.0844%" y="1151.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::transactions::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::pay_transaction_fee::{{closure}} (1 samples, 0.12%)</title><rect x="8.8344%" y="1125" width="0.1227%" height="15" fill="rgb(253,3,0)" fg:x="72" fg:w="1"/><text x="9.0844%" y="1135.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get_current_burnchain_block_height (1 samples, 0.12%)</title><rect x="8.8344%" y="1109" width="0.1227%" height="15" fill="rgb(212,99,53)" fg:x="72" fg:w="1"/><text x="9.0844%" y="1119.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get_burnchain_block_height (1 samples, 0.12%)</title><rect x="8.8344%" y="1093" width="0.1227%" height="15" fill="rgb(249,111,54)" fg:x="72" fg:w="1"/><text x="9.0844%" y="1103.50"></text></g><g><title>blockstack_lib::clarity_vm::database::&lt;impl blockstack_lib::vm::database::clarity_db::HeadersDB for rusqlite::Connection&gt;::get_burn_block_height_for_block (1 samples, 0.12%)</title><rect x="8.8344%" y="1077" width="0.1227%" height="15" fill="rgb(249,55,30)" fg:x="72" fg:w="1"/><text x="9.0844%" y="1087.50"></text></g><g><title>blockstack_lib::clarity_vm::database::get_stacks_header_info (1 samples, 0.12%)</title><rect x="8.8344%" y="1061" width="0.1227%" height="15" fill="rgb(237,47,42)" fg:x="72" fg:w="1"/><text x="9.0844%" y="1071.50"></text></g><g><title>rusqlite::Connection::query_row (1 samples, 0.12%)</title><rect x="8.8344%" y="1045" width="0.1227%" height="15" fill="rgb(211,20,18)" fg:x="72" fg:w="1"/><text x="9.0844%" y="1055.50"></text></g><g><title>rusqlite::statement::Statement::query_row (1 samples, 0.12%)</title><rect x="8.8344%" y="1029" width="0.1227%" height="15" fill="rgb(231,203,46)" fg:x="72" fg:w="1"/><text x="9.0844%" y="1039.50"></text></g><g><title>rusqlite::row::Rows::get_expected_row (1 samples, 0.12%)</title><rect x="8.8344%" y="1013" width="0.1227%" height="15" fill="rgb(237,142,3)" fg:x="72" fg:w="1"/><text x="9.0844%" y="1023.50"></text></g><g><title>rusqlite::row::Rows::next (1 samples, 0.12%)</title><rect x="8.8344%" y="997" width="0.1227%" height="15" fill="rgb(241,107,1)" fg:x="72" fg:w="1"/><text x="9.0844%" y="1007.50"></text></g><g><title>&lt;rusqlite::row::Rows as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (1 samples, 0.12%)</title><rect x="8.8344%" y="981" width="0.1227%" height="15" fill="rgb(229,83,13)" fg:x="72" fg:w="1"/><text x="9.0844%" y="991.50"></text></g><g><title>rusqlite::statement::Statement::step (1 samples, 0.12%)</title><rect x="8.8344%" y="965" width="0.1227%" height="15" fill="rgb(241,91,40)" fg:x="72" fg:w="1"/><text x="9.0844%" y="975.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (1 samples, 0.12%)</title><rect x="8.8344%" y="949" width="0.1227%" height="15" fill="rgb(225,3,45)" fg:x="72" fg:w="1"/><text x="9.0844%" y="959.50"></text></g><g><title>sqlite3_step (1 samples, 0.12%)</title><rect x="8.8344%" y="933" width="0.1227%" height="15" fill="rgb(244,223,14)" fg:x="72" fg:w="1"/><text x="9.0844%" y="943.50"></text></g><g><title>sqlite3_step (1 samples, 0.12%)</title><rect x="8.8344%" y="917" width="0.1227%" height="15" fill="rgb(224,124,37)" fg:x="72" fg:w="1"/><text x="9.0844%" y="927.50"></text></g><g><title>sqlite3Step (1 samples, 0.12%)</title><rect x="8.8344%" y="901" width="0.1227%" height="15" fill="rgb(251,171,30)" fg:x="72" fg:w="1"/><text x="9.0844%" y="911.50"></text></g><g><title>sqlite3VdbeExec (1 samples, 0.12%)</title><rect x="8.8344%" y="885" width="0.1227%" height="15" fill="rgb(236,46,54)" fg:x="72" fg:w="1"/><text x="9.0844%" y="895.50"></text></g><g><title>sqlite3VdbeSerialGet (1 samples, 0.12%)</title><rect x="8.8344%" y="869" width="0.1227%" height="15" fill="rgb(245,213,5)" fg:x="72" fg:w="1"/><text x="9.0844%" y="879.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::run_contract_call (1 samples, 0.12%)</title><rect x="8.9571%" y="1189" width="0.1227%" height="15" fill="rgb(230,144,27)" fg:x="73" fg:w="1"/><text x="9.2071%" y="1199.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::with_abort_callback (1 samples, 0.12%)</title><rect x="8.9571%" y="1173" width="0.1227%" height="15" fill="rgb(220,86,6)" fg:x="73" fg:w="1"/><text x="9.2071%" y="1183.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::with_abort_callback::{{closure}} (1 samples, 0.12%)</title><rect x="8.9571%" y="1157" width="0.1227%" height="15" fill="rgb(240,20,13)" fg:x="73" fg:w="1"/><text x="9.2071%" y="1167.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::with_abort_callback::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="8.9571%" y="1141" width="0.1227%" height="15" fill="rgb(217,89,34)" fg:x="73" fg:w="1"/><text x="9.2071%" y="1151.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::run_contract_call::{{closure}} (1 samples, 0.12%)</title><rect x="8.9571%" y="1125" width="0.1227%" height="15" fill="rgb(229,13,5)" fg:x="73" fg:w="1"/><text x="9.2071%" y="1135.50"></text></g><g><title>blockstack_lib::vm::contexts::OwnedEnvironment::execute_transaction (1 samples, 0.12%)</title><rect x="8.9571%" y="1109" width="0.1227%" height="15" fill="rgb(244,67,35)" fg:x="73" fg:w="1"/><text x="9.2071%" y="1119.50"></text></g><g><title>blockstack_lib::vm::contexts::OwnedEnvironment::execute_in_env (1 samples, 0.12%)</title><rect x="8.9571%" y="1093" width="0.1227%" height="15" fill="rgb(221,40,2)" fg:x="73" fg:w="1"/><text x="9.2071%" y="1103.50"></text></g><g><title>blockstack_lib::vm::contexts::OwnedEnvironment::execute_transaction::{{closure}} (1 samples, 0.12%)</title><rect x="8.9571%" y="1077" width="0.1227%" height="15" fill="rgb(237,157,21)" fg:x="73" fg:w="1"/><text x="9.2071%" y="1087.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_contract (1 samples, 0.12%)</title><rect x="8.9571%" y="1061" width="0.1227%" height="15" fill="rgb(222,94,11)" fg:x="73" fg:w="1"/><text x="9.2071%" y="1071.50"></text></g><g><title>blockstack_lib::vm::costs::runtime_cost (1 samples, 0.12%)</title><rect x="8.9571%" y="1045" width="0.1227%" height="15" fill="rgb(249,113,6)" fg:x="73" fg:w="1"/><text x="9.2071%" y="1055.50"></text></g><g><title>&lt;blockstack_lib::vm::contexts::Environment as blockstack_lib::vm::costs::CostTracker&gt;::compute_cost (1 samples, 0.12%)</title><rect x="8.9571%" y="1029" width="0.1227%" height="15" fill="rgb(238,137,36)" fg:x="73" fg:w="1"/><text x="9.2071%" y="1039.50"></text></g><g><title>&lt;blockstack_lib::vm::costs::LimitedCostTracker as blockstack_lib::vm::costs::CostTracker&gt;::compute_cost (1 samples, 0.12%)</title><rect x="8.9571%" y="1013" width="0.1227%" height="15" fill="rgb(210,102,26)" fg:x="73" fg:w="1"/><text x="9.2071%" y="1023.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.12%)</title><rect x="8.9571%" y="997" width="0.1227%" height="15" fill="rgb(218,30,30)" fg:x="73" fg:w="1"/><text x="9.2071%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.12%)</title><rect x="8.9571%" y="981" width="0.1227%" height="15" fill="rgb(214,67,26)" fg:x="73" fg:w="1"/><text x="9.2071%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.12%)</title><rect x="8.9571%" y="965" width="0.1227%" height="15" fill="rgb(251,9,53)" fg:x="73" fg:w="1"/><text x="9.2071%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.12%)</title><rect x="8.9571%" y="949" width="0.1227%" height="15" fill="rgb(228,204,25)" fg:x="73" fg:w="1"/><text x="9.2071%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.12%)</title><rect x="8.9571%" y="933" width="0.1227%" height="15" fill="rgb(207,153,8)" fg:x="73" fg:w="1"/><text x="9.2071%" y="943.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.12%)</title><rect x="8.9571%" y="917" width="0.1227%" height="15" fill="rgb(242,9,16)" fg:x="73" fg:w="1"/><text x="9.2071%" y="927.50"></text></g><g><title>&lt;&amp;T as core::borrow::Borrow&lt;T&gt;&gt;::borrow (1 samples, 0.12%)</title><rect x="8.9571%" y="901" width="0.1227%" height="15" fill="rgb(217,211,10)" fg:x="73" fg:w="1"/><text x="9.2071%" y="911.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::transactions::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::process_transaction_payload (2 samples, 0.25%)</title><rect x="8.9571%" y="1205" width="0.2454%" height="15" fill="rgb(219,228,52)" fg:x="73" fg:w="2"/><text x="9.2071%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;blockstack_lib::vm::contexts::AssetMap&gt; (1 samples, 0.12%)</title><rect x="9.0798%" y="1189" width="0.1227%" height="15" fill="rgb(231,92,29)" fg:x="74" fg:w="1"/><text x="9.3298%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;blockstack_lib::vm::types::PrincipalData,std::collections::hash::map::HashMap&lt;blockstack_lib::vm::types::signatures::AssetIdentifier,u128&gt;&gt;&gt; (1 samples, 0.12%)</title><rect x="9.0798%" y="1173" width="0.1227%" height="15" fill="rgb(232,8,23)" fg:x="74" fg:w="1"/><text x="9.3298%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;blockstack_lib::vm::types::PrincipalData,std::collections::hash::map::HashMap&lt;blockstack_lib::vm::types::signatures::AssetIdentifier,u128&gt;,std::collections::hash::map::RandomState&gt;&gt; (1 samples, 0.12%)</title><rect x="9.0798%" y="1157" width="0.1227%" height="15" fill="rgb(216,211,34)" fg:x="74" fg:w="1"/><text x="9.3298%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(blockstack_lib::vm::types::PrincipalData,std::collections::hash::map::HashMap&lt;blockstack_lib::vm::types::signatures::AssetIdentifier,u128&gt;)&gt;&gt; (1 samples, 0.12%)</title><rect x="9.0798%" y="1141" width="0.1227%" height="15" fill="rgb(236,151,0)" fg:x="74" fg:w="1"/><text x="9.3298%" y="1151.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="9.0798%" y="1125" width="0.1227%" height="15" fill="rgb(209,168,3)" fg:x="74" fg:w="1"/><text x="9.3298%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.12%)</title><rect x="9.0798%" y="1109" width="0.1227%" height="15" fill="rgb(208,129,28)" fg:x="74" fg:w="1"/><text x="9.3298%" y="1119.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::transactions::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::process_transaction_precheck (2 samples, 0.25%)</title><rect x="9.2025%" y="1205" width="0.2454%" height="15" fill="rgb(229,78,22)" fg:x="75" fg:w="2"/><text x="9.4525%" y="1215.50"></text></g><g><title>blockstack_lib::chainstate::stacks::transaction::&lt;impl blockstack_lib::chainstate::stacks::StacksTransaction&gt;::verify (2 samples, 0.25%)</title><rect x="9.2025%" y="1189" width="0.2454%" height="15" fill="rgb(228,187,13)" fg:x="75" fg:w="2"/><text x="9.4525%" y="1199.50"></text></g><g><title>blockstack_lib::chainstate::stacks::auth::&lt;impl blockstack_lib::chainstate::stacks::TransactionAuth&gt;::verify (2 samples, 0.25%)</title><rect x="9.2025%" y="1173" width="0.2454%" height="15" fill="rgb(240,119,24)" fg:x="75" fg:w="2"/><text x="9.4525%" y="1183.50"></text></g><g><title>blockstack_lib::chainstate::stacks::auth::&lt;impl blockstack_lib::chainstate::stacks::TransactionAuth&gt;::verify_origin (2 samples, 0.25%)</title><rect x="9.2025%" y="1157" width="0.2454%" height="15" fill="rgb(209,194,42)" fg:x="75" fg:w="2"/><text x="9.4525%" y="1167.50"></text></g><g><title>blockstack_lib::chainstate::stacks::auth::&lt;impl blockstack_lib::chainstate::stacks::SinglesigSpendingCondition&gt;::verify (2 samples, 0.25%)</title><rect x="9.2025%" y="1141" width="0.2454%" height="15" fill="rgb(247,200,46)" fg:x="75" fg:w="2"/><text x="9.4525%" y="1151.50"></text></g><g><title>blockstack_lib::chainstate::stacks::auth::&lt;impl blockstack_lib::chainstate::stacks::TransactionSpendingCondition&gt;::next_verification (2 samples, 0.25%)</title><rect x="9.2025%" y="1125" width="0.2454%" height="15" fill="rgb(218,76,16)" fg:x="75" fg:w="2"/><text x="9.4525%" y="1135.50"></text></g><g><title>blockstack_lib::util::secp256k1::Secp256k1PublicKey::recover_to_pubkey (2 samples, 0.25%)</title><rect x="9.2025%" y="1109" width="0.2454%" height="15" fill="rgb(225,21,48)" fg:x="75" fg:w="2"/><text x="9.4525%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.25%)</title><rect x="9.2025%" y="1093" width="0.2454%" height="15" fill="rgb(239,223,50)" fg:x="75" fg:w="2"/><text x="9.4525%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.25%)</title><rect x="9.2025%" y="1077" width="0.2454%" height="15" fill="rgb(244,45,21)" fg:x="75" fg:w="2"/><text x="9.4525%" y="1087.50"></text></g><g><title>blockstack_lib::util::secp256k1::Secp256k1PublicKey::recover_to_pubkey::{{closure}} (2 samples, 0.25%)</title><rect x="9.2025%" y="1061" width="0.2454%" height="15" fill="rgb(232,33,43)" fg:x="75" fg:w="2"/><text x="9.4525%" y="1071.50"></text></g><g><title>secp256k1::recovery::&lt;impl secp256k1::Secp256k1&lt;C&gt;&gt;::recover (2 samples, 0.25%)</title><rect x="9.2025%" y="1045" width="0.2454%" height="15" fill="rgb(209,8,3)" fg:x="75" fg:w="2"/><text x="9.4525%" y="1055.50"></text></g><g><title>rustsecp256k1_v0_2_0_ecdsa_recover (2 samples, 0.25%)</title><rect x="9.2025%" y="1029" width="0.2454%" height="15" fill="rgb(214,25,53)" fg:x="75" fg:w="2"/><text x="9.4525%" y="1039.50"></text></g><g><title>rustsecp256k1_v0_2_0_ecdsa_sig_recover (2 samples, 0.25%)</title><rect x="9.2025%" y="1013" width="0.2454%" height="15" fill="rgb(254,186,54)" fg:x="75" fg:w="2"/><text x="9.4525%" y="1023.50"></text></g><g><title>rustsecp256k1_v0_2_0_ge_set_gej_var (2 samples, 0.25%)</title><rect x="9.2025%" y="997" width="0.2454%" height="15" fill="rgb(208,174,49)" fg:x="75" fg:w="2"/><text x="9.4525%" y="1007.50"></text></g><g><title>rustsecp256k1_v0_2_0_fe_inv_var (2 samples, 0.25%)</title><rect x="9.2025%" y="981" width="0.2454%" height="15" fill="rgb(233,191,51)" fg:x="75" fg:w="2"/><text x="9.4525%" y="991.50"></text></g><g><title>rustsecp256k1_v0_2_0_fe_inv (2 samples, 0.25%)</title><rect x="9.2025%" y="965" width="0.2454%" height="15" fill="rgb(222,134,10)" fg:x="75" fg:w="2"/><text x="9.4525%" y="975.50"></text></g><g><title>rustsecp256k1_v0_2_0_fe_sqr (2 samples, 0.25%)</title><rect x="9.2025%" y="949" width="0.2454%" height="15" fill="rgb(230,226,20)" fg:x="75" fg:w="2"/><text x="9.4525%" y="959.50"></text></g><g><title>rustsecp256k1_v0_2_0_fe_sqr_inner (2 samples, 0.25%)</title><rect x="9.2025%" y="933" width="0.2454%" height="15" fill="rgb(251,111,25)" fg:x="75" fg:w="2"/><text x="9.4525%" y="943.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::insert_leaf (1 samples, 0.12%)</title><rect x="9.4479%" y="1125" width="0.1227%" height="15" fill="rgb(224,40,46)" fg:x="77" fg:w="1"/><text x="9.6979%" y="1135.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::do_insert_leaf (1 samples, 0.12%)</title><rect x="9.4479%" y="1109" width="0.1227%" height="15" fill="rgb(236,108,47)" fg:x="77" fg:w="1"/><text x="9.6979%" y="1119.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::update_root_hash (1 samples, 0.12%)</title><rect x="9.4479%" y="1093" width="0.1227%" height="15" fill="rgb(234,93,0)" fg:x="77" fg:w="1"/><text x="9.6979%" y="1103.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::recalculate_root_hash (1 samples, 0.12%)</title><rect x="9.4479%" y="1077" width="0.1227%" height="15" fill="rgb(224,213,32)" fg:x="77" fg:w="1"/><text x="9.6979%" y="1087.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::get_nodetype_hash (1 samples, 0.12%)</title><rect x="9.4479%" y="1061" width="0.1227%" height="15" fill="rgb(251,11,48)" fg:x="77" fg:w="1"/><text x="9.6979%" y="1071.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::node::TrieNodeType::write_consensus_bytes (1 samples, 0.12%)</title><rect x="9.4479%" y="1045" width="0.1227%" height="15" fill="rgb(236,173,5)" fg:x="77" fg:w="1"/><text x="9.6979%" y="1055.50"></text></g><g><title>&lt;T as blockstack_lib::chainstate::stacks::index::node::ConsensusSerializable&lt;M&gt;&gt;::write_consensus_bytes (1 samples, 0.12%)</title><rect x="9.4479%" y="1029" width="0.1227%" height="15" fill="rgb(230,95,12)" fg:x="77" fg:w="1"/><text x="9.6979%" y="1039.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::node::ptrs_consensus_hash (1 samples, 0.12%)</title><rect x="9.4479%" y="1013" width="0.1227%" height="15" fill="rgb(232,209,1)" fg:x="77" fg:w="1"/><text x="9.6979%" y="1023.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::node::TriePtr::write_consensus_bytes (1 samples, 0.12%)</title><rect x="9.4479%" y="997" width="0.1227%" height="15" fill="rgb(232,6,1)" fg:x="77" fg:w="1"/><text x="9.6979%" y="1007.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt; as blockstack_lib::chainstate::stacks::index::BlockMap&gt;::get_block_hash_caching (1 samples, 0.12%)</title><rect x="9.4479%" y="981" width="0.1227%" height="15" fill="rgb(210,224,50)" fg:x="77" fg:w="1"/><text x="9.6979%" y="991.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt; as blockstack_lib::chainstate::stacks::index::BlockMap&gt;::get_block_hash (1 samples, 0.12%)</title><rect x="9.4479%" y="965" width="0.1227%" height="15" fill="rgb(228,127,35)" fg:x="77" fg:w="1"/><text x="9.6979%" y="975.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::get_block_hash (1 samples, 0.12%)</title><rect x="9.4479%" y="949" width="0.1227%" height="15" fill="rgb(245,102,45)" fg:x="77" fg:w="1"/><text x="9.6979%" y="959.50"></text></g><g><title>rusqlite::Connection::query_row (1 samples, 0.12%)</title><rect x="9.4479%" y="933" width="0.1227%" height="15" fill="rgb(214,1,49)" fg:x="77" fg:w="1"/><text x="9.6979%" y="943.50"></text></g><g><title>rusqlite::Connection::prepare (1 samples, 0.12%)</title><rect x="9.4479%" y="917" width="0.1227%" height="15" fill="rgb(226,163,40)" fg:x="77" fg:w="1"/><text x="9.6979%" y="927.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (1 samples, 0.12%)</title><rect x="9.4479%" y="901" width="0.1227%" height="15" fill="rgb(239,212,28)" fg:x="77" fg:w="1"/><text x="9.6979%" y="911.50"></text></g><g><title>sqlite3_prepare_v2 (1 samples, 0.12%)</title><rect x="9.4479%" y="885" width="0.1227%" height="15" fill="rgb(220,20,13)" fg:x="77" fg:w="1"/><text x="9.6979%" y="895.50"></text></g><g><title>sqlite3LockAndPrepare (1 samples, 0.12%)</title><rect x="9.4479%" y="869" width="0.1227%" height="15" fill="rgb(210,164,35)" fg:x="77" fg:w="1"/><text x="9.6979%" y="879.50"></text></g><g><title>sqlite3LockAndPrepare (1 samples, 0.12%)</title><rect x="9.4479%" y="853" width="0.1227%" height="15" fill="rgb(248,109,41)" fg:x="77" fg:w="1"/><text x="9.6979%" y="863.50"></text></g><g><title>sqlite3Prepare (1 samples, 0.12%)</title><rect x="9.4479%" y="837" width="0.1227%" height="15" fill="rgb(238,23,50)" fg:x="77" fg:w="1"/><text x="9.6979%" y="847.50"></text></g><g><title>sqlite3RunParser (1 samples, 0.12%)</title><rect x="9.4479%" y="821" width="0.1227%" height="15" fill="rgb(211,48,49)" fg:x="77" fg:w="1"/><text x="9.6979%" y="831.50"></text></g><g><title>sqlite3Parser (1 samples, 0.12%)</title><rect x="9.4479%" y="805" width="0.1227%" height="15" fill="rgb(223,36,21)" fg:x="77" fg:w="1"/><text x="9.6979%" y="815.50"></text></g><g><title>yy_reduce (1 samples, 0.12%)</title><rect x="9.4479%" y="789" width="0.1227%" height="15" fill="rgb(207,123,46)" fg:x="77" fg:w="1"/><text x="9.6979%" y="799.50"></text></g><g><title>tokenExpr (1 samples, 0.12%)</title><rect x="9.4479%" y="773" width="0.1227%" height="15" fill="rgb(240,218,32)" fg:x="77" fg:w="1"/><text x="9.6979%" y="783.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_cow (1 samples, 0.12%)</title><rect x="9.5706%" y="1029" width="0.1227%" height="15" fill="rgb(252,5,43)" fg:x="78" fg:w="1"/><text x="9.8206%" y="1039.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::node_child_copy (1 samples, 0.12%)</title><rect x="9.5706%" y="1013" width="0.1227%" height="15" fill="rgb(252,84,19)" fg:x="78" fg:w="1"/><text x="9.8206%" y="1023.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_backptr (1 samples, 0.12%)</title><rect x="9.5706%" y="997" width="0.1227%" height="15" fill="rgb(243,152,39)" fg:x="78" fg:w="1"/><text x="9.8206%" y="1007.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_backptr (1 samples, 0.12%)</title><rect x="9.5706%" y="981" width="0.1227%" height="15" fill="rgb(234,160,15)" fg:x="78" fg:w="1"/><text x="9.8206%" y="991.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (1 samples, 0.12%)</title><rect x="9.5706%" y="965" width="0.1227%" height="15" fill="rgb(237,34,20)" fg:x="78" fg:w="1"/><text x="9.8206%" y="975.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (1 samples, 0.12%)</title><rect x="9.5706%" y="949" width="0.1227%" height="15" fill="rgb(229,97,13)" fg:x="78" fg:w="1"/><text x="9.8206%" y="959.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (1 samples, 0.12%)</title><rect x="9.5706%" y="933" width="0.1227%" height="15" fill="rgb(234,71,50)" fg:x="78" fg:w="1"/><text x="9.8206%" y="943.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (1 samples, 0.12%)</title><rect x="9.5706%" y="917" width="0.1227%" height="15" fill="rgb(253,155,4)" fg:x="78" fg:w="1"/><text x="9.8206%" y="927.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (1 samples, 0.12%)</title><rect x="9.5706%" y="901" width="0.1227%" height="15" fill="rgb(222,185,37)" fg:x="78" fg:w="1"/><text x="9.8206%" y="911.50"></text></g><g><title>std::io::Read::read_exact (1 samples, 0.12%)</title><rect x="9.5706%" y="885" width="0.1227%" height="15" fill="rgb(251,177,13)" fg:x="78" fg:w="1"/><text x="9.8206%" y="895.50"></text></g><g><title>std::io::default_read_exact (1 samples, 0.12%)</title><rect x="9.5706%" y="869" width="0.1227%" height="15" fill="rgb(250,179,40)" fg:x="78" fg:w="1"/><text x="9.8206%" y="879.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="9.5706%" y="853" width="0.1227%" height="15" fill="rgb(242,44,2)" fg:x="78" fg:w="1"/><text x="9.8206%" y="863.50"></text></g><g><title>sqlite3_blob_read (1 samples, 0.12%)</title><rect x="9.5706%" y="837" width="0.1227%" height="15" fill="rgb(216,177,13)" fg:x="78" fg:w="1"/><text x="9.8206%" y="847.50"></text></g><g><title>blobReadWrite (1 samples, 0.12%)</title><rect x="9.5706%" y="821" width="0.1227%" height="15" fill="rgb(216,106,43)" fg:x="78" fg:w="1"/><text x="9.8206%" y="831.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="9.5706%" y="805" width="0.1227%" height="15" fill="rgb(216,183,2)" fg:x="78" fg:w="1"/><text x="9.8206%" y="815.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="9.5706%" y="789" width="0.1227%" height="15" fill="rgb(249,75,3)" fg:x="78" fg:w="1"/><text x="9.8206%" y="799.50"></text></g><g><title>accessPayload (1 samples, 0.12%)</title><rect x="9.5706%" y="773" width="0.1227%" height="15" fill="rgb(219,67,39)" fg:x="78" fg:w="1"/><text x="9.8206%" y="783.50"></text></g><g><title>getOverflowPage (1 samples, 0.12%)</title><rect x="9.5706%" y="757" width="0.1227%" height="15" fill="rgb(253,228,2)" fg:x="78" fg:w="1"/><text x="9.8206%" y="767.50"></text></g><g><title>btreeGetPage (1 samples, 0.12%)</title><rect x="9.5706%" y="741" width="0.1227%" height="15" fill="rgb(235,138,27)" fg:x="78" fg:w="1"/><text x="9.8206%" y="751.50"></text></g><g><title>sqlite3PagerGet (1 samples, 0.12%)</title><rect x="9.5706%" y="725" width="0.1227%" height="15" fill="rgb(236,97,51)" fg:x="78" fg:w="1"/><text x="9.8206%" y="735.50"></text></g><g><title>getPageMMap (1 samples, 0.12%)</title><rect x="9.5706%" y="709" width="0.1227%" height="15" fill="rgb(240,80,30)" fg:x="78" fg:w="1"/><text x="9.8206%" y="719.50"></text></g><g><title>getPageNormal (1 samples, 0.12%)</title><rect x="9.5706%" y="693" width="0.1227%" height="15" fill="rgb(230,178,19)" fg:x="78" fg:w="1"/><text x="9.8206%" y="703.50"></text></g><g><title>sqlite3PcacheFetch (1 samples, 0.12%)</title><rect x="9.5706%" y="677" width="0.1227%" height="15" fill="rgb(210,190,27)" fg:x="78" fg:w="1"/><text x="9.8206%" y="687.50"></text></g><g><title>pcache1Fetch (1 samples, 0.12%)</title><rect x="9.5706%" y="661" width="0.1227%" height="15" fill="rgb(222,107,31)" fg:x="78" fg:w="1"/><text x="9.8206%" y="671.50"></text></g><g><title>pcache1FetchWithMutex (1 samples, 0.12%)</title><rect x="9.5706%" y="645" width="0.1227%" height="15" fill="rgb(216,127,34)" fg:x="78" fg:w="1"/><text x="9.8206%" y="655.50"></text></g><g><title>pcache1FetchNoMutex (1 samples, 0.12%)</title><rect x="9.5706%" y="629" width="0.1227%" height="15" fill="rgb(234,116,52)" fg:x="78" fg:w="1"/><text x="9.8206%" y="639.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::transactions::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::process_transaction (9 samples, 1.10%)</title><rect x="8.7117%" y="1221" width="1.1043%" height="15" fill="rgb(222,124,15)" fg:x="71" fg:w="9"/><text x="8.9617%" y="1231.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::commit (3 samples, 0.37%)</title><rect x="9.4479%" y="1205" width="0.3681%" height="15" fill="rgb(231,179,28)" fg:x="77" fg:w="3"/><text x="9.6979%" y="1215.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::commit (3 samples, 0.37%)</title><rect x="9.4479%" y="1189" width="0.3681%" height="15" fill="rgb(226,93,45)" fg:x="77" fg:w="3"/><text x="9.6979%" y="1199.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::put_all (3 samples, 0.37%)</title><rect x="9.4479%" y="1173" width="0.3681%" height="15" fill="rgb(215,8,51)" fg:x="77" fg:w="3"/><text x="9.6979%" y="1183.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt;::insert_batch (3 samples, 0.37%)</title><rect x="9.4479%" y="1157" width="0.3681%" height="15" fill="rgb(223,106,5)" fg:x="77" fg:w="3"/><text x="9.6979%" y="1167.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::inner_insert_batch (3 samples, 0.37%)</title><rect x="9.4479%" y="1141" width="0.3681%" height="15" fill="rgb(250,191,5)" fg:x="77" fg:w="3"/><text x="9.6979%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (2 samples, 0.25%)</title><rect x="9.5706%" y="1125" width="0.2454%" height="15" fill="rgb(242,132,44)" fg:x="78" fg:w="2"/><text x="9.8206%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.25%)</title><rect x="9.5706%" y="1109" width="0.2454%" height="15" fill="rgb(251,152,29)" fg:x="78" fg:w="2"/><text x="9.8206%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (2 samples, 0.25%)</title><rect x="9.5706%" y="1093" width="0.2454%" height="15" fill="rgb(218,179,5)" fg:x="78" fg:w="2"/><text x="9.8206%" y="1103.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::inner_insert_batch::{{closure}} (2 samples, 0.25%)</title><rect x="9.5706%" y="1077" width="0.2454%" height="15" fill="rgb(227,67,19)" fg:x="78" fg:w="2"/><text x="9.8206%" y="1087.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::insert_leaf_in_batch (2 samples, 0.25%)</title><rect x="9.5706%" y="1061" width="0.2454%" height="15" fill="rgb(233,119,31)" fg:x="78" fg:w="2"/><text x="9.8206%" y="1071.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::do_insert_leaf (2 samples, 0.25%)</title><rect x="9.5706%" y="1045" width="0.2454%" height="15" fill="rgb(241,120,22)" fg:x="78" fg:w="2"/><text x="9.8206%" y="1055.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::update_root_node_hash (1 samples, 0.12%)</title><rect x="9.6933%" y="1029" width="0.1227%" height="15" fill="rgb(224,102,30)" fg:x="79" fg:w="1"/><text x="9.9433%" y="1039.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::recalculate_root_hash (1 samples, 0.12%)</title><rect x="9.6933%" y="1013" width="0.1227%" height="15" fill="rgb(210,164,37)" fg:x="79" fg:w="1"/><text x="9.9433%" y="1023.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::get_nodetype_hash (1 samples, 0.12%)</title><rect x="9.6933%" y="997" width="0.1227%" height="15" fill="rgb(226,191,16)" fg:x="79" fg:w="1"/><text x="9.9433%" y="1007.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::node::TrieNodeType::write_consensus_bytes (1 samples, 0.12%)</title><rect x="9.6933%" y="981" width="0.1227%" height="15" fill="rgb(214,40,45)" fg:x="79" fg:w="1"/><text x="9.9433%" y="991.50"></text></g><g><title>&lt;T as blockstack_lib::chainstate::stacks::index::node::ConsensusSerializable&lt;M&gt;&gt;::write_consensus_bytes (1 samples, 0.12%)</title><rect x="9.6933%" y="965" width="0.1227%" height="15" fill="rgb(244,29,26)" fg:x="79" fg:w="1"/><text x="9.9433%" y="975.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::node::ptrs_consensus_hash (1 samples, 0.12%)</title><rect x="9.6933%" y="949" width="0.1227%" height="15" fill="rgb(216,16,5)" fg:x="79" fg:w="1"/><text x="9.9433%" y="959.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::node::TriePtr::write_consensus_bytes (1 samples, 0.12%)</title><rect x="9.6933%" y="933" width="0.1227%" height="15" fill="rgb(249,76,35)" fg:x="79" fg:w="1"/><text x="9.9433%" y="943.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt; as blockstack_lib::chainstate::stacks::index::BlockMap&gt;::get_block_hash_caching (1 samples, 0.12%)</title><rect x="9.6933%" y="917" width="0.1227%" height="15" fill="rgb(207,11,44)" fg:x="79" fg:w="1"/><text x="9.9433%" y="927.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt; as blockstack_lib::chainstate::stacks::index::BlockMap&gt;::get_block_hash (1 samples, 0.12%)</title><rect x="9.6933%" y="901" width="0.1227%" height="15" fill="rgb(228,190,49)" fg:x="79" fg:w="1"/><text x="9.9433%" y="911.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::get_block_hash (1 samples, 0.12%)</title><rect x="9.6933%" y="885" width="0.1227%" height="15" fill="rgb(214,173,12)" fg:x="79" fg:w="1"/><text x="9.9433%" y="895.50"></text></g><g><title>rusqlite::Connection::query_row (1 samples, 0.12%)</title><rect x="9.6933%" y="869" width="0.1227%" height="15" fill="rgb(218,26,35)" fg:x="79" fg:w="1"/><text x="9.9433%" y="879.50"></text></g><g><title>rusqlite::statement::Statement::query_row (1 samples, 0.12%)</title><rect x="9.6933%" y="853" width="0.1227%" height="15" fill="rgb(220,200,19)" fg:x="79" fg:w="1"/><text x="9.9433%" y="863.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.12%)</title><rect x="9.6933%" y="837" width="0.1227%" height="15" fill="rgb(239,95,49)" fg:x="79" fg:w="1"/><text x="9.9433%" y="847.50"></text></g><g><title>rusqlite::statement::Statement::query_row::{{closure}} (1 samples, 0.12%)</title><rect x="9.6933%" y="821" width="0.1227%" height="15" fill="rgb(235,85,53)" fg:x="79" fg:w="1"/><text x="9.9433%" y="831.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::get_block_hash::{{closure}} (1 samples, 0.12%)</title><rect x="9.6933%" y="805" width="0.1227%" height="15" fill="rgb(233,133,31)" fg:x="79" fg:w="1"/><text x="9.9433%" y="815.50"></text></g><g><title>rusqlite::row::Row::get (1 samples, 0.12%)</title><rect x="9.6933%" y="789" width="0.1227%" height="15" fill="rgb(218,25,20)" fg:x="79" fg:w="1"/><text x="9.9433%" y="799.50"></text></g><g><title>&lt;blockstack_lib::types::chainstate::SortitionId as rusqlite::types::from_sql::FromSql&gt;::column_result (1 samples, 0.12%)</title><rect x="9.6933%" y="773" width="0.1227%" height="15" fill="rgb(252,210,38)" fg:x="79" fg:w="1"/><text x="9.9433%" y="783.50"></text></g><g><title>blockstack_lib::util::hash::hex_bytes (1 samples, 0.12%)</title><rect x="9.6933%" y="757" width="0.1227%" height="15" fill="rgb(242,134,21)" fg:x="79" fg:w="1"/><text x="9.9433%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.12%)</title><rect x="9.6933%" y="741" width="0.1227%" height="15" fill="rgb(213,28,48)" fg:x="79" fg:w="1"/><text x="9.9433%" y="751.50"></text></g><g><title>blockstack_lib::util::hash::hex_bytes::{{closure}} (1 samples, 0.12%)</title><rect x="9.6933%" y="725" width="0.1227%" height="15" fill="rgb(250,196,2)" fg:x="79" fg:w="1"/><text x="9.9433%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.12%)</title><rect x="9.6933%" y="709" width="0.1227%" height="15" fill="rgb(227,5,17)" fg:x="79" fg:w="1"/><text x="9.9433%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="9.6933%" y="693" width="0.1227%" height="15" fill="rgb(221,226,24)" fg:x="79" fg:w="1"/><text x="9.9433%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="9.6933%" y="677" width="0.1227%" height="15" fill="rgb(211,5,48)" fg:x="79" fg:w="1"/><text x="9.9433%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.12%)</title><rect x="9.6933%" y="661" width="0.1227%" height="15" fill="rgb(219,150,6)" fg:x="79" fg:w="1"/><text x="9.9433%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.12%)</title><rect x="9.6933%" y="645" width="0.1227%" height="15" fill="rgb(251,46,16)" fg:x="79" fg:w="1"/><text x="9.9433%" y="655.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.12%)</title><rect x="9.6933%" y="629" width="0.1227%" height="15" fill="rgb(220,204,40)" fg:x="79" fg:w="1"/><text x="9.9433%" y="639.50"></text></g><g><title>blockstack_lib::chainstate::stacks::miner::&lt;impl blockstack_lib::chainstate::stacks::StacksBlockBuilder&gt;::build_anchored_block::{{closure}} (10 samples, 1.23%)</title><rect x="8.7117%" y="1253" width="1.2270%" height="15" fill="rgb(211,85,2)" fg:x="71" fg:w="10"/><text x="8.9617%" y="1263.50"></text></g><g><title>blockstack_lib::chainstate::stacks::miner::&lt;impl blockstack_lib::chainstate::stacks::StacksBlockBuilder&gt;::try_mine_tx_with_len (10 samples, 1.23%)</title><rect x="8.7117%" y="1237" width="1.2270%" height="15" fill="rgb(229,17,7)" fg:x="71" fg:w="10"/><text x="8.9617%" y="1247.50"></text></g><g><title>slog::Logger&lt;D&gt;::log (1 samples, 0.12%)</title><rect x="9.8160%" y="1221" width="0.1227%" height="15" fill="rgb(239,72,28)" fg:x="80" fg:w="1"/><text x="10.0660%" y="1231.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;D&gt; as slog::Drain&gt;::log (1 samples, 0.12%)</title><rect x="9.8160%" y="1205" width="0.1227%" height="15" fill="rgb(230,47,54)" fg:x="80" fg:w="1"/><text x="10.0660%" y="1215.50"></text></g><g><title>&lt;slog::Fuse&lt;D&gt; as slog::Drain&gt;::log (1 samples, 0.12%)</title><rect x="9.8160%" y="1189" width="0.1227%" height="15" fill="rgb(214,50,8)" fg:x="80" fg:w="1"/><text x="10.0660%" y="1199.50"></text></g><g><title>&lt;blockstack_lib::util::log::TermFormat&lt;D&gt; as slog::Drain&gt;::log (1 samples, 0.12%)</title><rect x="9.8160%" y="1173" width="0.1227%" height="15" fill="rgb(216,198,43)" fg:x="80" fg:w="1"/><text x="10.0660%" y="1183.50"></text></g><g><title>blockstack_lib::util::log::TermFormat&lt;D&gt;::format_full (1 samples, 0.12%)</title><rect x="9.8160%" y="1157" width="0.1227%" height="15" fill="rgb(234,20,35)" fg:x="80" fg:w="1"/><text x="10.0660%" y="1167.50"></text></g><g><title>&lt;slog_term::PlainSyncDecorator&lt;W&gt; as slog_term::Decorator&gt;::with_record (1 samples, 0.12%)</title><rect x="9.8160%" y="1141" width="0.1227%" height="15" fill="rgb(254,45,19)" fg:x="80" fg:w="1"/><text x="10.0660%" y="1151.50"></text></g><g><title>blockstack_lib::util::log::TermFormat&lt;D&gt;::format_full::{{closure}} (1 samples, 0.12%)</title><rect x="9.8160%" y="1125" width="0.1227%" height="15" fill="rgb(219,14,44)" fg:x="80" fg:w="1"/><text x="10.0660%" y="1135.50"></text></g><g><title>&lt;slog_term::PlainSyncRecordDecorator&lt;W&gt; as std::io::Write&gt;::flush (1 samples, 0.12%)</title><rect x="9.8160%" y="1109" width="0.1227%" height="15" fill="rgb(217,220,26)" fg:x="80" fg:w="1"/><text x="10.0660%" y="1119.50"></text></g><g><title>&lt;std::io::stdio::Stderr as std::io::Write&gt;::write_all (1 samples, 0.12%)</title><rect x="9.8160%" y="1093" width="0.1227%" height="15" fill="rgb(213,158,28)" fg:x="80" fg:w="1"/><text x="10.0660%" y="1103.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stderr as std::io::Write&gt;::write_all (1 samples, 0.12%)</title><rect x="9.8160%" y="1077" width="0.1227%" height="15" fill="rgb(252,51,52)" fg:x="80" fg:w="1"/><text x="10.0660%" y="1087.50"></text></g><g><title>&lt;std::io::stdio::StderrLock as std::io::Write&gt;::write_all (1 samples, 0.12%)</title><rect x="9.8160%" y="1061" width="0.1227%" height="15" fill="rgb(246,89,16)" fg:x="80" fg:w="1"/><text x="10.0660%" y="1071.50"></text></g><g><title>&lt;std::io::stdio::StderrRaw as std::io::Write&gt;::write_all (1 samples, 0.12%)</title><rect x="9.8160%" y="1045" width="0.1227%" height="15" fill="rgb(216,158,49)" fg:x="80" fg:w="1"/><text x="10.0660%" y="1055.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.12%)</title><rect x="9.8160%" y="1029" width="0.1227%" height="15" fill="rgb(236,107,19)" fg:x="80" fg:w="1"/><text x="10.0660%" y="1039.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stderr as std::io::Write&gt;::write (1 samples, 0.12%)</title><rect x="9.8160%" y="1013" width="0.1227%" height="15" fill="rgb(228,185,30)" fg:x="80" fg:w="1"/><text x="10.0660%" y="1023.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.12%)</title><rect x="9.8160%" y="997" width="0.1227%" height="15" fill="rgb(246,134,8)" fg:x="80" fg:w="1"/><text x="10.0660%" y="1007.50"></text></g><g><title>write (1 samples, 0.12%)</title><rect x="9.8160%" y="981" width="0.1227%" height="15" fill="rgb(214,143,50)" fg:x="80" fg:w="1"/><text x="10.0660%" y="991.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.12%)</title><rect x="9.9387%" y="1221" width="0.1227%" height="15" fill="rgb(228,75,8)" fg:x="81" fg:w="1"/><text x="10.1887%" y="1231.50"></text></g><g><title>rusqlite::Connection::execute::{{closure}} (1 samples, 0.12%)</title><rect x="9.9387%" y="1205" width="0.1227%" height="15" fill="rgb(207,175,4)" fg:x="81" fg:w="1"/><text x="10.1887%" y="1215.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.12%)</title><rect x="9.9387%" y="1189" width="0.1227%" height="15" fill="rgb(205,108,24)" fg:x="81" fg:w="1"/><text x="10.1887%" y="1199.50"></text></g><g><title>rusqlite::Connection::execute::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="9.9387%" y="1173" width="0.1227%" height="15" fill="rgb(244,120,49)" fg:x="81" fg:w="1"/><text x="10.1887%" y="1183.50"></text></g><g><title>rusqlite::statement::Statement::execute (1 samples, 0.12%)</title><rect x="9.9387%" y="1157" width="0.1227%" height="15" fill="rgb(223,47,38)" fg:x="81" fg:w="1"/><text x="10.1887%" y="1167.50"></text></g><g><title>rusqlite::statement::Statement::execute_with_bound_parameters (1 samples, 0.12%)</title><rect x="9.9387%" y="1141" width="0.1227%" height="15" fill="rgb(229,179,11)" fg:x="81" fg:w="1"/><text x="10.1887%" y="1151.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (1 samples, 0.12%)</title><rect x="9.9387%" y="1125" width="0.1227%" height="15" fill="rgb(231,122,1)" fg:x="81" fg:w="1"/><text x="10.1887%" y="1135.50"></text></g><g><title>sqlite3_step (1 samples, 0.12%)</title><rect x="9.9387%" y="1109" width="0.1227%" height="15" fill="rgb(245,119,9)" fg:x="81" fg:w="1"/><text x="10.1887%" y="1119.50"></text></g><g><title>sqlite3_step (1 samples, 0.12%)</title><rect x="9.9387%" y="1093" width="0.1227%" height="15" fill="rgb(241,163,25)" fg:x="81" fg:w="1"/><text x="10.1887%" y="1103.50"></text></g><g><title>sqlite3Step (1 samples, 0.12%)</title><rect x="9.9387%" y="1077" width="0.1227%" height="15" fill="rgb(217,214,3)" fg:x="81" fg:w="1"/><text x="10.1887%" y="1087.50"></text></g><g><title>sqlite3VdbeExec (1 samples, 0.12%)</title><rect x="9.9387%" y="1061" width="0.1227%" height="15" fill="rgb(240,86,28)" fg:x="81" fg:w="1"/><text x="10.1887%" y="1071.50"></text></g><g><title>sqlite3VdbeHalt (1 samples, 0.12%)</title><rect x="9.9387%" y="1045" width="0.1227%" height="15" fill="rgb(215,47,9)" fg:x="81" fg:w="1"/><text x="10.1887%" y="1055.50"></text></g><g><title>vdbeCommit (1 samples, 0.12%)</title><rect x="9.9387%" y="1029" width="0.1227%" height="15" fill="rgb(252,25,45)" fg:x="81" fg:w="1"/><text x="10.1887%" y="1039.50"></text></g><g><title>sqlite3BtreeCommitPhaseOne (1 samples, 0.12%)</title><rect x="9.9387%" y="1013" width="0.1227%" height="15" fill="rgb(251,164,9)" fg:x="81" fg:w="1"/><text x="10.1887%" y="1023.50"></text></g><g><title>sqlite3BtreeCommitPhaseOne (1 samples, 0.12%)</title><rect x="9.9387%" y="997" width="0.1227%" height="15" fill="rgb(233,194,0)" fg:x="81" fg:w="1"/><text x="10.1887%" y="1007.50"></text></g><g><title>sqlite3PagerCommitPhaseOne (1 samples, 0.12%)</title><rect x="9.9387%" y="981" width="0.1227%" height="15" fill="rgb(249,111,24)" fg:x="81" fg:w="1"/><text x="10.1887%" y="991.50"></text></g><g><title>sqlite3PagerCommitPhaseOne (1 samples, 0.12%)</title><rect x="9.9387%" y="965" width="0.1227%" height="15" fill="rgb(250,223,3)" fg:x="81" fg:w="1"/><text x="10.1887%" y="975.50"></text></g><g><title>pagerWalFrames (1 samples, 0.12%)</title><rect x="9.9387%" y="949" width="0.1227%" height="15" fill="rgb(236,178,37)" fg:x="81" fg:w="1"/><text x="10.1887%" y="959.50"></text></g><g><title>sqlite3WalFrames (1 samples, 0.12%)</title><rect x="9.9387%" y="933" width="0.1227%" height="15" fill="rgb(241,158,50)" fg:x="81" fg:w="1"/><text x="10.1887%" y="943.50"></text></g><g><title>sqlite3OsSync (1 samples, 0.12%)</title><rect x="9.9387%" y="917" width="0.1227%" height="15" fill="rgb(213,121,41)" fg:x="81" fg:w="1"/><text x="10.1887%" y="927.50"></text></g><g><title>sqlite3OsSync (1 samples, 0.12%)</title><rect x="9.9387%" y="901" width="0.1227%" height="15" fill="rgb(240,92,3)" fg:x="81" fg:w="1"/><text x="10.1887%" y="911.50"></text></g><g><title>unixSync (1 samples, 0.12%)</title><rect x="9.9387%" y="885" width="0.1227%" height="15" fill="rgb(205,123,3)" fg:x="81" fg:w="1"/><text x="10.1887%" y="895.50"></text></g><g><title>full_fsync (1 samples, 0.12%)</title><rect x="9.9387%" y="869" width="0.1227%" height="15" fill="rgb(205,97,47)" fg:x="81" fg:w="1"/><text x="10.1887%" y="879.50"></text></g><g><title>fsync (1 samples, 0.12%)</title><rect x="9.9387%" y="853" width="0.1227%" height="15" fill="rgb(247,152,14)" fg:x="81" fg:w="1"/><text x="10.1887%" y="863.50"></text></g><g><title>blockstack_lib::core::mempool::MemPoolDB::bump_last_known_nonces (2 samples, 0.25%)</title><rect x="9.9387%" y="1253" width="0.2454%" height="15" fill="rgb(248,195,53)" fg:x="81" fg:w="2"/><text x="10.1887%" y="1263.50"></text></g><g><title>rusqlite::Connection::execute (2 samples, 0.25%)</title><rect x="9.9387%" y="1237" width="0.2454%" height="15" fill="rgb(226,201,16)" fg:x="81" fg:w="2"/><text x="10.1887%" y="1247.50"></text></g><g><title>rusqlite::Connection::prepare (1 samples, 0.12%)</title><rect x="10.0613%" y="1221" width="0.1227%" height="15" fill="rgb(205,98,0)" fg:x="82" fg:w="1"/><text x="10.3113%" y="1231.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (1 samples, 0.12%)</title><rect x="10.0613%" y="1205" width="0.1227%" height="15" fill="rgb(214,191,48)" fg:x="82" fg:w="1"/><text x="10.3113%" y="1215.50"></text></g><g><title>sqlite3_prepare_v2 (1 samples, 0.12%)</title><rect x="10.0613%" y="1189" width="0.1227%" height="15" fill="rgb(237,112,39)" fg:x="82" fg:w="1"/><text x="10.3113%" y="1199.50"></text></g><g><title>sqlite3LockAndPrepare (1 samples, 0.12%)</title><rect x="10.0613%" y="1173" width="0.1227%" height="15" fill="rgb(247,203,27)" fg:x="82" fg:w="1"/><text x="10.3113%" y="1183.50"></text></g><g><title>sqlite3LockAndPrepare (1 samples, 0.12%)</title><rect x="10.0613%" y="1157" width="0.1227%" height="15" fill="rgb(235,124,28)" fg:x="82" fg:w="1"/><text x="10.3113%" y="1167.50"></text></g><g><title>sqlite3Prepare (1 samples, 0.12%)</title><rect x="10.0613%" y="1141" width="0.1227%" height="15" fill="rgb(208,207,46)" fg:x="82" fg:w="1"/><text x="10.3113%" y="1151.50"></text></g><g><title>sqlite3RunParser (1 samples, 0.12%)</title><rect x="10.0613%" y="1125" width="0.1227%" height="15" fill="rgb(234,176,4)" fg:x="82" fg:w="1"/><text x="10.3113%" y="1135.50"></text></g><g><title>sqlite3Parser (1 samples, 0.12%)</title><rect x="10.0613%" y="1109" width="0.1227%" height="15" fill="rgb(230,133,28)" fg:x="82" fg:w="1"/><text x="10.3113%" y="1119.50"></text></g><g><title>yy_reduce (1 samples, 0.12%)</title><rect x="10.0613%" y="1093" width="0.1227%" height="15" fill="rgb(211,137,40)" fg:x="82" fg:w="1"/><text x="10.3113%" y="1103.50"></text></g><g><title>sqlite3Update (1 samples, 0.12%)</title><rect x="10.0613%" y="1077" width="0.1227%" height="15" fill="rgb(254,35,13)" fg:x="82" fg:w="1"/><text x="10.3113%" y="1087.50"></text></g><g><title>sqlite3WhereBegin (1 samples, 0.12%)</title><rect x="10.0613%" y="1061" width="0.1227%" height="15" fill="rgb(225,49,51)" fg:x="82" fg:w="1"/><text x="10.3113%" y="1071.50"></text></g><g><title>sqlite3VdbeSetP4KeyInfo (1 samples, 0.12%)</title><rect x="10.0613%" y="1045" width="0.1227%" height="15" fill="rgb(251,10,15)" fg:x="82" fg:w="1"/><text x="10.3113%" y="1055.50"></text></g><g><title>sqlite3KeyInfoOfIndex (1 samples, 0.12%)</title><rect x="10.0613%" y="1029" width="0.1227%" height="15" fill="rgb(228,207,15)" fg:x="82" fg:w="1"/><text x="10.3113%" y="1039.50"></text></g><g><title>blockstack_lib::core::mempool::MemPoolDB::get_next_tx_to_consider_no_estimate (3 samples, 0.37%)</title><rect x="10.1840%" y="1237" width="0.3681%" height="15" fill="rgb(241,99,19)" fg:x="83" fg:w="3"/><text x="10.4340%" y="1247.50"></text></g><g><title>blockstack_lib::util::db::query_row (3 samples, 0.37%)</title><rect x="10.1840%" y="1221" width="0.3681%" height="15" fill="rgb(207,104,49)" fg:x="83" fg:w="3"/><text x="10.4340%" y="1231.50"></text></g><g><title>rusqlite::Connection::query_row_and_then (3 samples, 0.37%)</title><rect x="10.1840%" y="1205" width="0.3681%" height="15" fill="rgb(234,99,18)" fg:x="83" fg:w="3"/><text x="10.4340%" y="1215.50"></text></g><g><title>rusqlite::row::Rows::get_expected_row (3 samples, 0.37%)</title><rect x="10.1840%" y="1189" width="0.3681%" height="15" fill="rgb(213,191,49)" fg:x="83" fg:w="3"/><text x="10.4340%" y="1199.50"></text></g><g><title>rusqlite::row::Rows::next (3 samples, 0.37%)</title><rect x="10.1840%" y="1173" width="0.3681%" height="15" fill="rgb(210,226,19)" fg:x="83" fg:w="3"/><text x="10.4340%" y="1183.50"></text></g><g><title>&lt;rusqlite::row::Rows as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (3 samples, 0.37%)</title><rect x="10.1840%" y="1157" width="0.3681%" height="15" fill="rgb(229,97,18)" fg:x="83" fg:w="3"/><text x="10.4340%" y="1167.50"></text></g><g><title>rusqlite::statement::Statement::step (3 samples, 0.37%)</title><rect x="10.1840%" y="1141" width="0.3681%" height="15" fill="rgb(211,167,15)" fg:x="83" fg:w="3"/><text x="10.4340%" y="1151.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (3 samples, 0.37%)</title><rect x="10.1840%" y="1125" width="0.3681%" height="15" fill="rgb(210,169,34)" fg:x="83" fg:w="3"/><text x="10.4340%" y="1135.50"></text></g><g><title>sqlite3_step (3 samples, 0.37%)</title><rect x="10.1840%" y="1109" width="0.3681%" height="15" fill="rgb(241,121,31)" fg:x="83" fg:w="3"/><text x="10.4340%" y="1119.50"></text></g><g><title>sqlite3_step (3 samples, 0.37%)</title><rect x="10.1840%" y="1093" width="0.3681%" height="15" fill="rgb(232,40,11)" fg:x="83" fg:w="3"/><text x="10.4340%" y="1103.50"></text></g><g><title>sqlite3Step (3 samples, 0.37%)</title><rect x="10.1840%" y="1077" width="0.3681%" height="15" fill="rgb(205,86,26)" fg:x="83" fg:w="3"/><text x="10.4340%" y="1087.50"></text></g><g><title>sqlite3VdbeExec (3 samples, 0.37%)</title><rect x="10.1840%" y="1061" width="0.3681%" height="15" fill="rgb(231,126,28)" fg:x="83" fg:w="3"/><text x="10.4340%" y="1071.50"></text></g><g><title>sqlite3VdbeCursorMoveto (3 samples, 0.37%)</title><rect x="10.1840%" y="1045" width="0.3681%" height="15" fill="rgb(219,221,18)" fg:x="83" fg:w="3"/><text x="10.4340%" y="1055.50"></text></g><g><title>sqlite3VdbeFinishMoveto (3 samples, 0.37%)</title><rect x="10.1840%" y="1029" width="0.3681%" height="15" fill="rgb(211,40,0)" fg:x="83" fg:w="3"/><text x="10.4340%" y="1039.50"></text></g><g><title>sqlite3BtreeMovetoUnpacked (3 samples, 0.37%)</title><rect x="10.1840%" y="1013" width="0.3681%" height="15" fill="rgb(239,85,43)" fg:x="83" fg:w="3"/><text x="10.4340%" y="1023.50"></text></g><g><title>btreeParseCellPtr (3 samples, 0.37%)</title><rect x="10.1840%" y="997" width="0.3681%" height="15" fill="rgb(231,55,21)" fg:x="83" fg:w="3"/><text x="10.4340%" y="1007.50"></text></g><g><title>regex::compile::Compiler::c_alternate (1 samples, 0.12%)</title><rect x="10.5521%" y="773" width="0.1227%" height="15" fill="rgb(225,184,43)" fg:x="86" fg:w="1"/><text x="10.8021%" y="783.50"></text></g><g><title>regex::compile::Compiler::c_class (1 samples, 0.12%)</title><rect x="10.5521%" y="757" width="0.1227%" height="15" fill="rgb(251,158,41)" fg:x="86" fg:w="1"/><text x="10.8021%" y="767.50"></text></g><g><title>regex::compile::CompileClass::compile (1 samples, 0.12%)</title><rect x="10.5521%" y="741" width="0.1227%" height="15" fill="rgb(234,159,37)" fg:x="86" fg:w="1"/><text x="10.8021%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;regex::compile::Hole&gt;&gt; (1 samples, 0.12%)</title><rect x="10.6748%" y="741" width="0.1227%" height="15" fill="rgb(216,204,22)" fg:x="87" fg:w="1"/><text x="10.9248%" y="751.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="10.6748%" y="725" width="0.1227%" height="15" fill="rgb(214,17,3)" fg:x="87" fg:w="1"/><text x="10.9248%" y="735.50"></text></g><g><title>regex::compile::Compiler::c (3 samples, 0.37%)</title><rect x="10.5521%" y="821" width="0.3681%" height="15" fill="rgb(212,111,17)" fg:x="86" fg:w="3"/><text x="10.8021%" y="831.50"></text></g><g><title>regex::compile::Compiler::c_concat (3 samples, 0.37%)</title><rect x="10.5521%" y="805" width="0.3681%" height="15" fill="rgb(221,157,24)" fg:x="86" fg:w="3"/><text x="10.8021%" y="815.50"></text></g><g><title>regex::compile::Compiler::c_repeat_range (3 samples, 0.37%)</title><rect x="10.5521%" y="789" width="0.3681%" height="15" fill="rgb(252,16,13)" fg:x="86" fg:w="3"/><text x="10.8021%" y="799.50"></text></g><g><title>regex::compile::Compiler::fill_to_next (2 samples, 0.25%)</title><rect x="10.6748%" y="773" width="0.2454%" height="15" fill="rgb(221,62,2)" fg:x="87" fg:w="2"/><text x="10.9248%" y="783.50"></text></g><g><title>regex::compile::Compiler::fill (2 samples, 0.25%)</title><rect x="10.6748%" y="757" width="0.2454%" height="15" fill="rgb(247,87,22)" fg:x="87" fg:w="2"/><text x="10.9248%" y="767.50"></text></g><g><title>regex::compile::Compiler::fill (1 samples, 0.12%)</title><rect x="10.7975%" y="741" width="0.1227%" height="15" fill="rgb(215,73,9)" fg:x="88" fg:w="1"/><text x="11.0475%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;regex::compile::Hole&gt;&gt; (1 samples, 0.12%)</title><rect x="10.7975%" y="725" width="0.1227%" height="15" fill="rgb(207,175,33)" fg:x="88" fg:w="1"/><text x="11.0475%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.12%)</title><rect x="10.7975%" y="709" width="0.1227%" height="15" fill="rgb(243,129,54)" fg:x="88" fg:w="1"/><text x="11.0475%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::peekable::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="10.9202%" y="757" width="0.1227%" height="15" fill="rgb(227,119,45)" fg:x="89" fg:w="1"/><text x="11.1702%" y="767.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="10.9202%" y="741" width="0.1227%" height="15" fill="rgb(205,109,36)" fg:x="89" fg:w="1"/><text x="11.1702%" y="751.50"></text></g><g><title>&lt;regex_syntax::utf8::Utf8Sequences as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="10.9202%" y="725" width="0.1227%" height="15" fill="rgb(205,6,39)" fg:x="89" fg:w="1"/><text x="11.1702%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.12%)</title><rect x="10.9202%" y="709" width="0.1227%" height="15" fill="rgb(221,32,16)" fg:x="89" fg:w="1"/><text x="11.1702%" y="719.50"></text></g><g><title>core::ptr::read (1 samples, 0.12%)</title><rect x="10.9202%" y="693" width="0.1227%" height="15" fill="rgb(228,144,50)" fg:x="89" fg:w="1"/><text x="11.1702%" y="703.50"></text></g><g><title>regex::compile::Compiler::c_alternate (2 samples, 0.25%)</title><rect x="10.9202%" y="805" width="0.2454%" height="15" fill="rgb(229,201,53)" fg:x="89" fg:w="2"/><text x="11.1702%" y="815.50"></text></g><g><title>regex::compile::Compiler::c_class (2 samples, 0.25%)</title><rect x="10.9202%" y="789" width="0.2454%" height="15" fill="rgb(249,153,27)" fg:x="89" fg:w="2"/><text x="11.1702%" y="799.50"></text></g><g><title>regex::compile::CompileClass::compile (2 samples, 0.25%)</title><rect x="10.9202%" y="773" width="0.2454%" height="15" fill="rgb(227,106,25)" fg:x="89" fg:w="2"/><text x="11.1702%" y="783.50"></text></g><g><title>regex::compile::CompileClass::c_utf8_seq (1 samples, 0.12%)</title><rect x="11.0429%" y="757" width="0.1227%" height="15" fill="rgb(230,65,29)" fg:x="90" fg:w="1"/><text x="11.2929%" y="767.50"></text></g><g><title>regex::compile::Compiler::c_class (1 samples, 0.12%)</title><rect x="11.1656%" y="805" width="0.1227%" height="15" fill="rgb(221,57,46)" fg:x="91" fg:w="1"/><text x="11.4156%" y="815.50"></text></g><g><title>regex::compile::CompileClass::compile (1 samples, 0.12%)</title><rect x="11.1656%" y="789" width="0.1227%" height="15" fill="rgb(229,161,17)" fg:x="91" fg:w="1"/><text x="11.4156%" y="799.50"></text></g><g><title>regex::compile::Compiler::c (7 samples, 0.86%)</title><rect x="10.5521%" y="901" width="0.8589%" height="15" fill="rgb(222,213,11)" fg:x="86" fg:w="7"/><text x="10.8021%" y="911.50"></text></g><g><title>regex::compile::Compiler::c_concat (7 samples, 0.86%)</title><rect x="10.5521%" y="885" width="0.8589%" height="15" fill="rgb(235,35,13)" fg:x="86" fg:w="7"/><text x="10.8021%" y="895.50"></text></g><g><title>regex::compile::Compiler::c (7 samples, 0.86%)</title><rect x="10.5521%" y="869" width="0.8589%" height="15" fill="rgb(233,158,34)" fg:x="86" fg:w="7"/><text x="10.8021%" y="879.50"></text></g><g><title>regex::compile::Compiler::c (7 samples, 0.86%)</title><rect x="10.5521%" y="853" width="0.8589%" height="15" fill="rgb(215,151,48)" fg:x="86" fg:w="7"/><text x="10.8021%" y="863.50"></text></g><g><title>regex::compile::Compiler::c_concat (7 samples, 0.86%)</title><rect x="10.5521%" y="837" width="0.8589%" height="15" fill="rgb(229,84,14)" fg:x="86" fg:w="7"/><text x="10.8021%" y="847.50"></text></g><g><title>regex::compile::Compiler::c_repeat_range (4 samples, 0.49%)</title><rect x="10.9202%" y="821" width="0.4908%" height="15" fill="rgb(229,68,14)" fg:x="89" fg:w="4"/><text x="11.1702%" y="831.50"></text></g><g><title>regex::compile::Compiler::fill_to_next (1 samples, 0.12%)</title><rect x="11.2883%" y="805" width="0.1227%" height="15" fill="rgb(243,106,26)" fg:x="92" fg:w="1"/><text x="11.5383%" y="815.50"></text></g><g><title>regex::compile::Compiler::fill (1 samples, 0.12%)</title><rect x="11.2883%" y="789" width="0.1227%" height="15" fill="rgb(206,45,38)" fg:x="92" fg:w="1"/><text x="11.5383%" y="799.50"></text></g><g><title>regex::compile::Compiler::fill (1 samples, 0.12%)</title><rect x="11.2883%" y="773" width="0.1227%" height="15" fill="rgb(226,6,15)" fg:x="92" fg:w="1"/><text x="11.5383%" y="783.50"></text></g><g><title>regex::compile::Compiler::fill (1 samples, 0.12%)</title><rect x="11.2883%" y="757" width="0.1227%" height="15" fill="rgb(232,22,54)" fg:x="92" fg:w="1"/><text x="11.5383%" y="767.50"></text></g><g><title>regex::compile::MaybeInst::fill (1 samples, 0.12%)</title><rect x="11.2883%" y="741" width="0.1227%" height="15" fill="rgb(229,222,32)" fg:x="92" fg:w="1"/><text x="11.5383%" y="751.50"></text></g><g><title>regex::compile::Compiler::compile (10 samples, 1.23%)</title><rect x="10.5521%" y="933" width="1.2270%" height="15" fill="rgb(228,62,29)" fg:x="86" fg:w="10"/><text x="10.8021%" y="943.50"></text></g><g><title>regex::compile::Compiler::compile_one (10 samples, 1.23%)</title><rect x="10.5521%" y="917" width="1.2270%" height="15" fill="rgb(251,103,34)" fg:x="86" fg:w="10"/><text x="10.8021%" y="927.50"></text></g><g><title>regex::compile::Compiler::compile_finish (3 samples, 0.37%)</title><rect x="11.4110%" y="901" width="0.3681%" height="15" fill="rgb(233,12,30)" fg:x="93" fg:w="3"/><text x="11.6610%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.37%)</title><rect x="11.4110%" y="885" width="0.3681%" height="15" fill="rgb(238,52,0)" fg:x="93" fg:w="3"/><text x="11.6610%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.37%)</title><rect x="11.4110%" y="869" width="0.3681%" height="15" fill="rgb(223,98,5)" fg:x="93" fg:w="3"/><text x="11.6610%" y="879.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.25%)</title><rect x="11.5337%" y="853" width="0.2454%" height="15" fill="rgb(228,75,37)" fg:x="94" fg:w="2"/><text x="11.7837%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.25%)</title><rect x="11.5337%" y="837" width="0.2454%" height="15" fill="rgb(205,115,49)" fg:x="94" fg:w="2"/><text x="11.7837%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.25%)</title><rect x="11.5337%" y="821" width="0.2454%" height="15" fill="rgb(250,154,43)" fg:x="94" fg:w="2"/><text x="11.7837%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.25%)</title><rect x="11.5337%" y="805" width="0.2454%" height="15" fill="rgb(226,43,29)" fg:x="94" fg:w="2"/><text x="11.7837%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.25%)</title><rect x="11.5337%" y="789" width="0.2454%" height="15" fill="rgb(249,228,39)" fg:x="94" fg:w="2"/><text x="11.7837%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.25%)</title><rect x="11.5337%" y="773" width="0.2454%" height="15" fill="rgb(216,79,43)" fg:x="94" fg:w="2"/><text x="11.7837%" y="783.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.25%)</title><rect x="11.5337%" y="757" width="0.2454%" height="15" fill="rgb(228,95,12)" fg:x="94" fg:w="2"/><text x="11.7837%" y="767.50"></text></g><g><title>regex::compile::Compiler::compile_finish::{{closure}} (2 samples, 0.25%)</title><rect x="11.5337%" y="741" width="0.2454%" height="15" fill="rgb(249,221,15)" fg:x="94" fg:w="2"/><text x="11.7837%" y="751.50"></text></g><g><title>regex::compile::MaybeInst::unwrap (2 samples, 0.25%)</title><rect x="11.5337%" y="725" width="0.2454%" height="15" fill="rgb(233,34,13)" fg:x="94" fg:w="2"/><text x="11.7837%" y="735.50"></text></g><g><title>regex::compile::Compiler::new (1 samples, 0.12%)</title><rect x="11.7791%" y="933" width="0.1227%" height="15" fill="rgb(214,103,39)" fg:x="96" fg:w="1"/><text x="12.0291%" y="943.50"></text></g><g><title>regex::compile::SuffixCache::new (1 samples, 0.12%)</title><rect x="11.7791%" y="917" width="0.1227%" height="15" fill="rgb(251,126,39)" fg:x="96" fg:w="1"/><text x="12.0291%" y="927.50"></text></g><g><title>alloc::vec::from_elem (1 samples, 0.12%)</title><rect x="11.7791%" y="901" width="0.1227%" height="15" fill="rgb(214,216,36)" fg:x="96" fg:w="1"/><text x="12.0291%" y="911.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.12%)</title><rect x="11.7791%" y="885" width="0.1227%" height="15" fill="rgb(220,221,8)" fg:x="96" fg:w="1"/><text x="12.0291%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (1 samples, 0.12%)</title><rect x="11.7791%" y="869" width="0.1227%" height="15" fill="rgb(240,216,3)" fg:x="96" fg:w="1"/><text x="12.0291%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.12%)</title><rect x="11.7791%" y="853" width="0.1227%" height="15" fill="rgb(232,218,17)" fg:x="96" fg:w="1"/><text x="12.0291%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (1 samples, 0.12%)</title><rect x="11.7791%" y="837" width="0.1227%" height="15" fill="rgb(229,163,45)" fg:x="96" fg:w="1"/><text x="12.0291%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.12%)</title><rect x="11.7791%" y="821" width="0.1227%" height="15" fill="rgb(231,110,42)" fg:x="96" fg:w="1"/><text x="12.0291%" y="831.50"></text></g><g><title>alloc::alloc::alloc_zeroed (1 samples, 0.12%)</title><rect x="11.7791%" y="805" width="0.1227%" height="15" fill="rgb(208,170,48)" fg:x="96" fg:w="1"/><text x="12.0291%" y="815.50"></text></g><g><title>__libc_calloc (1 samples, 0.12%)</title><rect x="11.7791%" y="789" width="0.1227%" height="15" fill="rgb(239,116,25)" fg:x="96" fg:w="1"/><text x="12.0291%" y="799.50"></text></g><g><title>blockstack_lib::vm::ast::parser::LexMatcher::new (12 samples, 1.47%)</title><rect x="10.5521%" y="997" width="1.4724%" height="15" fill="rgb(219,200,50)" fg:x="86" fg:w="12"/><text x="10.8021%" y="1007.50"></text></g><g><title>regex::re_unicode::Regex::new (12 samples, 1.47%)</title><rect x="10.5521%" y="981" width="1.4724%" height="15" fill="rgb(245,200,0)" fg:x="86" fg:w="12"/><text x="10.8021%" y="991.50"></text></g><g><title>regex::re_builder::set_unicode::RegexSetBuilder::build (12 samples, 1.47%)</title><rect x="10.5521%" y="965" width="1.4724%" height="15" fill="rgb(245,119,33)" fg:x="86" fg:w="12"/><text x="10.8021%" y="975.50"></text></g><g><title>regex::exec::ExecBuilder::build (12 samples, 1.47%)</title><rect x="10.5521%" y="949" width="1.4724%" height="15" fill="rgb(231,125,12)" fg:x="86" fg:w="12"/><text x="10.8021%" y="959.50"></text></g><g><title>regex::exec::ExecBuilder::parse (1 samples, 0.12%)</title><rect x="11.9018%" y="933" width="0.1227%" height="15" fill="rgb(216,96,41)" fg:x="97" fg:w="1"/><text x="12.1518%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.12%)</title><rect x="11.9018%" y="917" width="0.1227%" height="15" fill="rgb(248,43,45)" fg:x="97" fg:w="1"/><text x="12.1518%" y="927.50"></text></g><g><title>regex::exec::ExecBuilder::parse::{{closure}} (1 samples, 0.12%)</title><rect x="11.9018%" y="901" width="0.1227%" height="15" fill="rgb(217,222,7)" fg:x="97" fg:w="1"/><text x="12.1518%" y="911.50"></text></g><g><title>regex_syntax::hir::literal::Literals::union_prefixes (1 samples, 0.12%)</title><rect x="11.9018%" y="885" width="0.1227%" height="15" fill="rgb(233,28,6)" fg:x="97" fg:w="1"/><text x="12.1518%" y="895.50"></text></g><g><title>regex_syntax::hir::literal::prefixes (1 samples, 0.12%)</title><rect x="11.9018%" y="869" width="0.1227%" height="15" fill="rgb(231,218,15)" fg:x="97" fg:w="1"/><text x="12.1518%" y="879.50"></text></g><g><title>regex_syntax::hir::literal::Literals::add (1 samples, 0.12%)</title><rect x="11.9018%" y="853" width="0.1227%" height="15" fill="rgb(226,171,48)" fg:x="97" fg:w="1"/><text x="12.1518%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.12%)</title><rect x="11.9018%" y="837" width="0.1227%" height="15" fill="rgb(235,201,9)" fg:x="97" fg:w="1"/><text x="12.1518%" y="847.50"></text></g><g><title>core::ptr::write (1 samples, 0.12%)</title><rect x="11.9018%" y="821" width="0.1227%" height="15" fill="rgb(217,80,15)" fg:x="97" fg:w="1"/><text x="12.1518%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;regex::prog::Inst&gt;&gt; (1 samples, 0.12%)</title><rect x="12.0245%" y="837" width="0.1227%" height="15" fill="rgb(219,152,8)" fg:x="98" fg:w="1"/><text x="12.2745%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="12.0245%" y="821" width="0.1227%" height="15" fill="rgb(243,107,38)" fg:x="98" fg:w="1"/><text x="12.2745%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;[regex::prog::Inst]&gt; (1 samples, 0.12%)</title><rect x="12.0245%" y="805" width="0.1227%" height="15" fill="rgb(231,17,5)" fg:x="98" fg:w="1"/><text x="12.2745%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::prog::Inst&gt; (1 samples, 0.12%)</title><rect x="12.0245%" y="789" width="0.1227%" height="15" fill="rgb(209,25,54)" fg:x="98" fg:w="1"/><text x="12.2745%" y="799.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (14 samples, 1.72%)</title><rect x="10.5521%" y="1189" width="1.7178%" height="15" fill="rgb(219,0,2)" fg:x="86" fg:w="14"/><text x="10.8021%" y="1199.50"></text></g><g><title>rusqlite::Connection::query_row_and_then::{{closure}} (14 samples, 1.72%)</title><rect x="10.5521%" y="1173" width="1.7178%" height="15" fill="rgb(246,9,5)" fg:x="86" fg:w="14"/><text x="10.8021%" y="1183.50"></text></g><g><title>blockstack_lib::util::db::query_row::{{closure}} (14 samples, 1.72%)</title><rect x="10.5521%" y="1157" width="1.7178%" height="15" fill="rgb(226,159,4)" fg:x="86" fg:w="14"/><text x="10.8021%" y="1167.50"></text></g><g><title>&lt;blockstack_lib::core::mempool::MemPoolTxInfo as blockstack_lib::util::db::FromRow&lt;blockstack_lib::core::mempool::MemPoolTxInfo&gt;&gt;::from_row (14 samples, 1.72%)</title><rect x="10.5521%" y="1141" width="1.7178%" height="15" fill="rgb(219,175,34)" fg:x="86" fg:w="14"/><text x="10.8021%" y="1151.50"></text></g><g><title>blockstack_lib::chainstate::stacks::transaction::&lt;impl blockstack_lib::codec::StacksMessageCodec for blockstack_lib::chainstate::stacks::StacksTransaction&gt;::consensus_deserialize (14 samples, 1.72%)</title><rect x="10.5521%" y="1125" width="1.7178%" height="15" fill="rgb(236,10,46)" fg:x="86" fg:w="14"/><text x="10.8021%" y="1135.50"></text></g><g><title>blockstack_lib::chainstate::stacks::transaction::&lt;impl blockstack_lib::chainstate::stacks::StacksTransaction&gt;::consensus_deserialize_with_len (14 samples, 1.72%)</title><rect x="10.5521%" y="1109" width="1.7178%" height="15" fill="rgb(240,211,16)" fg:x="86" fg:w="14"/><text x="10.8021%" y="1119.50"></text></g><g><title>blockstack_lib::codec::read_next (14 samples, 1.72%)</title><rect x="10.5521%" y="1093" width="1.7178%" height="15" fill="rgb(205,3,43)" fg:x="86" fg:w="14"/><text x="10.8021%" y="1103.50"></text></g><g><title>blockstack_lib::chainstate::stacks::transaction::&lt;impl blockstack_lib::codec::StacksMessageCodec for blockstack_lib::chainstate::stacks::TransactionPayload&gt;::consensus_deserialize (14 samples, 1.72%)</title><rect x="10.5521%" y="1077" width="1.7178%" height="15" fill="rgb(245,7,22)" fg:x="86" fg:w="14"/><text x="10.8021%" y="1087.50"></text></g><g><title>blockstack_lib::codec::read_next (14 samples, 1.72%)</title><rect x="10.5521%" y="1061" width="1.7178%" height="15" fill="rgb(239,132,32)" fg:x="86" fg:w="14"/><text x="10.8021%" y="1071.50"></text></g><g><title>blockstack_lib::chainstate::stacks::transaction::&lt;impl blockstack_lib::codec::StacksMessageCodec for blockstack_lib::chainstate::stacks::TransactionContractCall&gt;::consensus_deserialize (14 samples, 1.72%)</title><rect x="10.5521%" y="1045" width="1.7178%" height="15" fill="rgb(228,202,34)" fg:x="86" fg:w="14"/><text x="10.8021%" y="1055.50"></text></g><g><title>blockstack_lib::util::strings::StacksString::is_clarity_variable (14 samples, 1.72%)</title><rect x="10.5521%" y="1029" width="1.7178%" height="15" fill="rgb(254,200,22)" fg:x="86" fg:w="14"/><text x="10.8021%" y="1039.50"></text></g><g><title>blockstack_lib::vm::ast::parser::lex (14 samples, 1.72%)</title><rect x="10.5521%" y="1013" width="1.7178%" height="15" fill="rgb(219,10,39)" fg:x="86" fg:w="14"/><text x="10.8021%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;[blockstack_lib::vm::ast::parser::LexMatcher (2 samples, 0.25%)</title><rect x="12.0245%" y="997" width="0.2454%" height="15" fill="rgb(226,210,39)" fg:x="98" fg:w="2"/><text x="12.2745%" y="1007.50"></text></g><g><title> 21]&gt; (2 samples, 0.25%)</title><rect x="12.0245%" y="981" width="0.2454%" height="15" fill="rgb(208,219,16)" fg:x="98" fg:w="2"/><text x="12.2745%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;blockstack_lib::vm::ast::parser::LexMatcher&gt; (2 samples, 0.25%)</title><rect x="12.0245%" y="965" width="0.2454%" height="15" fill="rgb(216,158,51)" fg:x="98" fg:w="2"/><text x="12.2745%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::re_unicode::Regex&gt; (2 samples, 0.25%)</title><rect x="12.0245%" y="949" width="0.2454%" height="15" fill="rgb(233,14,44)" fg:x="98" fg:w="2"/><text x="12.2745%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::exec::Exec&gt; (2 samples, 0.25%)</title><rect x="12.0245%" y="933" width="0.2454%" height="15" fill="rgb(237,97,39)" fg:x="98" fg:w="2"/><text x="12.2745%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;regex::exec::ExecReadOnly&gt;&gt; (2 samples, 0.25%)</title><rect x="12.0245%" y="917" width="0.2454%" height="15" fill="rgb(218,198,43)" fg:x="98" fg:w="2"/><text x="12.2745%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.25%)</title><rect x="12.0245%" y="901" width="0.2454%" height="15" fill="rgb(231,104,20)" fg:x="98" fg:w="2"/><text x="12.2745%" y="911.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.25%)</title><rect x="12.0245%" y="885" width="0.2454%" height="15" fill="rgb(254,36,13)" fg:x="98" fg:w="2"/><text x="12.2745%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::exec::ExecReadOnly&gt; (2 samples, 0.25%)</title><rect x="12.0245%" y="869" width="0.2454%" height="15" fill="rgb(248,14,50)" fg:x="98" fg:w="2"/><text x="12.2745%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::prog::Program&gt; (2 samples, 0.25%)</title><rect x="12.0245%" y="853" width="0.2454%" height="15" fill="rgb(217,107,29)" fg:x="98" fg:w="2"/><text x="12.2745%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::literal::imp::LiteralSearcher&gt; (1 samples, 0.12%)</title><rect x="12.1472%" y="837" width="0.1227%" height="15" fill="rgb(251,169,33)" fg:x="99" fg:w="1"/><text x="12.3972%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;regex::literal::imp::FreqyPacked&gt; (1 samples, 0.12%)</title><rect x="12.1472%" y="821" width="0.1227%" height="15" fill="rgb(217,108,32)" fg:x="99" fg:w="1"/><text x="12.3972%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.12%)</title><rect x="12.1472%" y="805" width="0.1227%" height="15" fill="rgb(219,66,42)" fg:x="99" fg:w="1"/><text x="12.3972%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.12%)</title><rect x="12.1472%" y="789" width="0.1227%" height="15" fill="rgb(206,180,7)" fg:x="99" fg:w="1"/><text x="12.3972%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="12.1472%" y="773" width="0.1227%" height="15" fill="rgb(208,226,31)" fg:x="99" fg:w="1"/><text x="12.3972%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.12%)</title><rect x="12.1472%" y="757" width="0.1227%" height="15" fill="rgb(218,26,49)" fg:x="99" fg:w="1"/><text x="12.3972%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.12%)</title><rect x="12.1472%" y="741" width="0.1227%" height="15" fill="rgb(233,197,48)" fg:x="99" fg:w="1"/><text x="12.3972%" y="751.50"></text></g><g><title>rusqlite::Connection::prepare (1 samples, 0.12%)</title><rect x="12.2699%" y="1189" width="0.1227%" height="15" fill="rgb(252,181,51)" fg:x="100" fg:w="1"/><text x="12.5199%" y="1199.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (1 samples, 0.12%)</title><rect x="12.2699%" y="1173" width="0.1227%" height="15" fill="rgb(253,90,19)" fg:x="100" fg:w="1"/><text x="12.5199%" y="1183.50"></text></g><g><title>sqlite3_prepare_v2 (1 samples, 0.12%)</title><rect x="12.2699%" y="1157" width="0.1227%" height="15" fill="rgb(215,171,30)" fg:x="100" fg:w="1"/><text x="12.5199%" y="1167.50"></text></g><g><title>sqlite3LockAndPrepare (1 samples, 0.12%)</title><rect x="12.2699%" y="1141" width="0.1227%" height="15" fill="rgb(214,222,9)" fg:x="100" fg:w="1"/><text x="12.5199%" y="1151.50"></text></g><g><title>sqlite3LockAndPrepare (1 samples, 0.12%)</title><rect x="12.2699%" y="1125" width="0.1227%" height="15" fill="rgb(223,3,22)" fg:x="100" fg:w="1"/><text x="12.5199%" y="1135.50"></text></g><g><title>sqlite3Prepare (1 samples, 0.12%)</title><rect x="12.2699%" y="1109" width="0.1227%" height="15" fill="rgb(225,196,46)" fg:x="100" fg:w="1"/><text x="12.5199%" y="1119.50"></text></g><g><title>sqlite3RunParser (1 samples, 0.12%)</title><rect x="12.2699%" y="1093" width="0.1227%" height="15" fill="rgb(209,110,37)" fg:x="100" fg:w="1"/><text x="12.5199%" y="1103.50"></text></g><g><title>sqlite3Parser (1 samples, 0.12%)</title><rect x="12.2699%" y="1077" width="0.1227%" height="15" fill="rgb(249,89,12)" fg:x="100" fg:w="1"/><text x="12.5199%" y="1087.50"></text></g><g><title>yy_reduce (1 samples, 0.12%)</title><rect x="12.2699%" y="1061" width="0.1227%" height="15" fill="rgb(226,27,33)" fg:x="100" fg:w="1"/><text x="12.5199%" y="1071.50"></text></g><g><title>sqlite3Select (1 samples, 0.12%)</title><rect x="12.2699%" y="1045" width="0.1227%" height="15" fill="rgb(213,82,22)" fg:x="100" fg:w="1"/><text x="12.5199%" y="1055.50"></text></g><g><title>generateColumnNames (1 samples, 0.12%)</title><rect x="12.2699%" y="1029" width="0.1227%" height="15" fill="rgb(248,140,0)" fg:x="100" fg:w="1"/><text x="12.5199%" y="1039.50"></text></g><g><title>sqlite3VdbeSetNumCols (1 samples, 0.12%)</title><rect x="12.2699%" y="1013" width="0.1227%" height="15" fill="rgb(228,106,3)" fg:x="100" fg:w="1"/><text x="12.5199%" y="1023.50"></text></g><g><title>dbMallocRawFinish (1 samples, 0.12%)</title><rect x="12.2699%" y="997" width="0.1227%" height="15" fill="rgb(209,23,37)" fg:x="100" fg:w="1"/><text x="12.5199%" y="1007.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.12%)</title><rect x="12.2699%" y="981" width="0.1227%" height="15" fill="rgb(241,93,50)" fg:x="100" fg:w="1"/><text x="12.5199%" y="991.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.12%)</title><rect x="12.2699%" y="965" width="0.1227%" height="15" fill="rgb(253,46,43)" fg:x="100" fg:w="1"/><text x="12.5199%" y="975.50"></text></g><g><title>mallocWithAlarm (1 samples, 0.12%)</title><rect x="12.2699%" y="949" width="0.1227%" height="15" fill="rgb(226,206,43)" fg:x="100" fg:w="1"/><text x="12.5199%" y="959.50"></text></g><g><title>sqlite3MemMalloc (1 samples, 0.12%)</title><rect x="12.2699%" y="933" width="0.1227%" height="15" fill="rgb(217,54,7)" fg:x="100" fg:w="1"/><text x="12.5199%" y="943.50"></text></g><g><title>malloc (1 samples, 0.12%)</title><rect x="12.2699%" y="917" width="0.1227%" height="15" fill="rgb(223,5,52)" fg:x="100" fg:w="1"/><text x="12.5199%" y="927.50"></text></g><g><title>btreeNext (4 samples, 0.49%)</title><rect x="22.2086%" y="1045" width="0.4908%" height="15" fill="rgb(206,52,46)" fg:x="181" fg:w="4"/><text x="22.4586%" y="1055.50"></text></g><g><title>moveToParent (3 samples, 0.37%)</title><rect x="22.3313%" y="1029" width="0.3681%" height="15" fill="rgb(253,136,11)" fg:x="182" fg:w="3"/><text x="22.5813%" y="1039.50"></text></g><g><title>releasePageNotNull (3 samples, 0.37%)</title><rect x="22.3313%" y="1013" width="0.3681%" height="15" fill="rgb(208,106,33)" fg:x="182" fg:w="3"/><text x="22.5813%" y="1023.50"></text></g><g><title>sqlite3PagerUnrefNotNull (3 samples, 0.37%)</title><rect x="22.3313%" y="997" width="0.3681%" height="15" fill="rgb(206,54,4)" fg:x="182" fg:w="3"/><text x="22.5813%" y="1007.50"></text></g><g><title>pcache1Unpin (3 samples, 0.37%)</title><rect x="22.3313%" y="981" width="0.3681%" height="15" fill="rgb(213,3,15)" fg:x="182" fg:w="3"/><text x="22.5813%" y="991.50"></text></g><g><title>pthread_mutex_lock (2 samples, 0.25%)</title><rect x="22.4540%" y="965" width="0.2454%" height="15" fill="rgb(252,211,39)" fg:x="183" fg:w="2"/><text x="22.7040%" y="975.50"></text></g><g><title>btreeInitPage (1 samples, 0.12%)</title><rect x="22.6994%" y="997" width="0.1227%" height="15" fill="rgb(223,6,36)" fg:x="185" fg:w="1"/><text x="22.9494%" y="1007.50"></text></g><g><title>__lseek64 (32 samples, 3.93%)</title><rect x="23.1902%" y="901" width="3.9264%" height="15" fill="rgb(252,169,45)" fg:x="189" fg:w="32"/><text x="23.4402%" y="911.50">__ls..</text></g><g><title>sqlite3OsRead (171 samples, 20.98%)</title><rect x="23.0675%" y="949" width="20.9816%" height="15" fill="rgb(212,48,26)" fg:x="188" fg:w="171"/><text x="23.3175%" y="959.50">sqlite3OsRead</text></g><g><title>unixRead (171 samples, 20.98%)</title><rect x="23.0675%" y="933" width="20.9816%" height="15" fill="rgb(251,102,48)" fg:x="188" fg:w="171"/><text x="23.3175%" y="943.50">unixRead</text></g><g><title>seekAndRead (170 samples, 20.86%)</title><rect x="23.1902%" y="917" width="20.8589%" height="15" fill="rgb(243,208,16)" fg:x="189" fg:w="170"/><text x="23.4402%" y="927.50">seekAndRead</text></g><g><title>read (138 samples, 16.93%)</title><rect x="27.1166%" y="901" width="16.9325%" height="15" fill="rgb(219,96,24)" fg:x="221" fg:w="138"/><text x="27.3666%" y="911.50">read</text></g><g><title>readDbPage (174 samples, 21.35%)</title><rect x="23.0675%" y="965" width="21.3497%" height="15" fill="rgb(219,33,29)" fg:x="188" fg:w="174"/><text x="23.3175%" y="975.50">readDbPage</text></g><g><title>sqlite3WalFindFrame (3 samples, 0.37%)</title><rect x="44.0491%" y="949" width="0.3681%" height="15" fill="rgb(223,176,5)" fg:x="359" fg:w="3"/><text x="44.2991%" y="959.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (3 samples, 0.37%)</title><rect x="44.4172%" y="917" width="0.3681%" height="15" fill="rgb(228,140,14)" fg:x="362" fg:w="3"/><text x="44.6672%" y="927.50"></text></g><g><title>pcache1FetchNoMutex (17 samples, 2.09%)</title><rect x="44.7853%" y="917" width="2.0859%" height="15" fill="rgb(217,179,31)" fg:x="365" fg:w="17"/><text x="45.0353%" y="927.50">p..</text></g><g><title>pcache1FetchNoMutex (12 samples, 1.47%)</title><rect x="45.3988%" y="901" width="1.4724%" height="15" fill="rgb(230,9,30)" fg:x="370" fg:w="12"/><text x="45.6488%" y="911.50"></text></g><g><title>pcache1FetchStage2 (12 samples, 1.47%)</title><rect x="45.3988%" y="885" width="1.4724%" height="15" fill="rgb(230,136,20)" fg:x="370" fg:w="12"/><text x="45.6488%" y="895.50"></text></g><g><title>pcache1RemoveFromHash (12 samples, 1.47%)</title><rect x="45.3988%" y="869" width="1.4724%" height="15" fill="rgb(215,210,22)" fg:x="370" fg:w="12"/><text x="45.6488%" y="879.50"></text></g><g><title>pthread_mutex_lock (2 samples, 0.25%)</title><rect x="46.8712%" y="917" width="0.2454%" height="15" fill="rgb(218,43,5)" fg:x="382" fg:w="2"/><text x="47.1212%" y="927.50"></text></g><g><title>moveToChild (200 samples, 24.54%)</title><rect x="22.6994%" y="1029" width="24.5399%" height="15" fill="rgb(216,11,5)" fg:x="185" fg:w="200"/><text x="22.9494%" y="1039.50">moveToChild</text></g><g><title>getAndInitPage (200 samples, 24.54%)</title><rect x="22.6994%" y="1013" width="24.5399%" height="15" fill="rgb(209,82,29)" fg:x="185" fg:w="200"/><text x="22.9494%" y="1023.50">getAndInitPage</text></g><g><title>sqlite3PagerGet (199 samples, 24.42%)</title><rect x="22.8221%" y="997" width="24.4172%" height="15" fill="rgb(244,115,12)" fg:x="186" fg:w="199"/><text x="23.0721%" y="1007.50">sqlite3PagerGet</text></g><g><title>getPageNormal (199 samples, 24.42%)</title><rect x="22.8221%" y="981" width="24.4172%" height="15" fill="rgb(222,82,18)" fg:x="186" fg:w="199"/><text x="23.0721%" y="991.50">getPageNormal</text></g><g><title>sqlite3PcacheFetch (23 samples, 2.82%)</title><rect x="44.4172%" y="965" width="2.8221%" height="15" fill="rgb(249,227,8)" fg:x="362" fg:w="23"/><text x="44.6672%" y="975.50">sq..</text></g><g><title>pcache1Fetch (23 samples, 2.82%)</title><rect x="44.4172%" y="949" width="2.8221%" height="15" fill="rgb(253,141,45)" fg:x="362" fg:w="23"/><text x="44.6672%" y="959.50">pc..</text></g><g><title>pcache1FetchWithMutex (23 samples, 2.82%)</title><rect x="44.4172%" y="933" width="2.8221%" height="15" fill="rgb(234,184,4)" fg:x="362" fg:w="23"/><text x="44.6672%" y="943.50">pc..</text></g><g><title>sqlite3_mutex_enter (1 samples, 0.12%)</title><rect x="47.1166%" y="917" width="0.1227%" height="15" fill="rgb(218,194,23)" fg:x="384" fg:w="1"/><text x="47.3666%" y="927.50"></text></g><g><title>moveToLeftmost (203 samples, 24.91%)</title><rect x="22.6994%" y="1045" width="24.9080%" height="15" fill="rgb(235,66,41)" fg:x="185" fg:w="203"/><text x="22.9494%" y="1055.50">moveToLeftmost</text></g><g><title>sqlite3Get4byte (3 samples, 0.37%)</title><rect x="47.2393%" y="1029" width="0.3681%" height="15" fill="rgb(245,217,1)" fg:x="385" fg:w="3"/><text x="47.4893%" y="1039.50"></text></g><g><title>sqlite3BtreeLast (4 samples, 0.49%)</title><rect x="47.6074%" y="1045" width="0.4908%" height="15" fill="rgb(229,91,1)" fg:x="388" fg:w="4"/><text x="47.8574%" y="1055.50"></text></g><g><title>__lseek64 (2 samples, 0.25%)</title><rect x="48.4663%" y="901" width="0.2454%" height="15" fill="rgb(207,101,30)" fg:x="395" fg:w="2"/><text x="48.7163%" y="911.50"></text></g><g><title>readDbPage (7 samples, 0.86%)</title><rect x="48.4663%" y="965" width="0.8589%" height="15" fill="rgb(223,82,49)" fg:x="395" fg:w="7"/><text x="48.7163%" y="975.50"></text></g><g><title>sqlite3OsRead (7 samples, 0.86%)</title><rect x="48.4663%" y="949" width="0.8589%" height="15" fill="rgb(218,167,17)" fg:x="395" fg:w="7"/><text x="48.7163%" y="959.50"></text></g><g><title>unixRead (7 samples, 0.86%)</title><rect x="48.4663%" y="933" width="0.8589%" height="15" fill="rgb(208,103,14)" fg:x="395" fg:w="7"/><text x="48.7163%" y="943.50"></text></g><g><title>seekAndRead (7 samples, 0.86%)</title><rect x="48.4663%" y="917" width="0.8589%" height="15" fill="rgb(238,20,8)" fg:x="395" fg:w="7"/><text x="48.7163%" y="927.50"></text></g><g><title>read (5 samples, 0.61%)</title><rect x="48.7117%" y="901" width="0.6135%" height="15" fill="rgb(218,80,54)" fg:x="397" fg:w="5"/><text x="48.9617%" y="911.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (14 samples, 1.72%)</title><rect x="49.4479%" y="917" width="1.7178%" height="15" fill="rgb(240,144,17)" fg:x="403" fg:w="14"/><text x="49.6979%" y="927.50"></text></g><g><title>pcache1FetchNoMutex (63 samples, 7.73%)</title><rect x="51.1656%" y="917" width="7.7301%" height="15" fill="rgb(245,27,50)" fg:x="417" fg:w="63"/><text x="51.4156%" y="927.50">pcache1Fetc..</text></g><g><title>pcache1FetchNoMutex (1 samples, 0.12%)</title><rect x="58.7730%" y="901" width="0.1227%" height="15" fill="rgb(251,51,7)" fg:x="479" fg:w="1"/><text x="59.0230%" y="911.50"></text></g><g><title>pcache1FetchStage2 (1 samples, 0.12%)</title><rect x="58.7730%" y="885" width="0.1227%" height="15" fill="rgb(245,217,29)" fg:x="479" fg:w="1"/><text x="59.0230%" y="895.50"></text></g><g><title>pcache1AllocPage (1 samples, 0.12%)</title><rect x="58.7730%" y="869" width="0.1227%" height="15" fill="rgb(221,176,29)" fg:x="479" fg:w="1"/><text x="59.0230%" y="879.50"></text></g><g><title>sqlite3PcacheFetch (81 samples, 9.94%)</title><rect x="49.3252%" y="965" width="9.9387%" height="15" fill="rgb(212,180,24)" fg:x="402" fg:w="81"/><text x="49.5752%" y="975.50">sqlite3PcacheF..</text></g><g><title>pcache1Fetch (81 samples, 9.94%)</title><rect x="49.3252%" y="949" width="9.9387%" height="15" fill="rgb(254,24,2)" fg:x="402" fg:w="81"/><text x="49.5752%" y="959.50">pcache1Fetch</text></g><g><title>pcache1FetchWithMutex (81 samples, 9.94%)</title><rect x="49.3252%" y="933" width="9.9387%" height="15" fill="rgb(230,100,2)" fg:x="402" fg:w="81"/><text x="49.5752%" y="943.50">pcache1FetchWi..</text></g><g><title>pthread_mutex_lock (3 samples, 0.37%)</title><rect x="58.8957%" y="917" width="0.3681%" height="15" fill="rgb(219,142,25)" fg:x="480" fg:w="3"/><text x="59.1457%" y="927.50"></text></g><g><title>moveToChild (92 samples, 11.29%)</title><rect x="48.2209%" y="1029" width="11.2883%" height="15" fill="rgb(240,73,43)" fg:x="393" fg:w="92"/><text x="48.4709%" y="1039.50">moveToChild</text></g><g><title>getAndInitPage (92 samples, 11.29%)</title><rect x="48.2209%" y="1013" width="11.2883%" height="15" fill="rgb(214,114,15)" fg:x="393" fg:w="92"/><text x="48.4709%" y="1023.50">getAndInitPage</text></g><g><title>sqlite3PagerGet (90 samples, 11.04%)</title><rect x="48.4663%" y="997" width="11.0429%" height="15" fill="rgb(207,130,4)" fg:x="395" fg:w="90"/><text x="48.7163%" y="1007.50">sqlite3PagerGet</text></g><g><title>getPageNormal (90 samples, 11.04%)</title><rect x="48.4663%" y="981" width="11.0429%" height="15" fill="rgb(221,25,40)" fg:x="395" fg:w="90"/><text x="48.7163%" y="991.50">getPageNormal</text></g><g><title>sqlite3PcacheFetchFinish (2 samples, 0.25%)</title><rect x="59.2638%" y="965" width="0.2454%" height="15" fill="rgb(241,184,7)" fg:x="483" fg:w="2"/><text x="59.5138%" y="975.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (4 samples, 0.49%)</title><rect x="59.6319%" y="997" width="0.4908%" height="15" fill="rgb(235,159,4)" fg:x="486" fg:w="4"/><text x="59.8819%" y="1007.50"></text></g><g><title>pcache1Unpin (12 samples, 1.47%)</title><rect x="60.1227%" y="997" width="1.4724%" height="15" fill="rgb(214,87,48)" fg:x="490" fg:w="12"/><text x="60.3727%" y="1007.50"></text></g><g><title>pthread_mutex_lock (7 samples, 0.86%)</title><rect x="60.7362%" y="981" width="0.8589%" height="15" fill="rgb(246,198,24)" fg:x="495" fg:w="7"/><text x="60.9862%" y="991.50"></text></g><g><title>moveToRoot (18 samples, 2.21%)</title><rect x="59.5092%" y="1029" width="2.2086%" height="15" fill="rgb(209,66,40)" fg:x="485" fg:w="18"/><text x="59.7592%" y="1039.50">m..</text></g><g><title>releasePageNotNull (18 samples, 2.21%)</title><rect x="59.5092%" y="1013" width="2.2086%" height="15" fill="rgb(233,147,39)" fg:x="485" fg:w="18"/><text x="59.7592%" y="1023.50">r..</text></g><g><title>sqlite3PcacheRelease (1 samples, 0.12%)</title><rect x="61.5951%" y="997" width="0.1227%" height="15" fill="rgb(231,145,52)" fg:x="502" fg:w="1"/><text x="61.8451%" y="1007.50"></text></g><g><title>pcacheUnpin (1 samples, 0.12%)</title><rect x="61.5951%" y="981" width="0.1227%" height="15" fill="rgb(206,20,26)" fg:x="502" fg:w="1"/><text x="61.8451%" y="991.50"></text></g><g><title>sqlite3VdbeFindCompare (95 samples, 11.66%)</title><rect x="61.7178%" y="1029" width="11.6564%" height="15" fill="rgb(238,220,4)" fg:x="503" fg:w="95"/><text x="61.9678%" y="1039.50">sqlite3VdbeFindCo..</text></g><g><title>sqlite3BtreeMovetoUnpacked (286 samples, 35.09%)</title><rect x="48.0982%" y="1045" width="35.0920%" height="15" fill="rgb(252,195,42)" fg:x="392" fg:w="286"/><text x="48.3482%" y="1055.50">sqlite3BtreeMovetoUnpacked</text></g><g><title>vdbeRecordCompareString (80 samples, 9.82%)</title><rect x="73.3742%" y="1029" width="9.8160%" height="15" fill="rgb(209,10,6)" fg:x="598" fg:w="80"/><text x="73.6242%" y="1039.50">vdbeRecordComp..</text></g><g><title>sqlite3GetVarint32 (7 samples, 0.86%)</title><rect x="82.3313%" y="1013" width="0.8589%" height="15" fill="rgb(229,3,52)" fg:x="671" fg:w="7"/><text x="82.5813%" y="1023.50"></text></g><g><title>sqlite3BtreeNext (3 samples, 0.37%)</title><rect x="83.1902%" y="1045" width="0.3681%" height="15" fill="rgb(253,49,37)" fg:x="678" fg:w="3"/><text x="83.4402%" y="1055.50"></text></g><g><title>sqlite3BtreePayloadSize (2 samples, 0.25%)</title><rect x="83.5583%" y="1045" width="0.2454%" height="15" fill="rgb(240,103,49)" fg:x="681" fg:w="2"/><text x="83.8083%" y="1055.50"></text></g><g><title>btreeParseCellPtr (2 samples, 0.25%)</title><rect x="83.5583%" y="1029" width="0.2454%" height="15" fill="rgb(250,182,30)" fg:x="681" fg:w="2"/><text x="83.8083%" y="1039.50"></text></g><g><title>sqlite3GetVarint32 (1 samples, 0.12%)</title><rect x="83.8037%" y="1045" width="0.1227%" height="15" fill="rgb(248,8,30)" fg:x="683" fg:w="1"/><text x="84.0537%" y="1055.50"></text></g><g><title>btreeNext (1 samples, 0.12%)</title><rect x="85.2761%" y="997" width="0.1227%" height="15" fill="rgb(237,120,30)" fg:x="695" fg:w="1"/><text x="85.5261%" y="1007.50"></text></g><g><title>__lseek64 (1 samples, 0.12%)</title><rect x="85.5215%" y="869" width="0.1227%" height="15" fill="rgb(221,146,34)" fg:x="697" fg:w="1"/><text x="85.7715%" y="879.50"></text></g><g><title>readDbPage (4 samples, 0.49%)</title><rect x="85.5215%" y="933" width="0.4908%" height="15" fill="rgb(242,55,13)" fg:x="697" fg:w="4"/><text x="85.7715%" y="943.50"></text></g><g><title>sqlite3OsRead (4 samples, 0.49%)</title><rect x="85.5215%" y="917" width="0.4908%" height="15" fill="rgb(242,112,31)" fg:x="697" fg:w="4"/><text x="85.7715%" y="927.50"></text></g><g><title>unixRead (4 samples, 0.49%)</title><rect x="85.5215%" y="901" width="0.4908%" height="15" fill="rgb(249,192,27)" fg:x="697" fg:w="4"/><text x="85.7715%" y="911.50"></text></g><g><title>seekAndRead (4 samples, 0.49%)</title><rect x="85.5215%" y="885" width="0.4908%" height="15" fill="rgb(208,204,44)" fg:x="697" fg:w="4"/><text x="85.7715%" y="895.50"></text></g><g><title>read (3 samples, 0.37%)</title><rect x="85.6442%" y="869" width="0.3681%" height="15" fill="rgb(208,93,54)" fg:x="698" fg:w="3"/><text x="85.8942%" y="879.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (3 samples, 0.37%)</title><rect x="86.0123%" y="885" width="0.3681%" height="15" fill="rgb(242,1,31)" fg:x="701" fg:w="3"/><text x="86.2623%" y="895.50"></text></g><g><title>pcache1FetchNoMutex (2 samples, 0.25%)</title><rect x="86.3804%" y="885" width="0.2454%" height="15" fill="rgb(241,83,25)" fg:x="704" fg:w="2"/><text x="86.6304%" y="895.50"></text></g><g><title>moveToChild (11 samples, 1.35%)</title><rect x="85.3988%" y="997" width="1.3497%" height="15" fill="rgb(205,169,50)" fg:x="696" fg:w="11"/><text x="85.6488%" y="1007.50"></text></g><g><title>getAndInitPage (10 samples, 1.23%)</title><rect x="85.5215%" y="981" width="1.2270%" height="15" fill="rgb(239,186,37)" fg:x="697" fg:w="10"/><text x="85.7715%" y="991.50"></text></g><g><title>sqlite3PagerGet (10 samples, 1.23%)</title><rect x="85.5215%" y="965" width="1.2270%" height="15" fill="rgb(205,221,10)" fg:x="697" fg:w="10"/><text x="85.7715%" y="975.50"></text></g><g><title>getPageNormal (10 samples, 1.23%)</title><rect x="85.5215%" y="949" width="1.2270%" height="15" fill="rgb(218,196,15)" fg:x="697" fg:w="10"/><text x="85.7715%" y="959.50"></text></g><g><title>sqlite3PcacheFetch (6 samples, 0.74%)</title><rect x="86.0123%" y="933" width="0.7362%" height="15" fill="rgb(218,196,35)" fg:x="701" fg:w="6"/><text x="86.2623%" y="943.50"></text></g><g><title>pcache1Fetch (6 samples, 0.74%)</title><rect x="86.0123%" y="917" width="0.7362%" height="15" fill="rgb(233,63,24)" fg:x="701" fg:w="6"/><text x="86.2623%" y="927.50"></text></g><g><title>pcache1FetchWithMutex (6 samples, 0.74%)</title><rect x="86.0123%" y="901" width="0.7362%" height="15" fill="rgb(225,8,4)" fg:x="701" fg:w="6"/><text x="86.2623%" y="911.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.12%)</title><rect x="86.6258%" y="885" width="0.1227%" height="15" fill="rgb(234,105,35)" fg:x="706" fg:w="1"/><text x="86.8758%" y="895.50"></text></g><g><title>__lseek64 (5 samples, 0.61%)</title><rect x="86.7485%" y="853" width="0.6135%" height="15" fill="rgb(236,21,32)" fg:x="707" fg:w="5"/><text x="86.9985%" y="863.50"></text></g><g><title>sqlite3OsRead (15 samples, 1.84%)</title><rect x="86.7485%" y="901" width="1.8405%" height="15" fill="rgb(228,109,6)" fg:x="707" fg:w="15"/><text x="86.9985%" y="911.50">s..</text></g><g><title>unixRead (15 samples, 1.84%)</title><rect x="86.7485%" y="885" width="1.8405%" height="15" fill="rgb(229,215,31)" fg:x="707" fg:w="15"/><text x="86.9985%" y="895.50">u..</text></g><g><title>seekAndRead (15 samples, 1.84%)</title><rect x="86.7485%" y="869" width="1.8405%" height="15" fill="rgb(221,52,54)" fg:x="707" fg:w="15"/><text x="86.9985%" y="879.50">s..</text></g><g><title>read (10 samples, 1.23%)</title><rect x="87.3620%" y="853" width="1.2270%" height="15" fill="rgb(252,129,43)" fg:x="712" fg:w="10"/><text x="87.6120%" y="863.50"></text></g><g><title>readDbPage (16 samples, 1.96%)</title><rect x="86.7485%" y="917" width="1.9632%" height="15" fill="rgb(248,183,27)" fg:x="707" fg:w="16"/><text x="86.9985%" y="927.50">r..</text></g><g><title>sqlite3WalFindFrame (1 samples, 0.12%)</title><rect x="88.5890%" y="901" width="0.1227%" height="15" fill="rgb(250,0,22)" fg:x="722" fg:w="1"/><text x="88.8390%" y="911.50"></text></g><g><title>moveToLeftmost (18 samples, 2.21%)</title><rect x="86.7485%" y="997" width="2.2086%" height="15" fill="rgb(213,166,10)" fg:x="707" fg:w="18"/><text x="86.9985%" y="1007.50">m..</text></g><g><title>moveToChild (18 samples, 2.21%)</title><rect x="86.7485%" y="981" width="2.2086%" height="15" fill="rgb(207,163,36)" fg:x="707" fg:w="18"/><text x="86.9985%" y="991.50">m..</text></g><g><title>getAndInitPage (18 samples, 2.21%)</title><rect x="86.7485%" y="965" width="2.2086%" height="15" fill="rgb(208,122,22)" fg:x="707" fg:w="18"/><text x="86.9985%" y="975.50">g..</text></g><g><title>sqlite3PagerGet (18 samples, 2.21%)</title><rect x="86.7485%" y="949" width="2.2086%" height="15" fill="rgb(207,104,49)" fg:x="707" fg:w="18"/><text x="86.9985%" y="959.50">s..</text></g><g><title>getPageNormal (18 samples, 2.21%)</title><rect x="86.7485%" y="933" width="2.2086%" height="15" fill="rgb(248,211,50)" fg:x="707" fg:w="18"/><text x="86.9985%" y="943.50">g..</text></g><g><title>sqlite3PcacheFetch (2 samples, 0.25%)</title><rect x="88.7117%" y="917" width="0.2454%" height="15" fill="rgb(217,13,45)" fg:x="723" fg:w="2"/><text x="88.9617%" y="927.50"></text></g><g><title>pcache1Fetch (2 samples, 0.25%)</title><rect x="88.7117%" y="901" width="0.2454%" height="15" fill="rgb(211,216,49)" fg:x="723" fg:w="2"/><text x="88.9617%" y="911.50"></text></g><g><title>pcache1FetchWithMutex (2 samples, 0.25%)</title><rect x="88.7117%" y="885" width="0.2454%" height="15" fill="rgb(221,58,53)" fg:x="723" fg:w="2"/><text x="88.9617%" y="895.50"></text></g><g><title>pcache1FetchNoMutex (2 samples, 0.25%)</title><rect x="88.7117%" y="869" width="0.2454%" height="15" fill="rgb(220,112,41)" fg:x="723" fg:w="2"/><text x="88.9617%" y="879.50"></text></g><g><title>pcache1FetchNoMutex (2 samples, 0.25%)</title><rect x="88.7117%" y="853" width="0.2454%" height="15" fill="rgb(236,38,28)" fg:x="723" fg:w="2"/><text x="88.9617%" y="863.50"></text></g><g><title>pcache1FetchStage2 (2 samples, 0.25%)</title><rect x="88.7117%" y="837" width="0.2454%" height="15" fill="rgb(227,195,22)" fg:x="723" fg:w="2"/><text x="88.9617%" y="847.50"></text></g><g><title>pcache1RemoveFromHash (2 samples, 0.25%)</title><rect x="88.7117%" y="821" width="0.2454%" height="15" fill="rgb(214,55,33)" fg:x="723" fg:w="2"/><text x="88.9617%" y="831.50"></text></g><g><title>moveToRoot (1 samples, 0.12%)</title><rect x="88.9571%" y="997" width="0.1227%" height="15" fill="rgb(248,80,13)" fg:x="725" fg:w="1"/><text x="89.2071%" y="1007.50"></text></g><g><title>releasePageNotNull (1 samples, 0.12%)</title><rect x="88.9571%" y="981" width="0.1227%" height="15" fill="rgb(238,52,6)" fg:x="725" fg:w="1"/><text x="89.2071%" y="991.50"></text></g><g><title>sqlite3VdbeCursorMoveto (47 samples, 5.77%)</title><rect x="83.9264%" y="1045" width="5.7669%" height="15" fill="rgb(224,198,47)" fg:x="684" fg:w="47"/><text x="84.1764%" y="1055.50">sqlite3..</text></g><g><title>sqlite3VdbeFinishMoveto (45 samples, 5.52%)</title><rect x="84.1718%" y="1029" width="5.5215%" height="15" fill="rgb(233,171,20)" fg:x="686" fg:w="45"/><text x="84.4218%" y="1039.50">sqlite3..</text></g><g><title>sqlite3BtreeMovetoUnpacked (44 samples, 5.40%)</title><rect x="84.2945%" y="1013" width="5.3988%" height="15" fill="rgb(241,30,25)" fg:x="687" fg:w="44"/><text x="84.5445%" y="1023.50">sqlite3..</text></g><g><title>sqlite3GetVarint (5 samples, 0.61%)</title><rect x="89.0798%" y="997" width="0.6135%" height="15" fill="rgb(207,171,38)" fg:x="726" fg:w="5"/><text x="89.3298%" y="1007.50"></text></g><g><title>sqlite3BtreePayloadSize (2 samples, 0.25%)</title><rect x="89.6933%" y="1029" width="0.2454%" height="15" fill="rgb(234,70,1)" fg:x="731" fg:w="2"/><text x="89.9433%" y="1039.50"></text></g><g><title>getCellInfo (2 samples, 0.25%)</title><rect x="89.6933%" y="1013" width="0.2454%" height="15" fill="rgb(232,178,18)" fg:x="731" fg:w="2"/><text x="89.9433%" y="1023.50"></text></g><g><title>btreeParseCell (2 samples, 0.25%)</title><rect x="89.6933%" y="997" width="0.2454%" height="15" fill="rgb(241,78,40)" fg:x="731" fg:w="2"/><text x="89.9433%" y="1007.50"></text></g><g><title>sqlite3VdbeIdxKeyCompare (9 samples, 1.10%)</title><rect x="89.6933%" y="1045" width="1.1043%" height="15" fill="rgb(222,35,25)" fg:x="731" fg:w="9"/><text x="89.9433%" y="1055.50"></text></g><g><title>sqlite3VdbeRecordCompareWithSkip (7 samples, 0.86%)</title><rect x="89.9387%" y="1029" width="0.8589%" height="15" fill="rgb(207,92,16)" fg:x="733" fg:w="7"/><text x="90.1887%" y="1039.50"></text></g><g><title>sqlite3VdbeSerialGet (1 samples, 0.12%)</title><rect x="90.6748%" y="1013" width="0.1227%" height="15" fill="rgb(216,59,51)" fg:x="739" fg:w="1"/><text x="90.9248%" y="1023.50"></text></g><g><title>serialGet (1 samples, 0.12%)</title><rect x="90.6748%" y="997" width="0.1227%" height="15" fill="rgb(213,80,28)" fg:x="739" fg:w="1"/><text x="90.9248%" y="1007.50"></text></g><g><title>sqlite3VdbeMemFromBtree (1 samples, 0.12%)</title><rect x="90.7975%" y="1045" width="0.1227%" height="15" fill="rgb(220,93,7)" fg:x="740" fg:w="1"/><text x="91.0475%" y="1055.50"></text></g><g><title>sqlite3BtreePayload (1 samples, 0.12%)</title><rect x="90.7975%" y="1029" width="0.1227%" height="15" fill="rgb(225,24,44)" fg:x="740" fg:w="1"/><text x="91.0475%" y="1039.50"></text></g><g><title>accessPayload (1 samples, 0.12%)</title><rect x="90.7975%" y="1013" width="0.1227%" height="15" fill="rgb(243,74,40)" fg:x="740" fg:w="1"/><text x="91.0475%" y="1023.50"></text></g><g><title>getOverflowPage (1 samples, 0.12%)</title><rect x="90.7975%" y="997" width="0.1227%" height="15" fill="rgb(228,39,7)" fg:x="740" fg:w="1"/><text x="91.0475%" y="1007.50"></text></g><g><title>btreeGetPage (1 samples, 0.12%)</title><rect x="90.7975%" y="981" width="0.1227%" height="15" fill="rgb(227,79,8)" fg:x="740" fg:w="1"/><text x="91.0475%" y="991.50"></text></g><g><title>sqlite3PagerGet (1 samples, 0.12%)</title><rect x="90.7975%" y="965" width="0.1227%" height="15" fill="rgb(236,58,11)" fg:x="740" fg:w="1"/><text x="91.0475%" y="975.50"></text></g><g><title>getPageNormal (1 samples, 0.12%)</title><rect x="90.7975%" y="949" width="0.1227%" height="15" fill="rgb(249,63,35)" fg:x="740" fg:w="1"/><text x="91.0475%" y="959.50"></text></g><g><title>readDbPage (1 samples, 0.12%)</title><rect x="90.7975%" y="933" width="0.1227%" height="15" fill="rgb(252,114,16)" fg:x="740" fg:w="1"/><text x="91.0475%" y="943.50"></text></g><g><title>sqlite3OsRead (1 samples, 0.12%)</title><rect x="90.7975%" y="917" width="0.1227%" height="15" fill="rgb(254,151,24)" fg:x="740" fg:w="1"/><text x="91.0475%" y="927.50"></text></g><g><title>unixRead (1 samples, 0.12%)</title><rect x="90.7975%" y="901" width="0.1227%" height="15" fill="rgb(253,54,39)" fg:x="740" fg:w="1"/><text x="91.0475%" y="911.50"></text></g><g><title>seekAndRead (1 samples, 0.12%)</title><rect x="90.7975%" y="885" width="0.1227%" height="15" fill="rgb(243,25,45)" fg:x="740" fg:w="1"/><text x="91.0475%" y="895.50"></text></g><g><title>read (1 samples, 0.12%)</title><rect x="90.7975%" y="869" width="0.1227%" height="15" fill="rgb(234,134,9)" fg:x="740" fg:w="1"/><text x="91.0475%" y="879.50"></text></g><g><title>blockstack_lib::core::mempool::MemPoolDB::get_next_tx_to_consider (665 samples, 81.60%)</title><rect x="10.1840%" y="1253" width="81.5951%" height="15" fill="rgb(227,166,31)" fg:x="83" fg:w="665"/><text x="10.4340%" y="1263.50">blockstack_lib::core::mempool::MemPoolDB::get_next_tx_to_consider</text></g><g><title>blockstack_lib::core::mempool::MemPoolDB::get_next_tx_to_consider_with_estimate (662 samples, 81.23%)</title><rect x="10.5521%" y="1237" width="81.2270%" height="15" fill="rgb(245,143,41)" fg:x="86" fg:w="662"/><text x="10.8021%" y="1247.50">blockstack_lib::core::mempool::MemPoolDB::get_next_tx_to_consider_with_estimate</text></g><g><title>blockstack_lib::util::db::query_row (662 samples, 81.23%)</title><rect x="10.5521%" y="1221" width="81.2270%" height="15" fill="rgb(238,181,32)" fg:x="86" fg:w="662"/><text x="10.8021%" y="1231.50">blockstack_lib::util::db::query_row</text></g><g><title>rusqlite::Connection::query_row_and_then (662 samples, 81.23%)</title><rect x="10.5521%" y="1205" width="81.2270%" height="15" fill="rgb(224,113,18)" fg:x="86" fg:w="662"/><text x="10.8021%" y="1215.50">rusqlite::Connection::query_row_and_then</text></g><g><title>rusqlite::row::Rows::get_expected_row (647 samples, 79.39%)</title><rect x="12.3926%" y="1189" width="79.3865%" height="15" fill="rgb(240,229,28)" fg:x="101" fg:w="647"/><text x="12.6426%" y="1199.50">rusqlite::row::Rows::get_expected_row</text></g><g><title>rusqlite::row::Rows::next (647 samples, 79.39%)</title><rect x="12.3926%" y="1173" width="79.3865%" height="15" fill="rgb(250,185,3)" fg:x="101" fg:w="647"/><text x="12.6426%" y="1183.50">rusqlite::row::Rows::next</text></g><g><title>&lt;rusqlite::row::Rows as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (647 samples, 79.39%)</title><rect x="12.3926%" y="1157" width="79.3865%" height="15" fill="rgb(212,59,25)" fg:x="101" fg:w="647"/><text x="12.6426%" y="1167.50">&lt;rusqlite::row::Rows as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance</text></g><g><title>rusqlite::statement::Statement::step (647 samples, 79.39%)</title><rect x="12.3926%" y="1141" width="79.3865%" height="15" fill="rgb(221,87,20)" fg:x="101" fg:w="647"/><text x="12.6426%" y="1151.50">rusqlite::statement::Statement::step</text></g><g><title>rusqlite::raw_statement::RawStatement::step (647 samples, 79.39%)</title><rect x="12.3926%" y="1125" width="79.3865%" height="15" fill="rgb(213,74,28)" fg:x="101" fg:w="647"/><text x="12.6426%" y="1135.50">rusqlite::raw_statement::RawStatement::step</text></g><g><title>sqlite3_step (647 samples, 79.39%)</title><rect x="12.3926%" y="1109" width="79.3865%" height="15" fill="rgb(224,132,34)" fg:x="101" fg:w="647"/><text x="12.6426%" y="1119.50">sqlite3_step</text></g><g><title>sqlite3_step (647 samples, 79.39%)</title><rect x="12.3926%" y="1093" width="79.3865%" height="15" fill="rgb(222,101,24)" fg:x="101" fg:w="647"/><text x="12.6426%" y="1103.50">sqlite3_step</text></g><g><title>sqlite3Step (647 samples, 79.39%)</title><rect x="12.3926%" y="1077" width="79.3865%" height="15" fill="rgb(254,142,4)" fg:x="101" fg:w="647"/><text x="12.6426%" y="1087.50">sqlite3Step</text></g><g><title>sqlite3VdbeExec (647 samples, 79.39%)</title><rect x="12.3926%" y="1061" width="79.3865%" height="15" fill="rgb(230,229,49)" fg:x="101" fg:w="647"/><text x="12.6426%" y="1071.50">sqlite3VdbeExec</text></g><g><title>sqlite3VdbeSerialGet (7 samples, 0.86%)</title><rect x="90.9202%" y="1045" width="0.8589%" height="15" fill="rgb(238,70,47)" fg:x="741" fg:w="7"/><text x="91.1702%" y="1055.50"></text></g><g><title>sqlite3OsRead (1 samples, 0.12%)</title><rect x="91.7791%" y="901" width="0.1227%" height="15" fill="rgb(231,160,17)" fg:x="748" fg:w="1"/><text x="92.0291%" y="911.50"></text></g><g><title>unixRead (1 samples, 0.12%)</title><rect x="91.7791%" y="885" width="0.1227%" height="15" fill="rgb(218,68,53)" fg:x="748" fg:w="1"/><text x="92.0291%" y="895.50"></text></g><g><title>seekAndRead (1 samples, 0.12%)</title><rect x="91.7791%" y="869" width="0.1227%" height="15" fill="rgb(236,111,10)" fg:x="748" fg:w="1"/><text x="92.0291%" y="879.50"></text></g><g><title>read (1 samples, 0.12%)</title><rect x="91.7791%" y="853" width="0.1227%" height="15" fill="rgb(224,34,41)" fg:x="748" fg:w="1"/><text x="92.0291%" y="863.50"></text></g><g><title>doWalCallbacks (2 samples, 0.25%)</title><rect x="91.7791%" y="1061" width="0.2454%" height="15" fill="rgb(241,118,19)" fg:x="748" fg:w="2"/><text x="92.0291%" y="1071.50"></text></g><g><title>sqlite3WalDefaultHook (2 samples, 0.25%)</title><rect x="91.7791%" y="1045" width="0.2454%" height="15" fill="rgb(238,129,25)" fg:x="748" fg:w="2"/><text x="92.0291%" y="1055.50"></text></g><g><title>sqlite3WalDefaultHook (2 samples, 0.25%)</title><rect x="91.7791%" y="1029" width="0.2454%" height="15" fill="rgb(238,22,31)" fg:x="748" fg:w="2"/><text x="92.0291%" y="1039.50"></text></g><g><title>sqlite3_wal_checkpoint_v2 (2 samples, 0.25%)</title><rect x="91.7791%" y="1013" width="0.2454%" height="15" fill="rgb(222,174,48)" fg:x="748" fg:w="2"/><text x="92.0291%" y="1023.50"></text></g><g><title>sqlite3_wal_checkpoint_v2 (2 samples, 0.25%)</title><rect x="91.7791%" y="997" width="0.2454%" height="15" fill="rgb(206,152,40)" fg:x="748" fg:w="2"/><text x="92.0291%" y="1007.50"></text></g><g><title>sqlite3Checkpoint (2 samples, 0.25%)</title><rect x="91.7791%" y="981" width="0.2454%" height="15" fill="rgb(218,99,54)" fg:x="748" fg:w="2"/><text x="92.0291%" y="991.50"></text></g><g><title>sqlite3BtreeCheckpoint (2 samples, 0.25%)</title><rect x="91.7791%" y="965" width="0.2454%" height="15" fill="rgb(220,174,26)" fg:x="748" fg:w="2"/><text x="92.0291%" y="975.50"></text></g><g><title>sqlite3PagerCheckpoint (2 samples, 0.25%)</title><rect x="91.7791%" y="949" width="0.2454%" height="15" fill="rgb(245,116,9)" fg:x="748" fg:w="2"/><text x="92.0291%" y="959.50"></text></g><g><title>sqlite3WalCheckpoint (2 samples, 0.25%)</title><rect x="91.7791%" y="933" width="0.2454%" height="15" fill="rgb(209,72,35)" fg:x="748" fg:w="2"/><text x="92.0291%" y="943.50"></text></g><g><title>walCheckpoint (2 samples, 0.25%)</title><rect x="91.7791%" y="917" width="0.2454%" height="15" fill="rgb(226,126,21)" fg:x="748" fg:w="2"/><text x="92.0291%" y="927.50"></text></g><g><title>sqlite3OsSync (1 samples, 0.12%)</title><rect x="91.9018%" y="901" width="0.1227%" height="15" fill="rgb(227,192,1)" fg:x="749" fg:w="1"/><text x="92.1518%" y="911.50"></text></g><g><title>sqlite3OsSync (1 samples, 0.12%)</title><rect x="91.9018%" y="885" width="0.1227%" height="15" fill="rgb(237,180,29)" fg:x="749" fg:w="1"/><text x="92.1518%" y="895.50"></text></g><g><title>unixSync (1 samples, 0.12%)</title><rect x="91.9018%" y="869" width="0.1227%" height="15" fill="rgb(230,197,35)" fg:x="749" fg:w="1"/><text x="92.1518%" y="879.50"></text></g><g><title>full_fsync (1 samples, 0.12%)</title><rect x="91.9018%" y="853" width="0.1227%" height="15" fill="rgb(246,193,31)" fg:x="749" fg:w="1"/><text x="92.1518%" y="863.50"></text></g><g><title>fsync (1 samples, 0.12%)</title><rect x="91.9018%" y="837" width="0.1227%" height="15" fill="rgb(241,36,4)" fg:x="749" fg:w="1"/><text x="92.1518%" y="847.50"></text></g><g><title>sqlite3BtreeBeginTrans (1 samples, 0.12%)</title><rect x="92.0245%" y="1045" width="0.1227%" height="15" fill="rgb(241,130,17)" fg:x="750" fg:w="1"/><text x="92.2745%" y="1055.50"></text></g><g><title>lockBtree (1 samples, 0.12%)</title><rect x="92.0245%" y="1029" width="0.1227%" height="15" fill="rgb(206,137,32)" fg:x="750" fg:w="1"/><text x="92.2745%" y="1039.50"></text></g><g><title>sqlite3PagerSharedLock (1 samples, 0.12%)</title><rect x="92.0245%" y="1013" width="0.1227%" height="15" fill="rgb(237,228,51)" fg:x="750" fg:w="1"/><text x="92.2745%" y="1023.50"></text></g><g><title>pagerBeginReadTransaction (1 samples, 0.12%)</title><rect x="92.0245%" y="997" width="0.1227%" height="15" fill="rgb(243,6,42)" fg:x="750" fg:w="1"/><text x="92.2745%" y="1007.50"></text></g><g><title>pcache1Truncate (1 samples, 0.12%)</title><rect x="92.0245%" y="981" width="0.1227%" height="15" fill="rgb(251,74,28)" fg:x="750" fg:w="1"/><text x="92.2745%" y="991.50"></text></g><g><title>pcache1TruncateUnsafe (1 samples, 0.12%)</title><rect x="92.0245%" y="965" width="0.1227%" height="15" fill="rgb(218,20,49)" fg:x="750" fg:w="1"/><text x="92.2745%" y="975.50"></text></g><g><title>pcache1FreePage (1 samples, 0.12%)</title><rect x="92.0245%" y="949" width="0.1227%" height="15" fill="rgb(238,28,14)" fg:x="750" fg:w="1"/><text x="92.2745%" y="959.50"></text></g><g><title>sqlite3_free (1 samples, 0.12%)</title><rect x="92.0245%" y="933" width="0.1227%" height="15" fill="rgb(229,40,46)" fg:x="750" fg:w="1"/><text x="92.2745%" y="943.50"></text></g><g><title>sqlite3_free (1 samples, 0.12%)</title><rect x="92.0245%" y="917" width="0.1227%" height="15" fill="rgb(244,195,20)" fg:x="750" fg:w="1"/><text x="92.2745%" y="927.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (5 samples, 0.61%)</title><rect x="91.7791%" y="1221" width="0.6135%" height="15" fill="rgb(253,56,35)" fg:x="748" fg:w="5"/><text x="92.0291%" y="1231.50"></text></g><g><title>rusqlite::Connection::execute::{{closure}} (5 samples, 0.61%)</title><rect x="91.7791%" y="1205" width="0.6135%" height="15" fill="rgb(210,149,44)" fg:x="748" fg:w="5"/><text x="92.0291%" y="1215.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (5 samples, 0.61%)</title><rect x="91.7791%" y="1189" width="0.6135%" height="15" fill="rgb(240,135,12)" fg:x="748" fg:w="5"/><text x="92.0291%" y="1199.50"></text></g><g><title>rusqlite::Connection::execute::{{closure}}::{{closure}} (5 samples, 0.61%)</title><rect x="91.7791%" y="1173" width="0.6135%" height="15" fill="rgb(251,24,50)" fg:x="748" fg:w="5"/><text x="92.0291%" y="1183.50"></text></g><g><title>rusqlite::statement::Statement::execute (5 samples, 0.61%)</title><rect x="91.7791%" y="1157" width="0.6135%" height="15" fill="rgb(243,200,47)" fg:x="748" fg:w="5"/><text x="92.0291%" y="1167.50"></text></g><g><title>rusqlite::statement::Statement::execute_with_bound_parameters (5 samples, 0.61%)</title><rect x="91.7791%" y="1141" width="0.6135%" height="15" fill="rgb(224,166,26)" fg:x="748" fg:w="5"/><text x="92.0291%" y="1151.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (5 samples, 0.61%)</title><rect x="91.7791%" y="1125" width="0.6135%" height="15" fill="rgb(233,0,47)" fg:x="748" fg:w="5"/><text x="92.0291%" y="1135.50"></text></g><g><title>sqlite3_step (5 samples, 0.61%)</title><rect x="91.7791%" y="1109" width="0.6135%" height="15" fill="rgb(253,80,5)" fg:x="748" fg:w="5"/><text x="92.0291%" y="1119.50"></text></g><g><title>sqlite3_step (5 samples, 0.61%)</title><rect x="91.7791%" y="1093" width="0.6135%" height="15" fill="rgb(214,133,25)" fg:x="748" fg:w="5"/><text x="92.0291%" y="1103.50"></text></g><g><title>sqlite3Step (5 samples, 0.61%)</title><rect x="91.7791%" y="1077" width="0.6135%" height="15" fill="rgb(209,27,14)" fg:x="748" fg:w="5"/><text x="92.0291%" y="1087.50"></text></g><g><title>sqlite3VdbeExec (3 samples, 0.37%)</title><rect x="92.0245%" y="1061" width="0.3681%" height="15" fill="rgb(219,102,51)" fg:x="750" fg:w="3"/><text x="92.2745%" y="1071.50"></text></g><g><title>sqlite3VdbeHalt (2 samples, 0.25%)</title><rect x="92.1472%" y="1045" width="0.2454%" height="15" fill="rgb(237,18,16)" fg:x="751" fg:w="2"/><text x="92.3972%" y="1055.50"></text></g><g><title>vdbeCommit (2 samples, 0.25%)</title><rect x="92.1472%" y="1029" width="0.2454%" height="15" fill="rgb(241,85,17)" fg:x="751" fg:w="2"/><text x="92.3972%" y="1039.50"></text></g><g><title>sqlite3BtreeCommitPhaseOne (2 samples, 0.25%)</title><rect x="92.1472%" y="1013" width="0.2454%" height="15" fill="rgb(236,90,42)" fg:x="751" fg:w="2"/><text x="92.3972%" y="1023.50"></text></g><g><title>sqlite3BtreeCommitPhaseOne (2 samples, 0.25%)</title><rect x="92.1472%" y="997" width="0.2454%" height="15" fill="rgb(249,57,21)" fg:x="751" fg:w="2"/><text x="92.3972%" y="1007.50"></text></g><g><title>sqlite3PagerCommitPhaseOne (2 samples, 0.25%)</title><rect x="92.1472%" y="981" width="0.2454%" height="15" fill="rgb(243,12,36)" fg:x="751" fg:w="2"/><text x="92.3972%" y="991.50"></text></g><g><title>sqlite3PagerCommitPhaseOne (2 samples, 0.25%)</title><rect x="92.1472%" y="965" width="0.2454%" height="15" fill="rgb(253,128,47)" fg:x="751" fg:w="2"/><text x="92.3972%" y="975.50"></text></g><g><title>pagerWalFrames (2 samples, 0.25%)</title><rect x="92.1472%" y="949" width="0.2454%" height="15" fill="rgb(207,33,20)" fg:x="751" fg:w="2"/><text x="92.3972%" y="959.50"></text></g><g><title>sqlite3WalFrames (2 samples, 0.25%)</title><rect x="92.1472%" y="933" width="0.2454%" height="15" fill="rgb(233,215,35)" fg:x="751" fg:w="2"/><text x="92.3972%" y="943.50"></text></g><g><title>walWriteOneFrame (2 samples, 0.25%)</title><rect x="92.1472%" y="917" width="0.2454%" height="15" fill="rgb(249,188,52)" fg:x="751" fg:w="2"/><text x="92.3972%" y="927.50"></text></g><g><title>unixWrite (2 samples, 0.25%)</title><rect x="92.1472%" y="901" width="0.2454%" height="15" fill="rgb(225,12,32)" fg:x="751" fg:w="2"/><text x="92.3972%" y="911.50"></text></g><g><title>seekAndWrite (2 samples, 0.25%)</title><rect x="92.1472%" y="885" width="0.2454%" height="15" fill="rgb(247,98,14)" fg:x="751" fg:w="2"/><text x="92.3972%" y="895.50"></text></g><g><title>seekAndWriteFd (2 samples, 0.25%)</title><rect x="92.1472%" y="869" width="0.2454%" height="15" fill="rgb(247,219,48)" fg:x="751" fg:w="2"/><text x="92.3972%" y="879.50"></text></g><g><title>write (2 samples, 0.25%)</title><rect x="92.1472%" y="853" width="0.2454%" height="15" fill="rgb(253,60,48)" fg:x="751" fg:w="2"/><text x="92.3972%" y="863.50"></text></g><g><title>blockstack_lib::core::mempool::MemPoolDB::iterate_candidates (709 samples, 86.99%)</title><rect x="5.5215%" y="1269" width="86.9939%" height="15" fill="rgb(245,15,52)" fg:x="45" fg:w="709"/><text x="5.7715%" y="1279.50">blockstack_lib::core::mempool::MemPoolDB::iterate_candidates</text></g><g><title>blockstack_lib::core::mempool::MemPoolDB::update_last_known_nonces (6 samples, 0.74%)</title><rect x="91.7791%" y="1253" width="0.7362%" height="15" fill="rgb(220,133,28)" fg:x="748" fg:w="6"/><text x="92.0291%" y="1263.50"></text></g><g><title>rusqlite::Connection::execute (6 samples, 0.74%)</title><rect x="91.7791%" y="1237" width="0.7362%" height="15" fill="rgb(217,180,4)" fg:x="748" fg:w="6"/><text x="92.0291%" y="1247.50"></text></g><g><title>rusqlite::Connection::prepare (1 samples, 0.12%)</title><rect x="92.3926%" y="1221" width="0.1227%" height="15" fill="rgb(251,24,1)" fg:x="753" fg:w="1"/><text x="92.6426%" y="1231.50"></text></g><g><title>rusqlite::inner_connection::InnerConnection::prepare (1 samples, 0.12%)</title><rect x="92.3926%" y="1205" width="0.1227%" height="15" fill="rgb(212,185,49)" fg:x="753" fg:w="1"/><text x="92.6426%" y="1215.50"></text></g><g><title>sqlite3_prepare_v2 (1 samples, 0.12%)</title><rect x="92.3926%" y="1189" width="0.1227%" height="15" fill="rgb(215,175,22)" fg:x="753" fg:w="1"/><text x="92.6426%" y="1199.50"></text></g><g><title>sqlite3LockAndPrepare (1 samples, 0.12%)</title><rect x="92.3926%" y="1173" width="0.1227%" height="15" fill="rgb(250,205,14)" fg:x="753" fg:w="1"/><text x="92.6426%" y="1183.50"></text></g><g><title>sqlite3LockAndPrepare (1 samples, 0.12%)</title><rect x="92.3926%" y="1157" width="0.1227%" height="15" fill="rgb(225,211,22)" fg:x="753" fg:w="1"/><text x="92.6426%" y="1167.50"></text></g><g><title>sqlite3Prepare (1 samples, 0.12%)</title><rect x="92.3926%" y="1141" width="0.1227%" height="15" fill="rgb(251,179,42)" fg:x="753" fg:w="1"/><text x="92.6426%" y="1151.50"></text></g><g><title>sqlite3RunParser (1 samples, 0.12%)</title><rect x="92.3926%" y="1125" width="0.1227%" height="15" fill="rgb(208,216,51)" fg:x="753" fg:w="1"/><text x="92.6426%" y="1135.50"></text></g><g><title>sqlite3Parser (1 samples, 0.12%)</title><rect x="92.3926%" y="1109" width="0.1227%" height="15" fill="rgb(235,36,11)" fg:x="753" fg:w="1"/><text x="92.6426%" y="1119.50"></text></g><g><title>yy_reduce (1 samples, 0.12%)</title><rect x="92.3926%" y="1093" width="0.1227%" height="15" fill="rgb(213,189,28)" fg:x="753" fg:w="1"/><text x="92.6426%" y="1103.50"></text></g><g><title>tokenExpr (1 samples, 0.12%)</title><rect x="92.3926%" y="1077" width="0.1227%" height="15" fill="rgb(227,203,42)" fg:x="753" fg:w="1"/><text x="92.6426%" y="1087.50"></text></g><g><title>sqlite3DbMallocRawNN (1 samples, 0.12%)</title><rect x="92.3926%" y="1061" width="0.1227%" height="15" fill="rgb(244,72,36)" fg:x="753" fg:w="1"/><text x="92.6426%" y="1071.50"></text></g><g><title>sqlite3OsRead (1 samples, 0.12%)</title><rect x="92.5153%" y="917" width="0.1227%" height="15" fill="rgb(213,53,17)" fg:x="754" fg:w="1"/><text x="92.7653%" y="927.50"></text></g><g><title>unixRead (1 samples, 0.12%)</title><rect x="92.5153%" y="901" width="0.1227%" height="15" fill="rgb(207,167,3)" fg:x="754" fg:w="1"/><text x="92.7653%" y="911.50"></text></g><g><title>seekAndRead (1 samples, 0.12%)</title><rect x="92.5153%" y="885" width="0.1227%" height="15" fill="rgb(216,98,30)" fg:x="754" fg:w="1"/><text x="92.7653%" y="895.50"></text></g><g><title>read (1 samples, 0.12%)</title><rect x="92.5153%" y="869" width="0.1227%" height="15" fill="rgb(236,123,15)" fg:x="754" fg:w="1"/><text x="92.7653%" y="879.50"></text></g><g><title>sqlite3OsSync (1 samples, 0.12%)</title><rect x="92.6380%" y="917" width="0.1227%" height="15" fill="rgb(248,81,50)" fg:x="755" fg:w="1"/><text x="92.8880%" y="927.50"></text></g><g><title>sqlite3OsSync (1 samples, 0.12%)</title><rect x="92.6380%" y="901" width="0.1227%" height="15" fill="rgb(214,120,4)" fg:x="755" fg:w="1"/><text x="92.8880%" y="911.50"></text></g><g><title>unixSync (1 samples, 0.12%)</title><rect x="92.6380%" y="885" width="0.1227%" height="15" fill="rgb(208,179,34)" fg:x="755" fg:w="1"/><text x="92.8880%" y="895.50"></text></g><g><title>full_fsync (1 samples, 0.12%)</title><rect x="92.6380%" y="869" width="0.1227%" height="15" fill="rgb(227,140,7)" fg:x="755" fg:w="1"/><text x="92.8880%" y="879.50"></text></g><g><title>fsync (1 samples, 0.12%)</title><rect x="92.6380%" y="853" width="0.1227%" height="15" fill="rgb(214,22,6)" fg:x="755" fg:w="1"/><text x="92.8880%" y="863.50"></text></g><g><title>doWalCallbacks (3 samples, 0.37%)</title><rect x="92.5153%" y="1077" width="0.3681%" height="15" fill="rgb(207,137,27)" fg:x="754" fg:w="3"/><text x="92.7653%" y="1087.50"></text></g><g><title>sqlite3WalDefaultHook (3 samples, 0.37%)</title><rect x="92.5153%" y="1061" width="0.3681%" height="15" fill="rgb(210,8,46)" fg:x="754" fg:w="3"/><text x="92.7653%" y="1071.50"></text></g><g><title>sqlite3WalDefaultHook (3 samples, 0.37%)</title><rect x="92.5153%" y="1045" width="0.3681%" height="15" fill="rgb(240,16,54)" fg:x="754" fg:w="3"/><text x="92.7653%" y="1055.50"></text></g><g><title>sqlite3_wal_checkpoint_v2 (3 samples, 0.37%)</title><rect x="92.5153%" y="1029" width="0.3681%" height="15" fill="rgb(211,209,29)" fg:x="754" fg:w="3"/><text x="92.7653%" y="1039.50"></text></g><g><title>sqlite3_wal_checkpoint_v2 (3 samples, 0.37%)</title><rect x="92.5153%" y="1013" width="0.3681%" height="15" fill="rgb(226,228,24)" fg:x="754" fg:w="3"/><text x="92.7653%" y="1023.50"></text></g><g><title>sqlite3Checkpoint (3 samples, 0.37%)</title><rect x="92.5153%" y="997" width="0.3681%" height="15" fill="rgb(222,84,9)" fg:x="754" fg:w="3"/><text x="92.7653%" y="1007.50"></text></g><g><title>sqlite3BtreeCheckpoint (3 samples, 0.37%)</title><rect x="92.5153%" y="981" width="0.3681%" height="15" fill="rgb(234,203,30)" fg:x="754" fg:w="3"/><text x="92.7653%" y="991.50"></text></g><g><title>sqlite3PagerCheckpoint (3 samples, 0.37%)</title><rect x="92.5153%" y="965" width="0.3681%" height="15" fill="rgb(238,109,14)" fg:x="754" fg:w="3"/><text x="92.7653%" y="975.50"></text></g><g><title>sqlite3WalCheckpoint (3 samples, 0.37%)</title><rect x="92.5153%" y="949" width="0.3681%" height="15" fill="rgb(233,206,34)" fg:x="754" fg:w="3"/><text x="92.7653%" y="959.50"></text></g><g><title>walCheckpoint (3 samples, 0.37%)</title><rect x="92.5153%" y="933" width="0.3681%" height="15" fill="rgb(220,167,47)" fg:x="754" fg:w="3"/><text x="92.7653%" y="943.50"></text></g><g><title>sqlite3OsWrite (1 samples, 0.12%)</title><rect x="92.7607%" y="917" width="0.1227%" height="15" fill="rgb(238,105,10)" fg:x="756" fg:w="1"/><text x="93.0107%" y="927.50"></text></g><g><title>unixWrite (1 samples, 0.12%)</title><rect x="92.7607%" y="901" width="0.1227%" height="15" fill="rgb(213,227,17)" fg:x="756" fg:w="1"/><text x="93.0107%" y="911.50"></text></g><g><title>seekAndWrite (1 samples, 0.12%)</title><rect x="92.7607%" y="885" width="0.1227%" height="15" fill="rgb(217,132,38)" fg:x="756" fg:w="1"/><text x="93.0107%" y="895.50"></text></g><g><title>seekAndWriteFd (1 samples, 0.12%)</title><rect x="92.7607%" y="869" width="0.1227%" height="15" fill="rgb(242,146,4)" fg:x="756" fg:w="1"/><text x="93.0107%" y="879.50"></text></g><g><title>write (1 samples, 0.12%)</title><rect x="92.7607%" y="853" width="0.1227%" height="15" fill="rgb(212,61,9)" fg:x="756" fg:w="1"/><text x="93.0107%" y="863.50"></text></g><g><title>readDbPage (2 samples, 0.25%)</title><rect x="92.8834%" y="981" width="0.2454%" height="15" fill="rgb(247,126,22)" fg:x="757" fg:w="2"/><text x="93.1334%" y="991.50"></text></g><g><title>sqlite3OsRead (2 samples, 0.25%)</title><rect x="92.8834%" y="965" width="0.2454%" height="15" fill="rgb(220,196,2)" fg:x="757" fg:w="2"/><text x="93.1334%" y="975.50"></text></g><g><title>unixRead (2 samples, 0.25%)</title><rect x="92.8834%" y="949" width="0.2454%" height="15" fill="rgb(208,46,4)" fg:x="757" fg:w="2"/><text x="93.1334%" y="959.50"></text></g><g><title>seekAndRead (2 samples, 0.25%)</title><rect x="92.8834%" y="933" width="0.2454%" height="15" fill="rgb(252,104,46)" fg:x="757" fg:w="2"/><text x="93.1334%" y="943.50"></text></g><g><title>read (2 samples, 0.25%)</title><rect x="92.8834%" y="917" width="0.2454%" height="15" fill="rgb(237,152,48)" fg:x="757" fg:w="2"/><text x="93.1334%" y="927.50"></text></g><g><title>moveToLeftmost (4 samples, 0.49%)</title><rect x="92.8834%" y="1061" width="0.4908%" height="15" fill="rgb(221,59,37)" fg:x="757" fg:w="4"/><text x="93.1334%" y="1071.50"></text></g><g><title>moveToChild (4 samples, 0.49%)</title><rect x="92.8834%" y="1045" width="0.4908%" height="15" fill="rgb(209,202,51)" fg:x="757" fg:w="4"/><text x="93.1334%" y="1055.50"></text></g><g><title>getAndInitPage (4 samples, 0.49%)</title><rect x="92.8834%" y="1029" width="0.4908%" height="15" fill="rgb(228,81,30)" fg:x="757" fg:w="4"/><text x="93.1334%" y="1039.50"></text></g><g><title>sqlite3PagerGet (4 samples, 0.49%)</title><rect x="92.8834%" y="1013" width="0.4908%" height="15" fill="rgb(227,42,39)" fg:x="757" fg:w="4"/><text x="93.1334%" y="1023.50"></text></g><g><title>getPageNormal (4 samples, 0.49%)</title><rect x="92.8834%" y="997" width="0.4908%" height="15" fill="rgb(221,26,2)" fg:x="757" fg:w="4"/><text x="93.1334%" y="1007.50"></text></g><g><title>sqlite3PcacheFetchStress (2 samples, 0.25%)</title><rect x="93.1288%" y="981" width="0.2454%" height="15" fill="rgb(254,61,31)" fg:x="759" fg:w="2"/><text x="93.3788%" y="991.50"></text></g><g><title>pagerStress (2 samples, 0.25%)</title><rect x="93.1288%" y="965" width="0.2454%" height="15" fill="rgb(222,173,38)" fg:x="759" fg:w="2"/><text x="93.3788%" y="975.50"></text></g><g><title>pagerStress (2 samples, 0.25%)</title><rect x="93.1288%" y="949" width="0.2454%" height="15" fill="rgb(218,50,12)" fg:x="759" fg:w="2"/><text x="93.3788%" y="959.50"></text></g><g><title>pagerWalFrames (2 samples, 0.25%)</title><rect x="93.1288%" y="933" width="0.2454%" height="15" fill="rgb(223,88,40)" fg:x="759" fg:w="2"/><text x="93.3788%" y="943.50"></text></g><g><title>sqlite3WalFrames (2 samples, 0.25%)</title><rect x="93.1288%" y="917" width="0.2454%" height="15" fill="rgb(237,54,19)" fg:x="759" fg:w="2"/><text x="93.3788%" y="927.50"></text></g><g><title>walWriteOneFrame (2 samples, 0.25%)</title><rect x="93.1288%" y="901" width="0.2454%" height="15" fill="rgb(251,129,25)" fg:x="759" fg:w="2"/><text x="93.3788%" y="911.50"></text></g><g><title>unixWrite (2 samples, 0.25%)</title><rect x="93.1288%" y="885" width="0.2454%" height="15" fill="rgb(238,97,19)" fg:x="759" fg:w="2"/><text x="93.3788%" y="895.50"></text></g><g><title>seekAndWrite (2 samples, 0.25%)</title><rect x="93.1288%" y="869" width="0.2454%" height="15" fill="rgb(240,169,18)" fg:x="759" fg:w="2"/><text x="93.3788%" y="879.50"></text></g><g><title>seekAndWriteFd (2 samples, 0.25%)</title><rect x="93.1288%" y="853" width="0.2454%" height="15" fill="rgb(230,187,49)" fg:x="759" fg:w="2"/><text x="93.3788%" y="863.50"></text></g><g><title>write (2 samples, 0.25%)</title><rect x="93.1288%" y="837" width="0.2454%" height="15" fill="rgb(209,44,26)" fg:x="759" fg:w="2"/><text x="93.3788%" y="847.50"></text></g><g><title>_start (759 samples, 93.13%)</title><rect x="0.3681%" y="1541" width="93.1288%" height="15" fill="rgb(244,0,6)" fg:x="3" fg:w="759"/><text x="0.6181%" y="1551.50">_start</text></g><g><title>__libc_start_main (759 samples, 93.13%)</title><rect x="0.3681%" y="1525" width="93.1288%" height="15" fill="rgb(248,18,21)" fg:x="3" fg:w="759"/><text x="0.6181%" y="1535.50">__libc_start_main</text></g><g><title>main (759 samples, 93.13%)</title><rect x="0.3681%" y="1509" width="93.1288%" height="15" fill="rgb(245,180,19)" fg:x="3" fg:w="759"/><text x="0.6181%" y="1519.50">main</text></g><g><title>std::rt::lang_start_internal (759 samples, 93.13%)</title><rect x="0.3681%" y="1493" width="93.1288%" height="15" fill="rgb(252,118,36)" fg:x="3" fg:w="759"/><text x="0.6181%" y="1503.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (759 samples, 93.13%)</title><rect x="0.3681%" y="1477" width="93.1288%" height="15" fill="rgb(210,224,19)" fg:x="3" fg:w="759"/><text x="0.6181%" y="1487.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (759 samples, 93.13%)</title><rect x="0.3681%" y="1461" width="93.1288%" height="15" fill="rgb(218,30,24)" fg:x="3" fg:w="759"/><text x="0.6181%" y="1471.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (759 samples, 93.13%)</title><rect x="0.3681%" y="1445" width="93.1288%" height="15" fill="rgb(219,75,50)" fg:x="3" fg:w="759"/><text x="0.6181%" y="1455.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (759 samples, 93.13%)</title><rect x="0.3681%" y="1429" width="93.1288%" height="15" fill="rgb(234,72,50)" fg:x="3" fg:w="759"/><text x="0.6181%" y="1439.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (759 samples, 93.13%)</title><rect x="0.3681%" y="1413" width="93.1288%" height="15" fill="rgb(219,100,48)" fg:x="3" fg:w="759"/><text x="0.6181%" y="1423.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (759 samples, 93.13%)</title><rect x="0.3681%" y="1397" width="93.1288%" height="15" fill="rgb(253,5,41)" fg:x="3" fg:w="759"/><text x="0.6181%" y="1407.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (759 samples, 93.13%)</title><rect x="0.3681%" y="1381" width="93.1288%" height="15" fill="rgb(247,181,11)" fg:x="3" fg:w="759"/><text x="0.6181%" y="1391.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (759 samples, 93.13%)</title><rect x="0.3681%" y="1365" width="93.1288%" height="15" fill="rgb(222,223,25)" fg:x="3" fg:w="759"/><text x="0.6181%" y="1375.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (759 samples, 93.13%)</title><rect x="0.3681%" y="1349" width="93.1288%" height="15" fill="rgb(214,198,28)" fg:x="3" fg:w="759"/><text x="0.6181%" y="1359.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (759 samples, 93.13%)</title><rect x="0.3681%" y="1333" width="93.1288%" height="15" fill="rgb(230,46,43)" fg:x="3" fg:w="759"/><text x="0.6181%" y="1343.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (759 samples, 93.13%)</title><rect x="0.3681%" y="1317" width="93.1288%" height="15" fill="rgb(233,65,53)" fg:x="3" fg:w="759"/><text x="0.6181%" y="1327.50">core::ops::function::FnOnce::call_once</text></g><g><title>mempool_analyzer::main (759 samples, 93.13%)</title><rect x="0.3681%" y="1301" width="93.1288%" height="15" fill="rgb(221,121,27)" fg:x="3" fg:w="759"/><text x="0.6181%" y="1311.50">mempool_analyzer::main</text></g><g><title>blockstack_lib::chainstate::stacks::miner::&lt;impl blockstack_lib::chainstate::stacks::StacksBlockBuilder&gt;::build_anchored_block (759 samples, 93.13%)</title><rect x="0.3681%" y="1285" width="93.1288%" height="15" fill="rgb(247,70,47)" fg:x="3" fg:w="759"/><text x="0.6181%" y="1295.50">blockstack_lib::chainstate::stacks::miner::&lt;impl blockstack_lib::chainstate::stacks::StacksBlockBuilder&gt;::build_anchored_block</text></g><g><title>blockstack_lib::core::mempool::MemPoolDB::reset_last_known_nonces (8 samples, 0.98%)</title><rect x="92.5153%" y="1269" width="0.9816%" height="15" fill="rgb(228,85,35)" fg:x="754" fg:w="8"/><text x="92.7653%" y="1279.50"></text></g><g><title>rusqlite::Connection::execute (8 samples, 0.98%)</title><rect x="92.5153%" y="1253" width="0.9816%" height="15" fill="rgb(209,50,18)" fg:x="754" fg:w="8"/><text x="92.7653%" y="1263.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (8 samples, 0.98%)</title><rect x="92.5153%" y="1237" width="0.9816%" height="15" fill="rgb(250,19,35)" fg:x="754" fg:w="8"/><text x="92.7653%" y="1247.50"></text></g><g><title>rusqlite::Connection::execute::{{closure}} (8 samples, 0.98%)</title><rect x="92.5153%" y="1221" width="0.9816%" height="15" fill="rgb(253,107,29)" fg:x="754" fg:w="8"/><text x="92.7653%" y="1231.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (8 samples, 0.98%)</title><rect x="92.5153%" y="1205" width="0.9816%" height="15" fill="rgb(252,179,29)" fg:x="754" fg:w="8"/><text x="92.7653%" y="1215.50"></text></g><g><title>rusqlite::Connection::execute::{{closure}}::{{closure}} (8 samples, 0.98%)</title><rect x="92.5153%" y="1189" width="0.9816%" height="15" fill="rgb(238,194,6)" fg:x="754" fg:w="8"/><text x="92.7653%" y="1199.50"></text></g><g><title>rusqlite::statement::Statement::execute (8 samples, 0.98%)</title><rect x="92.5153%" y="1173" width="0.9816%" height="15" fill="rgb(238,164,29)" fg:x="754" fg:w="8"/><text x="92.7653%" y="1183.50"></text></g><g><title>rusqlite::statement::Statement::execute_with_bound_parameters (8 samples, 0.98%)</title><rect x="92.5153%" y="1157" width="0.9816%" height="15" fill="rgb(224,25,9)" fg:x="754" fg:w="8"/><text x="92.7653%" y="1167.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (8 samples, 0.98%)</title><rect x="92.5153%" y="1141" width="0.9816%" height="15" fill="rgb(244,153,23)" fg:x="754" fg:w="8"/><text x="92.7653%" y="1151.50"></text></g><g><title>sqlite3_step (8 samples, 0.98%)</title><rect x="92.5153%" y="1125" width="0.9816%" height="15" fill="rgb(212,203,14)" fg:x="754" fg:w="8"/><text x="92.7653%" y="1135.50"></text></g><g><title>sqlite3_step (8 samples, 0.98%)</title><rect x="92.5153%" y="1109" width="0.9816%" height="15" fill="rgb(220,164,20)" fg:x="754" fg:w="8"/><text x="92.7653%" y="1119.50"></text></g><g><title>sqlite3Step (8 samples, 0.98%)</title><rect x="92.5153%" y="1093" width="0.9816%" height="15" fill="rgb(222,203,48)" fg:x="754" fg:w="8"/><text x="92.7653%" y="1103.50"></text></g><g><title>sqlite3VdbeExec (5 samples, 0.61%)</title><rect x="92.8834%" y="1077" width="0.6135%" height="15" fill="rgb(215,159,22)" fg:x="757" fg:w="5"/><text x="93.1334%" y="1087.50"></text></g><g><title>sqlite3VdbeHalt (1 samples, 0.12%)</title><rect x="93.3742%" y="1061" width="0.1227%" height="15" fill="rgb(216,183,47)" fg:x="761" fg:w="1"/><text x="93.6242%" y="1071.50"></text></g><g><title>vdbeCommit (1 samples, 0.12%)</title><rect x="93.3742%" y="1045" width="0.1227%" height="15" fill="rgb(229,195,25)" fg:x="761" fg:w="1"/><text x="93.6242%" y="1055.50"></text></g><g><title>sqlite3BtreeCommitPhaseOne (1 samples, 0.12%)</title><rect x="93.3742%" y="1029" width="0.1227%" height="15" fill="rgb(224,132,51)" fg:x="761" fg:w="1"/><text x="93.6242%" y="1039.50"></text></g><g><title>sqlite3BtreeCommitPhaseOne (1 samples, 0.12%)</title><rect x="93.3742%" y="1013" width="0.1227%" height="15" fill="rgb(240,63,7)" fg:x="761" fg:w="1"/><text x="93.6242%" y="1023.50"></text></g><g><title>sqlite3PagerCommitPhaseOne (1 samples, 0.12%)</title><rect x="93.3742%" y="997" width="0.1227%" height="15" fill="rgb(249,182,41)" fg:x="761" fg:w="1"/><text x="93.6242%" y="1007.50"></text></g><g><title>sqlite3PagerCommitPhaseOne (1 samples, 0.12%)</title><rect x="93.3742%" y="981" width="0.1227%" height="15" fill="rgb(243,47,26)" fg:x="761" fg:w="1"/><text x="93.6242%" y="991.50"></text></g><g><title>pagerWalFrames (1 samples, 0.12%)</title><rect x="93.3742%" y="965" width="0.1227%" height="15" fill="rgb(233,48,2)" fg:x="761" fg:w="1"/><text x="93.6242%" y="975.50"></text></g><g><title>sqlite3WalFrames (1 samples, 0.12%)</title><rect x="93.3742%" y="949" width="0.1227%" height="15" fill="rgb(244,165,34)" fg:x="761" fg:w="1"/><text x="93.6242%" y="959.50"></text></g><g><title>walWriteOneFrame (1 samples, 0.12%)</title><rect x="93.3742%" y="933" width="0.1227%" height="15" fill="rgb(207,89,7)" fg:x="761" fg:w="1"/><text x="93.6242%" y="943.50"></text></g><g><title>unixWrite (1 samples, 0.12%)</title><rect x="93.3742%" y="917" width="0.1227%" height="15" fill="rgb(244,117,36)" fg:x="761" fg:w="1"/><text x="93.6242%" y="927.50"></text></g><g><title>seekAndWrite (1 samples, 0.12%)</title><rect x="93.3742%" y="901" width="0.1227%" height="15" fill="rgb(226,144,34)" fg:x="761" fg:w="1"/><text x="93.6242%" y="911.50"></text></g><g><title>seekAndWriteFd (1 samples, 0.12%)</title><rect x="93.3742%" y="885" width="0.1227%" height="15" fill="rgb(213,23,19)" fg:x="761" fg:w="1"/><text x="93.6242%" y="895.50"></text></g><g><title>write (1 samples, 0.12%)</title><rect x="93.3742%" y="869" width="0.1227%" height="15" fill="rgb(217,75,12)" fg:x="761" fg:w="1"/><text x="93.6242%" y="879.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::blocks::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::setup_block (1 samples, 0.12%)</title><rect x="93.4969%" y="1541" width="0.1227%" height="15" fill="rgb(224,159,17)" fg:x="762" fg:w="1"/><text x="93.7469%" y="1551.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::StacksChainState::chainstate_block_begin (1 samples, 0.12%)</title><rect x="93.4969%" y="1525" width="0.1227%" height="15" fill="rgb(217,118,1)" fg:x="762" fg:w="1"/><text x="93.7469%" y="1535.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::StacksChainState::inner_clarity_tx_begin (1 samples, 0.12%)</title><rect x="93.4969%" y="1509" width="0.1227%" height="15" fill="rgb(232,180,48)" fg:x="762" fg:w="1"/><text x="93.7469%" y="1519.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityInstance::begin_block (1 samples, 0.12%)</title><rect x="93.4969%" y="1493" width="0.1227%" height="15" fill="rgb(230,27,33)" fg:x="762" fg:w="1"/><text x="93.7469%" y="1503.50"></text></g><g><title>blockstack_lib::clarity_vm::database::marf::MarfedKV::begin (1 samples, 0.12%)</title><rect x="93.4969%" y="1477" width="0.1227%" height="15" fill="rgb(205,31,21)" fg:x="762" fg:w="1"/><text x="93.7469%" y="1487.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt;::begin (1 samples, 0.12%)</title><rect x="93.4969%" y="1461" width="0.1227%" height="15" fill="rgb(253,59,4)" fg:x="762" fg:w="1"/><text x="93.7469%" y="1471.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt;::inner_setup_extension (1 samples, 0.12%)</title><rect x="93.4969%" y="1445" width="0.1227%" height="15" fill="rgb(224,201,9)" fg:x="762" fg:w="1"/><text x="93.7469%" y="1455.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt;::set_block_heights (1 samples, 0.12%)</title><rect x="93.4969%" y="1429" width="0.1227%" height="15" fill="rgb(229,206,30)" fg:x="762" fg:w="1"/><text x="93.7469%" y="1439.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt;::insert_batch (1 samples, 0.12%)</title><rect x="93.4969%" y="1413" width="0.1227%" height="15" fill="rgb(212,67,47)" fg:x="762" fg:w="1"/><text x="93.7469%" y="1423.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::inner_insert_batch (1 samples, 0.12%)</title><rect x="93.4969%" y="1397" width="0.1227%" height="15" fill="rgb(211,96,50)" fg:x="762" fg:w="1"/><text x="93.7469%" y="1407.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::insert_leaf (1 samples, 0.12%)</title><rect x="93.4969%" y="1381" width="0.1227%" height="15" fill="rgb(252,114,18)" fg:x="762" fg:w="1"/><text x="93.7469%" y="1391.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::do_insert_leaf (1 samples, 0.12%)</title><rect x="93.4969%" y="1365" width="0.1227%" height="15" fill="rgb(223,58,37)" fg:x="762" fg:w="1"/><text x="93.7469%" y="1375.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::update_root_hash (1 samples, 0.12%)</title><rect x="93.4969%" y="1349" width="0.1227%" height="15" fill="rgb(237,70,4)" fg:x="762" fg:w="1"/><text x="93.7469%" y="1359.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::recalculate_root_hash (1 samples, 0.12%)</title><rect x="93.4969%" y="1333" width="0.1227%" height="15" fill="rgb(244,85,46)" fg:x="762" fg:w="1"/><text x="93.7469%" y="1343.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::get_trie_root_hash (1 samples, 0.12%)</title><rect x="93.4969%" y="1317" width="0.1227%" height="15" fill="rgb(223,39,52)" fg:x="762" fg:w="1"/><text x="93.7469%" y="1327.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::get_trie_root_ancestor_hashes_bytes (1 samples, 0.12%)</title><rect x="93.4969%" y="1301" width="0.1227%" height="15" fill="rgb(218,200,14)" fg:x="762" fg:w="1"/><text x="93.7469%" y="1311.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::get_trie_ancestor_hashes_bytes (1 samples, 0.12%)</title><rect x="93.4969%" y="1285" width="0.1227%" height="15" fill="rgb(208,171,16)" fg:x="762" fg:w="1"/><text x="93.7469%" y="1295.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::inner_get_trie_ancestor_hashes_bytes (1 samples, 0.12%)</title><rect x="93.4969%" y="1269" width="0.1227%" height="15" fill="rgb(234,200,18)" fg:x="762" fg:w="1"/><text x="93.7469%" y="1279.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_block_at_height (1 samples, 0.12%)</title><rect x="93.4969%" y="1253" width="0.1227%" height="15" fill="rgb(228,45,11)" fg:x="762" fg:w="1"/><text x="93.7469%" y="1263.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_by_key (1 samples, 0.12%)</title><rect x="93.4969%" y="1237" width="0.1227%" height="15" fill="rgb(237,182,11)" fg:x="762" fg:w="1"/><text x="93.7469%" y="1247.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_path (1 samples, 0.12%)</title><rect x="93.4969%" y="1221" width="0.1227%" height="15" fill="rgb(241,175,49)" fg:x="762" fg:w="1"/><text x="93.7469%" y="1231.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk (1 samples, 0.12%)</title><rect x="93.4969%" y="1205" width="0.1227%" height="15" fill="rgb(247,38,35)" fg:x="762" fg:w="1"/><text x="93.7469%" y="1215.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_backptr (1 samples, 0.12%)</title><rect x="93.4969%" y="1189" width="0.1227%" height="15" fill="rgb(228,39,49)" fg:x="762" fg:w="1"/><text x="93.7469%" y="1199.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_backptr (1 samples, 0.12%)</title><rect x="93.4969%" y="1173" width="0.1227%" height="15" fill="rgb(226,101,26)" fg:x="762" fg:w="1"/><text x="93.7469%" y="1183.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (1 samples, 0.12%)</title><rect x="93.4969%" y="1157" width="0.1227%" height="15" fill="rgb(206,141,19)" fg:x="762" fg:w="1"/><text x="93.7469%" y="1167.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (1 samples, 0.12%)</title><rect x="93.4969%" y="1141" width="0.1227%" height="15" fill="rgb(211,200,13)" fg:x="762" fg:w="1"/><text x="93.7469%" y="1151.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (1 samples, 0.12%)</title><rect x="93.4969%" y="1125" width="0.1227%" height="15" fill="rgb(241,121,6)" fg:x="762" fg:w="1"/><text x="93.7469%" y="1135.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (1 samples, 0.12%)</title><rect x="93.4969%" y="1109" width="0.1227%" height="15" fill="rgb(234,221,29)" fg:x="762" fg:w="1"/><text x="93.7469%" y="1119.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (1 samples, 0.12%)</title><rect x="93.4969%" y="1093" width="0.1227%" height="15" fill="rgb(229,136,5)" fg:x="762" fg:w="1"/><text x="93.7469%" y="1103.50"></text></g><g><title>std::io::Read::read_exact (1 samples, 0.12%)</title><rect x="93.4969%" y="1077" width="0.1227%" height="15" fill="rgb(238,36,11)" fg:x="762" fg:w="1"/><text x="93.7469%" y="1087.50"></text></g><g><title>std::io::default_read_exact (1 samples, 0.12%)</title><rect x="93.4969%" y="1061" width="0.1227%" height="15" fill="rgb(251,55,41)" fg:x="762" fg:w="1"/><text x="93.7469%" y="1071.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="93.4969%" y="1045" width="0.1227%" height="15" fill="rgb(242,34,40)" fg:x="762" fg:w="1"/><text x="93.7469%" y="1055.50"></text></g><g><title>sqlite3_blob_read (1 samples, 0.12%)</title><rect x="93.4969%" y="1029" width="0.1227%" height="15" fill="rgb(215,42,17)" fg:x="762" fg:w="1"/><text x="93.7469%" y="1039.50"></text></g><g><title>blobReadWrite (1 samples, 0.12%)</title><rect x="93.4969%" y="1013" width="0.1227%" height="15" fill="rgb(207,44,46)" fg:x="762" fg:w="1"/><text x="93.7469%" y="1023.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="93.4969%" y="997" width="0.1227%" height="15" fill="rgb(211,206,28)" fg:x="762" fg:w="1"/><text x="93.7469%" y="1007.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="93.4969%" y="981" width="0.1227%" height="15" fill="rgb(237,167,16)" fg:x="762" fg:w="1"/><text x="93.7469%" y="991.50"></text></g><g><title>accessPayload (1 samples, 0.12%)</title><rect x="93.4969%" y="965" width="0.1227%" height="15" fill="rgb(233,66,6)" fg:x="762" fg:w="1"/><text x="93.7469%" y="975.50"></text></g><g><title>getOverflowPage (1 samples, 0.12%)</title><rect x="93.4969%" y="949" width="0.1227%" height="15" fill="rgb(246,123,29)" fg:x="762" fg:w="1"/><text x="93.7469%" y="959.50"></text></g><g><title>btreeGetPage (1 samples, 0.12%)</title><rect x="93.4969%" y="933" width="0.1227%" height="15" fill="rgb(209,62,40)" fg:x="762" fg:w="1"/><text x="93.7469%" y="943.50"></text></g><g><title>sqlite3PagerGet (1 samples, 0.12%)</title><rect x="93.4969%" y="917" width="0.1227%" height="15" fill="rgb(218,4,25)" fg:x="762" fg:w="1"/><text x="93.7469%" y="927.50"></text></g><g><title>getPageMMap (1 samples, 0.12%)</title><rect x="93.4969%" y="901" width="0.1227%" height="15" fill="rgb(253,91,49)" fg:x="762" fg:w="1"/><text x="93.7469%" y="911.50"></text></g><g><title>getPageNormal (1 samples, 0.12%)</title><rect x="93.4969%" y="885" width="0.1227%" height="15" fill="rgb(228,155,29)" fg:x="762" fg:w="1"/><text x="93.7469%" y="895.50"></text></g><g><title>readDbPage (1 samples, 0.12%)</title><rect x="93.4969%" y="869" width="0.1227%" height="15" fill="rgb(243,57,37)" fg:x="762" fg:w="1"/><text x="93.7469%" y="879.50"></text></g><g><title>sqlite3OsRead (1 samples, 0.12%)</title><rect x="93.4969%" y="853" width="0.1227%" height="15" fill="rgb(244,167,17)" fg:x="762" fg:w="1"/><text x="93.7469%" y="863.50"></text></g><g><title>unixRead (1 samples, 0.12%)</title><rect x="93.4969%" y="837" width="0.1227%" height="15" fill="rgb(207,181,38)" fg:x="762" fg:w="1"/><text x="93.7469%" y="847.50"></text></g><g><title>seekAndRead (1 samples, 0.12%)</title><rect x="93.4969%" y="821" width="0.1227%" height="15" fill="rgb(211,8,23)" fg:x="762" fg:w="1"/><text x="93.7469%" y="831.50"></text></g><g><title>read (1 samples, 0.12%)</title><rect x="93.4969%" y="805" width="0.1227%" height="15" fill="rgb(235,11,44)" fg:x="762" fg:w="1"/><text x="93.7469%" y="815.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::transactions::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::process_transaction (1 samples, 0.12%)</title><rect x="93.6196%" y="1541" width="0.1227%" height="15" fill="rgb(248,18,52)" fg:x="763" fg:w="1"/><text x="93.8696%" y="1551.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::transactions::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::process_transaction_payload (1 samples, 0.12%)</title><rect x="93.6196%" y="1525" width="0.1227%" height="15" fill="rgb(208,4,7)" fg:x="763" fg:w="1"/><text x="93.8696%" y="1535.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::run_contract_call (1 samples, 0.12%)</title><rect x="93.6196%" y="1509" width="0.1227%" height="15" fill="rgb(240,17,39)" fg:x="763" fg:w="1"/><text x="93.8696%" y="1519.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::with_abort_callback (1 samples, 0.12%)</title><rect x="93.6196%" y="1493" width="0.1227%" height="15" fill="rgb(207,170,3)" fg:x="763" fg:w="1"/><text x="93.8696%" y="1503.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::with_abort_callback::{{closure}} (1 samples, 0.12%)</title><rect x="93.6196%" y="1477" width="0.1227%" height="15" fill="rgb(236,100,52)" fg:x="763" fg:w="1"/><text x="93.8696%" y="1487.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::with_abort_callback::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="93.6196%" y="1461" width="0.1227%" height="15" fill="rgb(246,78,51)" fg:x="763" fg:w="1"/><text x="93.8696%" y="1471.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::run_contract_call::{{closure}} (1 samples, 0.12%)</title><rect x="93.6196%" y="1445" width="0.1227%" height="15" fill="rgb(211,17,15)" fg:x="763" fg:w="1"/><text x="93.8696%" y="1455.50"></text></g><g><title>blockstack_lib::vm::contexts::OwnedEnvironment::execute_transaction (1 samples, 0.12%)</title><rect x="93.6196%" y="1429" width="0.1227%" height="15" fill="rgb(209,59,46)" fg:x="763" fg:w="1"/><text x="93.8696%" y="1439.50"></text></g><g><title>blockstack_lib::vm::contexts::OwnedEnvironment::execute_in_env (1 samples, 0.12%)</title><rect x="93.6196%" y="1413" width="0.1227%" height="15" fill="rgb(210,92,25)" fg:x="763" fg:w="1"/><text x="93.8696%" y="1423.50"></text></g><g><title>blockstack_lib::vm::contexts::OwnedEnvironment::execute_transaction::{{closure}} (1 samples, 0.12%)</title><rect x="93.6196%" y="1397" width="0.1227%" height="15" fill="rgb(238,174,52)" fg:x="763" fg:w="1"/><text x="93.8696%" y="1407.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_contract (1 samples, 0.12%)</title><rect x="93.6196%" y="1381" width="0.1227%" height="15" fill="rgb(230,73,7)" fg:x="763" fg:w="1"/><text x="93.8696%" y="1391.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_contract::{{closure}} (1 samples, 0.12%)</title><rect x="93.6196%" y="1365" width="0.1227%" height="15" fill="rgb(243,124,40)" fg:x="763" fg:w="1"/><text x="93.8696%" y="1375.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_function_as_transaction (1 samples, 0.12%)</title><rect x="93.6196%" y="1349" width="0.1227%" height="15" fill="rgb(244,170,11)" fg:x="763" fg:w="1"/><text x="93.8696%" y="1359.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::execute_apply (1 samples, 0.12%)</title><rect x="93.6196%" y="1333" width="0.1227%" height="15" fill="rgb(207,114,54)" fg:x="763" fg:w="1"/><text x="93.8696%" y="1343.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="93.6196%" y="1317" width="0.1227%" height="15" fill="rgb(205,42,20)" fg:x="763" fg:w="1"/><text x="93.8696%" y="1327.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="93.6196%" y="1301" width="0.1227%" height="15" fill="rgb(230,30,28)" fg:x="763" fg:w="1"/><text x="93.8696%" y="1311.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="93.6196%" y="1285" width="0.1227%" height="15" fill="rgb(205,73,54)" fg:x="763" fg:w="1"/><text x="93.8696%" y="1295.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="93.6196%" y="1269" width="0.1227%" height="15" fill="rgb(254,227,23)" fg:x="763" fg:w="1"/><text x="93.8696%" y="1279.50"></text></g><g><title>blockstack_lib::vm::functions::special_let (1 samples, 0.12%)</title><rect x="93.6196%" y="1253" width="0.1227%" height="15" fill="rgb(228,202,34)" fg:x="763" fg:w="1"/><text x="93.8696%" y="1263.50"></text></g><g><title>blockstack_lib::vm::functions::special_let::{{closure}} (1 samples, 0.12%)</title><rect x="93.6196%" y="1237" width="0.1227%" height="15" fill="rgb(222,225,37)" fg:x="763" fg:w="1"/><text x="93.8696%" y="1247.50"></text></g><g><title>blockstack_lib::vm::functions::handle_binding_list (1 samples, 0.12%)</title><rect x="93.6196%" y="1221" width="0.1227%" height="15" fill="rgb(221,14,54)" fg:x="763" fg:w="1"/><text x="93.8696%" y="1231.50"></text></g><g><title>blockstack_lib::vm::functions::special_let::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="93.6196%" y="1205" width="0.1227%" height="15" fill="rgb(254,102,2)" fg:x="763" fg:w="1"/><text x="93.8696%" y="1215.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="93.6196%" y="1189" width="0.1227%" height="15" fill="rgb(232,104,17)" fg:x="763" fg:w="1"/><text x="93.8696%" y="1199.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="93.6196%" y="1173" width="0.1227%" height="15" fill="rgb(250,220,14)" fg:x="763" fg:w="1"/><text x="93.8696%" y="1183.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="93.6196%" y="1157" width="0.1227%" height="15" fill="rgb(241,158,9)" fg:x="763" fg:w="1"/><text x="93.8696%" y="1167.50"></text></g><g><title>blockstack_lib::vm::lookup_function (1 samples, 0.12%)</title><rect x="93.6196%" y="1141" width="0.1227%" height="15" fill="rgb(246,9,43)" fg:x="763" fg:w="1"/><text x="93.8696%" y="1151.50"></text></g><g><title>blockstack_lib::vm::costs::runtime_cost (1 samples, 0.12%)</title><rect x="93.6196%" y="1125" width="0.1227%" height="15" fill="rgb(206,73,33)" fg:x="763" fg:w="1"/><text x="93.8696%" y="1135.50"></text></g><g><title>&lt;blockstack_lib::vm::contexts::Environment as blockstack_lib::vm::costs::CostTracker&gt;::compute_cost (1 samples, 0.12%)</title><rect x="93.6196%" y="1109" width="0.1227%" height="15" fill="rgb(222,79,8)" fg:x="763" fg:w="1"/><text x="93.8696%" y="1119.50"></text></g><g><title>&lt;blockstack_lib::vm::costs::LimitedCostTracker as blockstack_lib::vm::costs::CostTracker&gt;::compute_cost (1 samples, 0.12%)</title><rect x="93.6196%" y="1093" width="0.1227%" height="15" fill="rgb(234,8,54)" fg:x="763" fg:w="1"/><text x="93.8696%" y="1103.50"></text></g><g><title>blockstack_lib::vm::costs::compute_cost (1 samples, 0.12%)</title><rect x="93.6196%" y="1077" width="0.1227%" height="15" fill="rgb(209,134,38)" fg:x="763" fg:w="1"/><text x="93.8696%" y="1087.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.12%)</title><rect x="93.6196%" y="1061" width="0.1227%" height="15" fill="rgb(230,127,29)" fg:x="763" fg:w="1"/><text x="93.8696%" y="1071.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.12%)</title><rect x="93.6196%" y="1045" width="0.1227%" height="15" fill="rgb(242,44,41)" fg:x="763" fg:w="1"/><text x="93.8696%" y="1055.50"></text></g><g><title>core::fmt::write (1 samples, 0.12%)</title><rect x="93.6196%" y="1029" width="0.1227%" height="15" fill="rgb(222,56,43)" fg:x="763" fg:w="1"/><text x="93.8696%" y="1039.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.12%)</title><rect x="93.6196%" y="1013" width="0.1227%" height="15" fill="rgb(238,39,47)" fg:x="763" fg:w="1"/><text x="93.8696%" y="1023.50"></text></g><g><title>&lt;blockstack_lib::vm::costs::ClarityCostFunctionReference as core::fmt::Display&gt;::fmt (1 samples, 0.12%)</title><rect x="93.6196%" y="997" width="0.1227%" height="15" fill="rgb(226,79,43)" fg:x="763" fg:w="1"/><text x="93.8696%" y="1007.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.12%)</title><rect x="93.6196%" y="981" width="0.1227%" height="15" fill="rgb(242,105,53)" fg:x="763" fg:w="1"/><text x="93.8696%" y="991.50"></text></g><g><title>core::fmt::write (1 samples, 0.12%)</title><rect x="93.6196%" y="965" width="0.1227%" height="15" fill="rgb(251,132,46)" fg:x="763" fg:w="1"/><text x="93.8696%" y="975.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.12%)</title><rect x="93.6196%" y="949" width="0.1227%" height="15" fill="rgb(231,77,14)" fg:x="763" fg:w="1"/><text x="93.8696%" y="959.50"></text></g><g><title>&lt;blockstack_lib::vm::types::QualifiedContractIdentifier as core::fmt::Display&gt;::fmt (1 samples, 0.12%)</title><rect x="93.6196%" y="933" width="0.1227%" height="15" fill="rgb(240,135,9)" fg:x="763" fg:w="1"/><text x="93.8696%" y="943.50"></text></g><g><title>blockstack_lib::vm::types::QualifiedContractIdentifier::to_string (1 samples, 0.12%)</title><rect x="93.6196%" y="917" width="0.1227%" height="15" fill="rgb(248,109,14)" fg:x="763" fg:w="1"/><text x="93.8696%" y="927.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.12%)</title><rect x="93.6196%" y="901" width="0.1227%" height="15" fill="rgb(227,146,52)" fg:x="763" fg:w="1"/><text x="93.8696%" y="911.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.12%)</title><rect x="93.6196%" y="885" width="0.1227%" height="15" fill="rgb(232,54,3)" fg:x="763" fg:w="1"/><text x="93.8696%" y="895.50"></text></g><g><title>core::fmt::write (1 samples, 0.12%)</title><rect x="93.6196%" y="869" width="0.1227%" height="15" fill="rgb(229,201,43)" fg:x="763" fg:w="1"/><text x="93.8696%" y="879.50"></text></g><g><title>&lt;blockstack_lib::vm::types::StandardPrincipalData as core::fmt::Display&gt;::fmt (1 samples, 0.12%)</title><rect x="93.6196%" y="853" width="0.1227%" height="15" fill="rgb(252,161,33)" fg:x="763" fg:w="1"/><text x="93.8696%" y="863.50"></text></g><g><title>blockstack_lib::vm::types::StandardPrincipalData::to_address (1 samples, 0.12%)</title><rect x="93.6196%" y="837" width="0.1227%" height="15" fill="rgb(226,146,40)" fg:x="763" fg:w="1"/><text x="93.8696%" y="847.50"></text></g><g><title>blockstack_lib::address::c32::c32_address (1 samples, 0.12%)</title><rect x="93.6196%" y="821" width="0.1227%" height="15" fill="rgb(219,47,25)" fg:x="763" fg:w="1"/><text x="93.8696%" y="831.50"></text></g><g><title>blockstack_lib::address::c32::c32_check_encode (1 samples, 0.12%)</title><rect x="93.6196%" y="805" width="0.1227%" height="15" fill="rgb(250,135,13)" fg:x="763" fg:w="1"/><text x="93.8696%" y="815.50"></text></g><g><title>blockstack_lib::address::c32::double_sha256_checksum (1 samples, 0.12%)</title><rect x="93.6196%" y="789" width="0.1227%" height="15" fill="rgb(219,229,18)" fg:x="763" fg:w="1"/><text x="93.8696%" y="799.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::result (1 samples, 0.12%)</title><rect x="93.6196%" y="773" width="0.1227%" height="15" fill="rgb(217,152,27)" fg:x="763" fg:w="1"/><text x="93.8696%" y="783.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::FixedOutput&gt;::fixed_result (1 samples, 0.12%)</title><rect x="93.6196%" y="757" width="0.1227%" height="15" fill="rgb(225,71,47)" fg:x="763" fg:w="1"/><text x="93.8696%" y="767.50"></text></g><g><title>sha2::sha256::Engine256::finish (1 samples, 0.12%)</title><rect x="93.6196%" y="741" width="0.1227%" height="15" fill="rgb(220,139,14)" fg:x="763" fg:w="1"/><text x="93.8696%" y="751.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding (1 samples, 0.12%)</title><rect x="93.6196%" y="725" width="0.1227%" height="15" fill="rgb(247,54,32)" fg:x="763" fg:w="1"/><text x="93.8696%" y="735.50"></text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (1 samples, 0.12%)</title><rect x="93.6196%" y="709" width="0.1227%" height="15" fill="rgb(252,131,39)" fg:x="763" fg:w="1"/><text x="93.8696%" y="719.50"></text></g><g><title>sha2::sha256::Engine256State::process_block (1 samples, 0.12%)</title><rect x="93.6196%" y="693" width="0.1227%" height="15" fill="rgb(210,108,39)" fg:x="763" fg:w="1"/><text x="93.8696%" y="703.50"></text></g><g><title>sha2::sha256_utils::compress256 (1 samples, 0.12%)</title><rect x="93.6196%" y="677" width="0.1227%" height="15" fill="rgb(205,23,29)" fg:x="763" fg:w="1"/><text x="93.8696%" y="687.50"></text></g><g><title>sha2::sha256_utils::sha256_digest_block_u32 (1 samples, 0.12%)</title><rect x="93.6196%" y="661" width="0.1227%" height="15" fill="rgb(246,139,46)" fg:x="763" fg:w="1"/><text x="93.8696%" y="671.50"></text></g><g><title>sha2::sha256_utils::sha256_digest_round_x2 (1 samples, 0.12%)</title><rect x="93.6196%" y="645" width="0.1227%" height="15" fill="rgb(250,81,26)" fg:x="763" fg:w="1"/><text x="93.8696%" y="655.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (1 samples, 0.12%)</title><rect x="93.6196%" y="629" width="0.1227%" height="15" fill="rgb(214,104,7)" fg:x="763" fg:w="1"/><text x="93.8696%" y="639.50"></text></g><g><title>blockstack_lib::chainstate::stacks::miner::&lt;impl blockstack_lib::chainstate::stacks::StacksBlockBuilder&gt;::build_anchored_block (2 samples, 0.25%)</title><rect x="93.7423%" y="1541" width="0.2454%" height="15" fill="rgb(233,189,8)" fg:x="764" fg:w="2"/><text x="93.9923%" y="1551.50"></text></g><g><title>blockstack_lib::core::mempool::MemPoolDB::iterate_candidates (2 samples, 0.25%)</title><rect x="93.7423%" y="1525" width="0.2454%" height="15" fill="rgb(228,141,17)" fg:x="764" fg:w="2"/><text x="93.9923%" y="1535.50"></text></g><g><title>blockstack_lib::chainstate::stacks::miner::&lt;impl blockstack_lib::chainstate::stacks::StacksBlockBuilder&gt;::build_anchored_block::{{closure}} (2 samples, 0.25%)</title><rect x="93.7423%" y="1509" width="0.2454%" height="15" fill="rgb(247,157,1)" fg:x="764" fg:w="2"/><text x="93.9923%" y="1519.50"></text></g><g><title>blockstack_lib::chainstate::stacks::miner::&lt;impl blockstack_lib::chainstate::stacks::StacksBlockBuilder&gt;::try_mine_tx_with_len (2 samples, 0.25%)</title><rect x="93.7423%" y="1493" width="0.2454%" height="15" fill="rgb(249,225,5)" fg:x="764" fg:w="2"/><text x="93.9923%" y="1503.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::transactions::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::process_transaction (2 samples, 0.25%)</title><rect x="93.7423%" y="1477" width="0.2454%" height="15" fill="rgb(242,55,13)" fg:x="764" fg:w="2"/><text x="93.9923%" y="1487.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::transactions::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::process_transaction_payload (2 samples, 0.25%)</title><rect x="93.7423%" y="1461" width="0.2454%" height="15" fill="rgb(230,49,50)" fg:x="764" fg:w="2"/><text x="93.9923%" y="1471.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::run_contract_call (2 samples, 0.25%)</title><rect x="93.7423%" y="1445" width="0.2454%" height="15" fill="rgb(241,111,38)" fg:x="764" fg:w="2"/><text x="93.9923%" y="1455.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::with_abort_callback (2 samples, 0.25%)</title><rect x="93.7423%" y="1429" width="0.2454%" height="15" fill="rgb(252,155,4)" fg:x="764" fg:w="2"/><text x="93.9923%" y="1439.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::with_abort_callback::{{closure}} (2 samples, 0.25%)</title><rect x="93.7423%" y="1413" width="0.2454%" height="15" fill="rgb(212,69,32)" fg:x="764" fg:w="2"/><text x="93.9923%" y="1423.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::with_abort_callback::{{closure}}::{{closure}} (2 samples, 0.25%)</title><rect x="93.7423%" y="1397" width="0.2454%" height="15" fill="rgb(243,107,47)" fg:x="764" fg:w="2"/><text x="93.9923%" y="1407.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::run_contract_call::{{closure}} (2 samples, 0.25%)</title><rect x="93.7423%" y="1381" width="0.2454%" height="15" fill="rgb(247,130,12)" fg:x="764" fg:w="2"/><text x="93.9923%" y="1391.50"></text></g><g><title>blockstack_lib::vm::contexts::OwnedEnvironment::execute_transaction (2 samples, 0.25%)</title><rect x="93.7423%" y="1365" width="0.2454%" height="15" fill="rgb(233,74,16)" fg:x="764" fg:w="2"/><text x="93.9923%" y="1375.50"></text></g><g><title>blockstack_lib::vm::contexts::OwnedEnvironment::execute_in_env (2 samples, 0.25%)</title><rect x="93.7423%" y="1349" width="0.2454%" height="15" fill="rgb(208,58,18)" fg:x="764" fg:w="2"/><text x="93.9923%" y="1359.50"></text></g><g><title>blockstack_lib::vm::contexts::OwnedEnvironment::execute_transaction::{{closure}} (2 samples, 0.25%)</title><rect x="93.7423%" y="1333" width="0.2454%" height="15" fill="rgb(242,225,1)" fg:x="764" fg:w="2"/><text x="93.9923%" y="1343.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_contract (2 samples, 0.25%)</title><rect x="93.7423%" y="1317" width="0.2454%" height="15" fill="rgb(249,39,40)" fg:x="764" fg:w="2"/><text x="93.9923%" y="1327.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get_contract_size (2 samples, 0.25%)</title><rect x="93.7423%" y="1301" width="0.2454%" height="15" fill="rgb(207,72,44)" fg:x="764" fg:w="2"/><text x="93.9923%" y="1311.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::fetch_metadata (2 samples, 0.25%)</title><rect x="93.7423%" y="1285" width="0.2454%" height="15" fill="rgb(215,193,12)" fg:x="764" fg:w="2"/><text x="93.9923%" y="1295.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get_metadata (2 samples, 0.25%)</title><rect x="93.7423%" y="1269" width="0.2454%" height="15" fill="rgb(248,41,39)" fg:x="764" fg:w="2"/><text x="93.9923%" y="1279.50"></text></g><g><title>blockstack_lib::vm::database::clarity_store::ClarityBackingStore::get_metadata (2 samples, 0.25%)</title><rect x="93.7423%" y="1253" width="0.2454%" height="15" fill="rgb(253,85,4)" fg:x="764" fg:w="2"/><text x="93.9923%" y="1263.50"></text></g><g><title>blockstack_lib::vm::database::clarity_store::ClarityBackingStore::get_contract_hash (2 samples, 0.25%)</title><rect x="93.7423%" y="1237" width="0.2454%" height="15" fill="rgb(243,70,31)" fg:x="764" fg:w="2"/><text x="93.9923%" y="1247.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::get_block_at_height (2 samples, 0.25%)</title><rect x="93.7423%" y="1221" width="0.2454%" height="15" fill="rgb(253,195,26)" fg:x="764" fg:w="2"/><text x="93.9923%" y="1231.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get_block_at_height (2 samples, 0.25%)</title><rect x="93.7423%" y="1205" width="0.2454%" height="15" fill="rgb(243,42,11)" fg:x="764" fg:w="2"/><text x="93.9923%" y="1215.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt; as blockstack_lib::chainstate::stacks::index::marf::MarfConnection&lt;T&gt;&gt;::with_conn (2 samples, 0.25%)</title><rect x="93.7423%" y="1189" width="0.2454%" height="15" fill="rgb(239,66,17)" fg:x="764" fg:w="2"/><text x="93.9923%" y="1199.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get_block_at_height::{{closure}} (2 samples, 0.25%)</title><rect x="93.7423%" y="1173" width="0.2454%" height="15" fill="rgb(217,132,21)" fg:x="764" fg:w="2"/><text x="93.9923%" y="1183.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_block_at_height (2 samples, 0.25%)</title><rect x="93.7423%" y="1157" width="0.2454%" height="15" fill="rgb(252,202,21)" fg:x="764" fg:w="2"/><text x="93.9923%" y="1167.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_by_key (2 samples, 0.25%)</title><rect x="93.7423%" y="1141" width="0.2454%" height="15" fill="rgb(233,98,36)" fg:x="764" fg:w="2"/><text x="93.9923%" y="1151.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_path (2 samples, 0.25%)</title><rect x="93.7423%" y="1125" width="0.2454%" height="15" fill="rgb(216,153,54)" fg:x="764" fg:w="2"/><text x="93.9923%" y="1135.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk (2 samples, 0.25%)</title><rect x="93.7423%" y="1109" width="0.2454%" height="15" fill="rgb(250,99,7)" fg:x="764" fg:w="2"/><text x="93.9923%" y="1119.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_backptr (2 samples, 0.25%)</title><rect x="93.7423%" y="1093" width="0.2454%" height="15" fill="rgb(207,56,50)" fg:x="764" fg:w="2"/><text x="93.9923%" y="1103.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_backptr (2 samples, 0.25%)</title><rect x="93.7423%" y="1077" width="0.2454%" height="15" fill="rgb(244,61,34)" fg:x="764" fg:w="2"/><text x="93.9923%" y="1087.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (2 samples, 0.25%)</title><rect x="93.7423%" y="1061" width="0.2454%" height="15" fill="rgb(241,50,38)" fg:x="764" fg:w="2"/><text x="93.9923%" y="1071.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (2 samples, 0.25%)</title><rect x="93.7423%" y="1045" width="0.2454%" height="15" fill="rgb(212,166,30)" fg:x="764" fg:w="2"/><text x="93.9923%" y="1055.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (2 samples, 0.25%)</title><rect x="93.7423%" y="1029" width="0.2454%" height="15" fill="rgb(249,127,32)" fg:x="764" fg:w="2"/><text x="93.9923%" y="1039.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (2 samples, 0.25%)</title><rect x="93.7423%" y="1013" width="0.2454%" height="15" fill="rgb(209,103,0)" fg:x="764" fg:w="2"/><text x="93.9923%" y="1023.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (2 samples, 0.25%)</title><rect x="93.7423%" y="997" width="0.2454%" height="15" fill="rgb(238,209,51)" fg:x="764" fg:w="2"/><text x="93.9923%" y="1007.50"></text></g><g><title>std::io::Read::read_exact (2 samples, 0.25%)</title><rect x="93.7423%" y="981" width="0.2454%" height="15" fill="rgb(237,56,23)" fg:x="764" fg:w="2"/><text x="93.9923%" y="991.50"></text></g><g><title>std::io::default_read_exact (2 samples, 0.25%)</title><rect x="93.7423%" y="965" width="0.2454%" height="15" fill="rgb(215,153,46)" fg:x="764" fg:w="2"/><text x="93.9923%" y="975.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (2 samples, 0.25%)</title><rect x="93.7423%" y="949" width="0.2454%" height="15" fill="rgb(224,49,31)" fg:x="764" fg:w="2"/><text x="93.9923%" y="959.50"></text></g><g><title>sqlite3_blob_read (2 samples, 0.25%)</title><rect x="93.7423%" y="933" width="0.2454%" height="15" fill="rgb(250,18,42)" fg:x="764" fg:w="2"/><text x="93.9923%" y="943.50"></text></g><g><title>blobReadWrite (2 samples, 0.25%)</title><rect x="93.7423%" y="917" width="0.2454%" height="15" fill="rgb(215,176,39)" fg:x="764" fg:w="2"/><text x="93.9923%" y="927.50"></text></g><g><title>sqlite3BtreePayloadChecked (2 samples, 0.25%)</title><rect x="93.7423%" y="901" width="0.2454%" height="15" fill="rgb(223,77,29)" fg:x="764" fg:w="2"/><text x="93.9923%" y="911.50"></text></g><g><title>sqlite3BtreePayloadChecked (2 samples, 0.25%)</title><rect x="93.7423%" y="885" width="0.2454%" height="15" fill="rgb(234,94,52)" fg:x="764" fg:w="2"/><text x="93.9923%" y="895.50"></text></g><g><title>accessPayload (2 samples, 0.25%)</title><rect x="93.7423%" y="869" width="0.2454%" height="15" fill="rgb(220,154,50)" fg:x="764" fg:w="2"/><text x="93.9923%" y="879.50"></text></g><g><title>getOverflowPage (2 samples, 0.25%)</title><rect x="93.7423%" y="853" width="0.2454%" height="15" fill="rgb(212,11,10)" fg:x="764" fg:w="2"/><text x="93.9923%" y="863.50"></text></g><g><title>btreeGetPage (2 samples, 0.25%)</title><rect x="93.7423%" y="837" width="0.2454%" height="15" fill="rgb(205,166,19)" fg:x="764" fg:w="2"/><text x="93.9923%" y="847.50"></text></g><g><title>sqlite3PagerGet (2 samples, 0.25%)</title><rect x="93.7423%" y="821" width="0.2454%" height="15" fill="rgb(244,198,16)" fg:x="764" fg:w="2"/><text x="93.9923%" y="831.50"></text></g><g><title>getPageMMap (2 samples, 0.25%)</title><rect x="93.7423%" y="805" width="0.2454%" height="15" fill="rgb(219,69,12)" fg:x="764" fg:w="2"/><text x="93.9923%" y="815.50"></text></g><g><title>getPageNormal (2 samples, 0.25%)</title><rect x="93.7423%" y="789" width="0.2454%" height="15" fill="rgb(245,30,7)" fg:x="764" fg:w="2"/><text x="93.9923%" y="799.50"></text></g><g><title>readDbPage (2 samples, 0.25%)</title><rect x="93.7423%" y="773" width="0.2454%" height="15" fill="rgb(218,221,48)" fg:x="764" fg:w="2"/><text x="93.9923%" y="783.50"></text></g><g><title>sqlite3OsRead (2 samples, 0.25%)</title><rect x="93.7423%" y="757" width="0.2454%" height="15" fill="rgb(216,66,15)" fg:x="764" fg:w="2"/><text x="93.9923%" y="767.50"></text></g><g><title>unixRead (2 samples, 0.25%)</title><rect x="93.7423%" y="741" width="0.2454%" height="15" fill="rgb(226,122,50)" fg:x="764" fg:w="2"/><text x="93.9923%" y="751.50"></text></g><g><title>seekAndRead (2 samples, 0.25%)</title><rect x="93.7423%" y="725" width="0.2454%" height="15" fill="rgb(239,156,16)" fg:x="764" fg:w="2"/><text x="93.9923%" y="735.50"></text></g><g><title>read (2 samples, 0.25%)</title><rect x="93.7423%" y="709" width="0.2454%" height="15" fill="rgb(224,27,38)" fg:x="764" fg:w="2"/><text x="93.9923%" y="719.50"></text></g><g><title>blockstack_lib::chainstate::stacks::miner::&lt;impl blockstack_lib::chainstate::stacks::StacksBlockBuilder&gt;::epoch_begin (1 samples, 0.12%)</title><rect x="93.9877%" y="1541" width="0.1227%" height="15" fill="rgb(224,39,27)" fg:x="766" fg:w="1"/><text x="94.2377%" y="1551.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::blocks::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::setup_block (1 samples, 0.12%)</title><rect x="93.9877%" y="1525" width="0.1227%" height="15" fill="rgb(215,92,29)" fg:x="766" fg:w="1"/><text x="94.2377%" y="1535.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::StacksChainState::chainstate_block_begin (1 samples, 0.12%)</title><rect x="93.9877%" y="1509" width="0.1227%" height="15" fill="rgb(207,159,16)" fg:x="766" fg:w="1"/><text x="94.2377%" y="1519.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::StacksChainState::inner_clarity_tx_begin (1 samples, 0.12%)</title><rect x="93.9877%" y="1493" width="0.1227%" height="15" fill="rgb(238,163,47)" fg:x="766" fg:w="1"/><text x="94.2377%" y="1503.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityInstance::begin_block (1 samples, 0.12%)</title><rect x="93.9877%" y="1477" width="0.1227%" height="15" fill="rgb(219,91,49)" fg:x="766" fg:w="1"/><text x="94.2377%" y="1487.50"></text></g><g><title>blockstack_lib::vm::costs::LimitedCostTracker::new (1 samples, 0.12%)</title><rect x="93.9877%" y="1461" width="0.1227%" height="15" fill="rgb(227,167,31)" fg:x="766" fg:w="1"/><text x="94.2377%" y="1471.50"></text></g><g><title>blockstack_lib::vm::costs::TrackerData::load_costs (1 samples, 0.12%)</title><rect x="93.9877%" y="1445" width="0.1227%" height="15" fill="rgb(234,80,54)" fg:x="766" fg:w="1"/><text x="94.2377%" y="1455.50"></text></g><g><title>blockstack_lib::vm::costs::load_cost_functions (1 samples, 0.12%)</title><rect x="93.9877%" y="1429" width="0.1227%" height="15" fill="rgb(212,114,2)" fg:x="766" fg:w="1"/><text x="94.2377%" y="1439.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::lookup_variable_unknown_descriptor (1 samples, 0.12%)</title><rect x="93.9877%" y="1413" width="0.1227%" height="15" fill="rgb(234,50,24)" fg:x="766" fg:w="1"/><text x="94.2377%" y="1423.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::load_variable (1 samples, 0.12%)</title><rect x="93.9877%" y="1397" width="0.1227%" height="15" fill="rgb(221,68,8)" fg:x="766" fg:w="1"/><text x="94.2377%" y="1407.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::fetch_metadata (1 samples, 0.12%)</title><rect x="93.9877%" y="1381" width="0.1227%" height="15" fill="rgb(254,180,31)" fg:x="766" fg:w="1"/><text x="94.2377%" y="1391.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get_metadata (1 samples, 0.12%)</title><rect x="93.9877%" y="1365" width="0.1227%" height="15" fill="rgb(247,130,50)" fg:x="766" fg:w="1"/><text x="94.2377%" y="1375.50"></text></g><g><title>blockstack_lib::vm::database::clarity_store::ClarityBackingStore::get_metadata (1 samples, 0.12%)</title><rect x="93.9877%" y="1349" width="0.1227%" height="15" fill="rgb(211,109,4)" fg:x="766" fg:w="1"/><text x="94.2377%" y="1359.50"></text></g><g><title>blockstack_lib::vm::database::clarity_store::ClarityBackingStore::get_contract_hash (1 samples, 0.12%)</title><rect x="93.9877%" y="1333" width="0.1227%" height="15" fill="rgb(238,50,21)" fg:x="766" fg:w="1"/><text x="94.2377%" y="1343.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::get_block_at_height (1 samples, 0.12%)</title><rect x="93.9877%" y="1317" width="0.1227%" height="15" fill="rgb(225,57,45)" fg:x="766" fg:w="1"/><text x="94.2377%" y="1327.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get_block_at_height (1 samples, 0.12%)</title><rect x="93.9877%" y="1301" width="0.1227%" height="15" fill="rgb(209,196,50)" fg:x="766" fg:w="1"/><text x="94.2377%" y="1311.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt; as blockstack_lib::chainstate::stacks::index::marf::MarfConnection&lt;T&gt;&gt;::with_conn (1 samples, 0.12%)</title><rect x="93.9877%" y="1285" width="0.1227%" height="15" fill="rgb(242,140,13)" fg:x="766" fg:w="1"/><text x="94.2377%" y="1295.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get_block_at_height::{{closure}} (1 samples, 0.12%)</title><rect x="93.9877%" y="1269" width="0.1227%" height="15" fill="rgb(217,111,7)" fg:x="766" fg:w="1"/><text x="94.2377%" y="1279.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_block_at_height (1 samples, 0.12%)</title><rect x="93.9877%" y="1253" width="0.1227%" height="15" fill="rgb(253,193,51)" fg:x="766" fg:w="1"/><text x="94.2377%" y="1263.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_by_key (1 samples, 0.12%)</title><rect x="93.9877%" y="1237" width="0.1227%" height="15" fill="rgb(252,70,29)" fg:x="766" fg:w="1"/><text x="94.2377%" y="1247.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_path (1 samples, 0.12%)</title><rect x="93.9877%" y="1221" width="0.1227%" height="15" fill="rgb(232,127,12)" fg:x="766" fg:w="1"/><text x="94.2377%" y="1231.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk (1 samples, 0.12%)</title><rect x="93.9877%" y="1205" width="0.1227%" height="15" fill="rgb(211,180,21)" fg:x="766" fg:w="1"/><text x="94.2377%" y="1215.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_backptr (1 samples, 0.12%)</title><rect x="93.9877%" y="1189" width="0.1227%" height="15" fill="rgb(229,72,13)" fg:x="766" fg:w="1"/><text x="94.2377%" y="1199.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_backptr (1 samples, 0.12%)</title><rect x="93.9877%" y="1173" width="0.1227%" height="15" fill="rgb(240,211,49)" fg:x="766" fg:w="1"/><text x="94.2377%" y="1183.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (1 samples, 0.12%)</title><rect x="93.9877%" y="1157" width="0.1227%" height="15" fill="rgb(219,149,40)" fg:x="766" fg:w="1"/><text x="94.2377%" y="1167.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (1 samples, 0.12%)</title><rect x="93.9877%" y="1141" width="0.1227%" height="15" fill="rgb(210,127,46)" fg:x="766" fg:w="1"/><text x="94.2377%" y="1151.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (1 samples, 0.12%)</title><rect x="93.9877%" y="1125" width="0.1227%" height="15" fill="rgb(220,106,7)" fg:x="766" fg:w="1"/><text x="94.2377%" y="1135.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (1 samples, 0.12%)</title><rect x="93.9877%" y="1109" width="0.1227%" height="15" fill="rgb(249,31,22)" fg:x="766" fg:w="1"/><text x="94.2377%" y="1119.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (1 samples, 0.12%)</title><rect x="93.9877%" y="1093" width="0.1227%" height="15" fill="rgb(253,1,49)" fg:x="766" fg:w="1"/><text x="94.2377%" y="1103.50"></text></g><g><title>std::io::Read::read_exact (1 samples, 0.12%)</title><rect x="93.9877%" y="1077" width="0.1227%" height="15" fill="rgb(227,144,33)" fg:x="766" fg:w="1"/><text x="94.2377%" y="1087.50"></text></g><g><title>std::io::default_read_exact (1 samples, 0.12%)</title><rect x="93.9877%" y="1061" width="0.1227%" height="15" fill="rgb(249,163,44)" fg:x="766" fg:w="1"/><text x="94.2377%" y="1071.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="93.9877%" y="1045" width="0.1227%" height="15" fill="rgb(234,15,39)" fg:x="766" fg:w="1"/><text x="94.2377%" y="1055.50"></text></g><g><title>sqlite3_blob_read (1 samples, 0.12%)</title><rect x="93.9877%" y="1029" width="0.1227%" height="15" fill="rgb(207,66,16)" fg:x="766" fg:w="1"/><text x="94.2377%" y="1039.50"></text></g><g><title>blobReadWrite (1 samples, 0.12%)</title><rect x="93.9877%" y="1013" width="0.1227%" height="15" fill="rgb(233,112,24)" fg:x="766" fg:w="1"/><text x="94.2377%" y="1023.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="93.9877%" y="997" width="0.1227%" height="15" fill="rgb(230,90,22)" fg:x="766" fg:w="1"/><text x="94.2377%" y="1007.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="93.9877%" y="981" width="0.1227%" height="15" fill="rgb(229,61,13)" fg:x="766" fg:w="1"/><text x="94.2377%" y="991.50"></text></g><g><title>accessPayload (1 samples, 0.12%)</title><rect x="93.9877%" y="965" width="0.1227%" height="15" fill="rgb(225,57,24)" fg:x="766" fg:w="1"/><text x="94.2377%" y="975.50"></text></g><g><title>getOverflowPage (1 samples, 0.12%)</title><rect x="93.9877%" y="949" width="0.1227%" height="15" fill="rgb(208,169,48)" fg:x="766" fg:w="1"/><text x="94.2377%" y="959.50"></text></g><g><title>btreeGetPage (1 samples, 0.12%)</title><rect x="93.9877%" y="933" width="0.1227%" height="15" fill="rgb(244,218,51)" fg:x="766" fg:w="1"/><text x="94.2377%" y="943.50"></text></g><g><title>sqlite3PagerGet (1 samples, 0.12%)</title><rect x="93.9877%" y="917" width="0.1227%" height="15" fill="rgb(214,148,10)" fg:x="766" fg:w="1"/><text x="94.2377%" y="927.50"></text></g><g><title>getPageMMap (1 samples, 0.12%)</title><rect x="93.9877%" y="901" width="0.1227%" height="15" fill="rgb(225,174,27)" fg:x="766" fg:w="1"/><text x="94.2377%" y="911.50"></text></g><g><title>getPageNormal (1 samples, 0.12%)</title><rect x="93.9877%" y="885" width="0.1227%" height="15" fill="rgb(230,96,26)" fg:x="766" fg:w="1"/><text x="94.2377%" y="895.50"></text></g><g><title>readDbPage (1 samples, 0.12%)</title><rect x="93.9877%" y="869" width="0.1227%" height="15" fill="rgb(232,10,30)" fg:x="766" fg:w="1"/><text x="94.2377%" y="879.50"></text></g><g><title>sqlite3OsRead (1 samples, 0.12%)</title><rect x="93.9877%" y="853" width="0.1227%" height="15" fill="rgb(222,8,50)" fg:x="766" fg:w="1"/><text x="94.2377%" y="863.50"></text></g><g><title>unixRead (1 samples, 0.12%)</title><rect x="93.9877%" y="837" width="0.1227%" height="15" fill="rgb(213,81,27)" fg:x="766" fg:w="1"/><text x="94.2377%" y="847.50"></text></g><g><title>seekAndRead (1 samples, 0.12%)</title><rect x="93.9877%" y="821" width="0.1227%" height="15" fill="rgb(245,50,10)" fg:x="766" fg:w="1"/><text x="94.2377%" y="831.50"></text></g><g><title>read (1 samples, 0.12%)</title><rect x="93.9877%" y="805" width="0.1227%" height="15" fill="rgb(216,100,18)" fg:x="766" fg:w="1"/><text x="94.2377%" y="815.50"></text></g><g><title>blockstack_lib::core::mempool::MemPoolDB::iterate_candidates (1 samples, 0.12%)</title><rect x="94.1104%" y="1541" width="0.1227%" height="15" fill="rgb(236,147,54)" fg:x="767" fg:w="1"/><text x="94.3604%" y="1551.50"></text></g><g><title>blockstack_lib::chainstate::stacks::miner::&lt;impl blockstack_lib::chainstate::stacks::StacksBlockBuilder&gt;::build_anchored_block::{{closure}} (1 samples, 0.12%)</title><rect x="94.1104%" y="1525" width="0.1227%" height="15" fill="rgb(205,143,26)" fg:x="767" fg:w="1"/><text x="94.3604%" y="1535.50"></text></g><g><title>blockstack_lib::chainstate::stacks::miner::&lt;impl blockstack_lib::chainstate::stacks::StacksBlockBuilder&gt;::try_mine_tx_with_len (1 samples, 0.12%)</title><rect x="94.1104%" y="1509" width="0.1227%" height="15" fill="rgb(236,26,9)" fg:x="767" fg:w="1"/><text x="94.3604%" y="1519.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::transactions::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::process_transaction (1 samples, 0.12%)</title><rect x="94.1104%" y="1493" width="0.1227%" height="15" fill="rgb(221,165,53)" fg:x="767" fg:w="1"/><text x="94.3604%" y="1503.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::transactions::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::process_transaction_payload (1 samples, 0.12%)</title><rect x="94.1104%" y="1477" width="0.1227%" height="15" fill="rgb(214,110,17)" fg:x="767" fg:w="1"/><text x="94.3604%" y="1487.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::run_contract_call (1 samples, 0.12%)</title><rect x="94.1104%" y="1461" width="0.1227%" height="15" fill="rgb(237,197,12)" fg:x="767" fg:w="1"/><text x="94.3604%" y="1471.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::with_abort_callback (1 samples, 0.12%)</title><rect x="94.1104%" y="1445" width="0.1227%" height="15" fill="rgb(205,84,17)" fg:x="767" fg:w="1"/><text x="94.3604%" y="1455.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::with_abort_callback::{{closure}} (1 samples, 0.12%)</title><rect x="94.1104%" y="1429" width="0.1227%" height="15" fill="rgb(237,18,45)" fg:x="767" fg:w="1"/><text x="94.3604%" y="1439.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::with_abort_callback::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="94.1104%" y="1413" width="0.1227%" height="15" fill="rgb(221,87,14)" fg:x="767" fg:w="1"/><text x="94.3604%" y="1423.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::run_contract_call::{{closure}} (1 samples, 0.12%)</title><rect x="94.1104%" y="1397" width="0.1227%" height="15" fill="rgb(238,186,15)" fg:x="767" fg:w="1"/><text x="94.3604%" y="1407.50"></text></g><g><title>blockstack_lib::vm::contexts::OwnedEnvironment::execute_transaction (1 samples, 0.12%)</title><rect x="94.1104%" y="1381" width="0.1227%" height="15" fill="rgb(208,115,11)" fg:x="767" fg:w="1"/><text x="94.3604%" y="1391.50"></text></g><g><title>blockstack_lib::vm::contexts::OwnedEnvironment::execute_in_env (1 samples, 0.12%)</title><rect x="94.1104%" y="1365" width="0.1227%" height="15" fill="rgb(254,175,0)" fg:x="767" fg:w="1"/><text x="94.3604%" y="1375.50"></text></g><g><title>blockstack_lib::vm::contexts::OwnedEnvironment::execute_transaction::{{closure}} (1 samples, 0.12%)</title><rect x="94.1104%" y="1349" width="0.1227%" height="15" fill="rgb(227,24,42)" fg:x="767" fg:w="1"/><text x="94.3604%" y="1359.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_contract (1 samples, 0.12%)</title><rect x="94.1104%" y="1333" width="0.1227%" height="15" fill="rgb(223,211,37)" fg:x="767" fg:w="1"/><text x="94.3604%" y="1343.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_contract::{{closure}} (1 samples, 0.12%)</title><rect x="94.1104%" y="1317" width="0.1227%" height="15" fill="rgb(235,49,27)" fg:x="767" fg:w="1"/><text x="94.3604%" y="1327.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_function_as_transaction (1 samples, 0.12%)</title><rect x="94.1104%" y="1301" width="0.1227%" height="15" fill="rgb(254,97,51)" fg:x="767" fg:w="1"/><text x="94.3604%" y="1311.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::execute_apply (1 samples, 0.12%)</title><rect x="94.1104%" y="1285" width="0.1227%" height="15" fill="rgb(249,51,40)" fg:x="767" fg:w="1"/><text x="94.3604%" y="1295.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="94.1104%" y="1269" width="0.1227%" height="15" fill="rgb(210,128,45)" fg:x="767" fg:w="1"/><text x="94.3604%" y="1279.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="94.1104%" y="1253" width="0.1227%" height="15" fill="rgb(224,137,50)" fg:x="767" fg:w="1"/><text x="94.3604%" y="1263.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="94.1104%" y="1237" width="0.1227%" height="15" fill="rgb(242,15,9)" fg:x="767" fg:w="1"/><text x="94.3604%" y="1247.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="94.1104%" y="1221" width="0.1227%" height="15" fill="rgb(233,187,41)" fg:x="767" fg:w="1"/><text x="94.3604%" y="1231.50"></text></g><g><title>blockstack_lib::vm::functions::special_let (1 samples, 0.12%)</title><rect x="94.1104%" y="1205" width="0.1227%" height="15" fill="rgb(227,2,29)" fg:x="767" fg:w="1"/><text x="94.3604%" y="1215.50"></text></g><g><title>blockstack_lib::vm::functions::special_let::{{closure}} (1 samples, 0.12%)</title><rect x="94.1104%" y="1189" width="0.1227%" height="15" fill="rgb(222,70,3)" fg:x="767" fg:w="1"/><text x="94.3604%" y="1199.50"></text></g><g><title>blockstack_lib::vm::functions::handle_binding_list (1 samples, 0.12%)</title><rect x="94.1104%" y="1173" width="0.1227%" height="15" fill="rgb(213,11,42)" fg:x="767" fg:w="1"/><text x="94.3604%" y="1183.50"></text></g><g><title>blockstack_lib::vm::functions::special_let::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="94.1104%" y="1157" width="0.1227%" height="15" fill="rgb(225,150,9)" fg:x="767" fg:w="1"/><text x="94.3604%" y="1167.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="94.1104%" y="1141" width="0.1227%" height="15" fill="rgb(230,162,45)" fg:x="767" fg:w="1"/><text x="94.3604%" y="1151.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="94.1104%" y="1125" width="0.1227%" height="15" fill="rgb(222,14,52)" fg:x="767" fg:w="1"/><text x="94.3604%" y="1135.50"></text></g><g><title>blockstack_lib::vm::costs::runtime_cost (1 samples, 0.12%)</title><rect x="94.1104%" y="1109" width="0.1227%" height="15" fill="rgb(254,198,14)" fg:x="767" fg:w="1"/><text x="94.3604%" y="1119.50"></text></g><g><title>&lt;blockstack_lib::vm::contexts::Environment as blockstack_lib::vm::costs::CostTracker&gt;::compute_cost (1 samples, 0.12%)</title><rect x="94.1104%" y="1093" width="0.1227%" height="15" fill="rgb(220,217,30)" fg:x="767" fg:w="1"/><text x="94.3604%" y="1103.50"></text></g><g><title>&lt;blockstack_lib::vm::costs::LimitedCostTracker as blockstack_lib::vm::costs::CostTracker&gt;::compute_cost (1 samples, 0.12%)</title><rect x="94.1104%" y="1077" width="0.1227%" height="15" fill="rgb(215,146,41)" fg:x="767" fg:w="1"/><text x="94.3604%" y="1087.50"></text></g><g><title>blockstack_lib::vm::costs::compute_cost (1 samples, 0.12%)</title><rect x="94.1104%" y="1061" width="0.1227%" height="15" fill="rgb(217,27,36)" fg:x="767" fg:w="1"/><text x="94.3604%" y="1071.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.12%)</title><rect x="94.1104%" y="1045" width="0.1227%" height="15" fill="rgb(219,218,39)" fg:x="767" fg:w="1"/><text x="94.3604%" y="1055.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.12%)</title><rect x="94.1104%" y="1029" width="0.1227%" height="15" fill="rgb(219,4,42)" fg:x="767" fg:w="1"/><text x="94.3604%" y="1039.50"></text></g><g><title>core::fmt::write (1 samples, 0.12%)</title><rect x="94.1104%" y="1013" width="0.1227%" height="15" fill="rgb(249,119,36)" fg:x="767" fg:w="1"/><text x="94.3604%" y="1023.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.12%)</title><rect x="94.1104%" y="997" width="0.1227%" height="15" fill="rgb(209,23,33)" fg:x="767" fg:w="1"/><text x="94.3604%" y="1007.50"></text></g><g><title>&lt;blockstack_lib::vm::costs::ClarityCostFunctionReference as core::fmt::Display&gt;::fmt (1 samples, 0.12%)</title><rect x="94.1104%" y="981" width="0.1227%" height="15" fill="rgb(211,10,0)" fg:x="767" fg:w="1"/><text x="94.3604%" y="991.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.12%)</title><rect x="94.1104%" y="965" width="0.1227%" height="15" fill="rgb(208,99,37)" fg:x="767" fg:w="1"/><text x="94.3604%" y="975.50"></text></g><g><title>core::fmt::write (1 samples, 0.12%)</title><rect x="94.1104%" y="949" width="0.1227%" height="15" fill="rgb(213,132,31)" fg:x="767" fg:w="1"/><text x="94.3604%" y="959.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.12%)</title><rect x="94.1104%" y="933" width="0.1227%" height="15" fill="rgb(243,129,40)" fg:x="767" fg:w="1"/><text x="94.3604%" y="943.50"></text></g><g><title>&lt;blockstack_lib::vm::types::QualifiedContractIdentifier as core::fmt::Display&gt;::fmt (1 samples, 0.12%)</title><rect x="94.1104%" y="917" width="0.1227%" height="15" fill="rgb(210,66,33)" fg:x="767" fg:w="1"/><text x="94.3604%" y="927.50"></text></g><g><title>blockstack_lib::vm::types::QualifiedContractIdentifier::to_string (1 samples, 0.12%)</title><rect x="94.1104%" y="901" width="0.1227%" height="15" fill="rgb(209,189,4)" fg:x="767" fg:w="1"/><text x="94.3604%" y="911.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.12%)</title><rect x="94.1104%" y="885" width="0.1227%" height="15" fill="rgb(214,107,37)" fg:x="767" fg:w="1"/><text x="94.3604%" y="895.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.12%)</title><rect x="94.1104%" y="869" width="0.1227%" height="15" fill="rgb(245,88,54)" fg:x="767" fg:w="1"/><text x="94.3604%" y="879.50"></text></g><g><title>core::fmt::write (1 samples, 0.12%)</title><rect x="94.1104%" y="853" width="0.1227%" height="15" fill="rgb(205,146,20)" fg:x="767" fg:w="1"/><text x="94.3604%" y="863.50"></text></g><g><title>&lt;blockstack_lib::vm::types::StandardPrincipalData as core::fmt::Display&gt;::fmt (1 samples, 0.12%)</title><rect x="94.1104%" y="837" width="0.1227%" height="15" fill="rgb(220,161,25)" fg:x="767" fg:w="1"/><text x="94.3604%" y="847.50"></text></g><g><title>blockstack_lib::vm::types::StandardPrincipalData::to_address (1 samples, 0.12%)</title><rect x="94.1104%" y="821" width="0.1227%" height="15" fill="rgb(215,152,15)" fg:x="767" fg:w="1"/><text x="94.3604%" y="831.50"></text></g><g><title>blockstack_lib::address::c32::c32_address (1 samples, 0.12%)</title><rect x="94.1104%" y="805" width="0.1227%" height="15" fill="rgb(233,192,44)" fg:x="767" fg:w="1"/><text x="94.3604%" y="815.50"></text></g><g><title>blockstack_lib::address::c32::c32_check_encode (1 samples, 0.12%)</title><rect x="94.1104%" y="789" width="0.1227%" height="15" fill="rgb(240,170,46)" fg:x="767" fg:w="1"/><text x="94.3604%" y="799.50"></text></g><g><title>blockstack_lib::address::c32::c32_encode (1 samples, 0.12%)</title><rect x="94.1104%" y="773" width="0.1227%" height="15" fill="rgb(207,104,33)" fg:x="767" fg:w="1"/><text x="94.3604%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.12%)</title><rect x="94.1104%" y="757" width="0.1227%" height="15" fill="rgb(219,21,39)" fg:x="767" fg:w="1"/><text x="94.3604%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="94.1104%" y="741" width="0.1227%" height="15" fill="rgb(214,133,29)" fg:x="767" fg:w="1"/><text x="94.3604%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="94.1104%" y="725" width="0.1227%" height="15" fill="rgb(226,93,6)" fg:x="767" fg:w="1"/><text x="94.3604%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.12%)</title><rect x="94.1104%" y="709" width="0.1227%" height="15" fill="rgb(252,222,34)" fg:x="767" fg:w="1"/><text x="94.3604%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.12%)</title><rect x="94.1104%" y="693" width="0.1227%" height="15" fill="rgb(252,92,48)" fg:x="767" fg:w="1"/><text x="94.3604%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.12%)</title><rect x="94.1104%" y="677" width="0.1227%" height="15" fill="rgb(245,223,24)" fg:x="767" fg:w="1"/><text x="94.3604%" y="687.50"></text></g><g><title>malloc (1 samples, 0.12%)</title><rect x="94.1104%" y="661" width="0.1227%" height="15" fill="rgb(205,176,3)" fg:x="767" fg:w="1"/><text x="94.3604%" y="671.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="94.2331%" y="1493" width="0.1227%" height="15" fill="rgb(235,151,15)" fg:x="768" fg:w="1"/><text x="94.4831%" y="1503.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="94.2331%" y="1477" width="0.1227%" height="15" fill="rgb(237,209,11)" fg:x="768" fg:w="1"/><text x="94.4831%" y="1487.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="94.2331%" y="1461" width="0.1227%" height="15" fill="rgb(243,227,24)" fg:x="768" fg:w="1"/><text x="94.4831%" y="1471.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="94.2331%" y="1445" width="0.1227%" height="15" fill="rgb(239,193,16)" fg:x="768" fg:w="1"/><text x="94.4831%" y="1455.50"></text></g><g><title>blockstack_lib::vm::functions::database::special_contract_call (1 samples, 0.12%)</title><rect x="94.2331%" y="1429" width="0.1227%" height="15" fill="rgb(231,27,9)" fg:x="768" fg:w="1"/><text x="94.4831%" y="1439.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_contract (1 samples, 0.12%)</title><rect x="94.2331%" y="1413" width="0.1227%" height="15" fill="rgb(219,169,10)" fg:x="768" fg:w="1"/><text x="94.4831%" y="1423.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get_contract_size (1 samples, 0.12%)</title><rect x="94.2331%" y="1397" width="0.1227%" height="15" fill="rgb(244,229,43)" fg:x="768" fg:w="1"/><text x="94.4831%" y="1407.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::fetch_metadata (1 samples, 0.12%)</title><rect x="94.2331%" y="1381" width="0.1227%" height="15" fill="rgb(254,38,20)" fg:x="768" fg:w="1"/><text x="94.4831%" y="1391.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get_metadata (1 samples, 0.12%)</title><rect x="94.2331%" y="1365" width="0.1227%" height="15" fill="rgb(250,47,30)" fg:x="768" fg:w="1"/><text x="94.4831%" y="1375.50"></text></g><g><title>blockstack_lib::vm::database::clarity_store::ClarityBackingStore::get_metadata (1 samples, 0.12%)</title><rect x="94.2331%" y="1349" width="0.1227%" height="15" fill="rgb(224,124,36)" fg:x="768" fg:w="1"/><text x="94.4831%" y="1359.50"></text></g><g><title>blockstack_lib::vm::database::clarity_store::ClarityBackingStore::get_contract_hash (1 samples, 0.12%)</title><rect x="94.2331%" y="1333" width="0.1227%" height="15" fill="rgb(246,68,51)" fg:x="768" fg:w="1"/><text x="94.4831%" y="1343.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::get (1 samples, 0.12%)</title><rect x="94.2331%" y="1317" width="0.1227%" height="15" fill="rgb(253,43,49)" fg:x="768" fg:w="1"/><text x="94.4831%" y="1327.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get (1 samples, 0.12%)</title><rect x="94.2331%" y="1301" width="0.1227%" height="15" fill="rgb(219,54,36)" fg:x="768" fg:w="1"/><text x="94.4831%" y="1311.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt; as blockstack_lib::chainstate::stacks::index::marf::MarfConnection&lt;T&gt;&gt;::with_conn (1 samples, 0.12%)</title><rect x="94.2331%" y="1285" width="0.1227%" height="15" fill="rgb(227,133,34)" fg:x="768" fg:w="1"/><text x="94.4831%" y="1295.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get::{{closure}} (1 samples, 0.12%)</title><rect x="94.2331%" y="1269" width="0.1227%" height="15" fill="rgb(247,227,15)" fg:x="768" fg:w="1"/><text x="94.4831%" y="1279.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_by_key (1 samples, 0.12%)</title><rect x="94.2331%" y="1253" width="0.1227%" height="15" fill="rgb(229,96,14)" fg:x="768" fg:w="1"/><text x="94.4831%" y="1263.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_path (1 samples, 0.12%)</title><rect x="94.2331%" y="1237" width="0.1227%" height="15" fill="rgb(220,79,17)" fg:x="768" fg:w="1"/><text x="94.4831%" y="1247.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk (1 samples, 0.12%)</title><rect x="94.2331%" y="1221" width="0.1227%" height="15" fill="rgb(205,131,53)" fg:x="768" fg:w="1"/><text x="94.4831%" y="1231.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_backptr (1 samples, 0.12%)</title><rect x="94.2331%" y="1205" width="0.1227%" height="15" fill="rgb(209,50,29)" fg:x="768" fg:w="1"/><text x="94.4831%" y="1215.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_backptr (1 samples, 0.12%)</title><rect x="94.2331%" y="1189" width="0.1227%" height="15" fill="rgb(245,86,46)" fg:x="768" fg:w="1"/><text x="94.4831%" y="1199.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (1 samples, 0.12%)</title><rect x="94.2331%" y="1173" width="0.1227%" height="15" fill="rgb(235,66,46)" fg:x="768" fg:w="1"/><text x="94.4831%" y="1183.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (1 samples, 0.12%)</title><rect x="94.2331%" y="1157" width="0.1227%" height="15" fill="rgb(232,148,31)" fg:x="768" fg:w="1"/><text x="94.4831%" y="1167.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (1 samples, 0.12%)</title><rect x="94.2331%" y="1141" width="0.1227%" height="15" fill="rgb(217,149,8)" fg:x="768" fg:w="1"/><text x="94.4831%" y="1151.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (1 samples, 0.12%)</title><rect x="94.2331%" y="1125" width="0.1227%" height="15" fill="rgb(209,183,11)" fg:x="768" fg:w="1"/><text x="94.4831%" y="1135.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (1 samples, 0.12%)</title><rect x="94.2331%" y="1109" width="0.1227%" height="15" fill="rgb(208,55,20)" fg:x="768" fg:w="1"/><text x="94.4831%" y="1119.50"></text></g><g><title>std::io::Read::read_exact (1 samples, 0.12%)</title><rect x="94.2331%" y="1093" width="0.1227%" height="15" fill="rgb(218,39,14)" fg:x="768" fg:w="1"/><text x="94.4831%" y="1103.50"></text></g><g><title>std::io::default_read_exact (1 samples, 0.12%)</title><rect x="94.2331%" y="1077" width="0.1227%" height="15" fill="rgb(216,169,33)" fg:x="768" fg:w="1"/><text x="94.4831%" y="1087.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="94.2331%" y="1061" width="0.1227%" height="15" fill="rgb(233,80,24)" fg:x="768" fg:w="1"/><text x="94.4831%" y="1071.50"></text></g><g><title>sqlite3_blob_read (1 samples, 0.12%)</title><rect x="94.2331%" y="1045" width="0.1227%" height="15" fill="rgb(213,179,31)" fg:x="768" fg:w="1"/><text x="94.4831%" y="1055.50"></text></g><g><title>blobReadWrite (1 samples, 0.12%)</title><rect x="94.2331%" y="1029" width="0.1227%" height="15" fill="rgb(209,19,5)" fg:x="768" fg:w="1"/><text x="94.4831%" y="1039.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="94.2331%" y="1013" width="0.1227%" height="15" fill="rgb(219,18,35)" fg:x="768" fg:w="1"/><text x="94.4831%" y="1023.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="94.2331%" y="997" width="0.1227%" height="15" fill="rgb(209,169,16)" fg:x="768" fg:w="1"/><text x="94.4831%" y="1007.50"></text></g><g><title>accessPayload (1 samples, 0.12%)</title><rect x="94.2331%" y="981" width="0.1227%" height="15" fill="rgb(245,90,51)" fg:x="768" fg:w="1"/><text x="94.4831%" y="991.50"></text></g><g><title>getOverflowPage (1 samples, 0.12%)</title><rect x="94.2331%" y="965" width="0.1227%" height="15" fill="rgb(220,99,45)" fg:x="768" fg:w="1"/><text x="94.4831%" y="975.50"></text></g><g><title>btreeGetPage (1 samples, 0.12%)</title><rect x="94.2331%" y="949" width="0.1227%" height="15" fill="rgb(249,89,25)" fg:x="768" fg:w="1"/><text x="94.4831%" y="959.50"></text></g><g><title>sqlite3PagerGet (1 samples, 0.12%)</title><rect x="94.2331%" y="933" width="0.1227%" height="15" fill="rgb(239,193,0)" fg:x="768" fg:w="1"/><text x="94.4831%" y="943.50"></text></g><g><title>getPageMMap (1 samples, 0.12%)</title><rect x="94.2331%" y="917" width="0.1227%" height="15" fill="rgb(231,126,1)" fg:x="768" fg:w="1"/><text x="94.4831%" y="927.50"></text></g><g><title>getPageNormal (1 samples, 0.12%)</title><rect x="94.2331%" y="901" width="0.1227%" height="15" fill="rgb(243,166,3)" fg:x="768" fg:w="1"/><text x="94.4831%" y="911.50"></text></g><g><title>readDbPage (1 samples, 0.12%)</title><rect x="94.2331%" y="885" width="0.1227%" height="15" fill="rgb(223,22,34)" fg:x="768" fg:w="1"/><text x="94.4831%" y="895.50"></text></g><g><title>sqlite3OsRead (1 samples, 0.12%)</title><rect x="94.2331%" y="869" width="0.1227%" height="15" fill="rgb(251,52,51)" fg:x="768" fg:w="1"/><text x="94.4831%" y="879.50"></text></g><g><title>unixRead (1 samples, 0.12%)</title><rect x="94.2331%" y="853" width="0.1227%" height="15" fill="rgb(221,165,28)" fg:x="768" fg:w="1"/><text x="94.4831%" y="863.50"></text></g><g><title>seekAndRead (1 samples, 0.12%)</title><rect x="94.2331%" y="837" width="0.1227%" height="15" fill="rgb(218,121,47)" fg:x="768" fg:w="1"/><text x="94.4831%" y="847.50"></text></g><g><title>read (1 samples, 0.12%)</title><rect x="94.2331%" y="821" width="0.1227%" height="15" fill="rgb(209,120,9)" fg:x="768" fg:w="1"/><text x="94.4831%" y="831.50"></text></g><g><title>blockstack_lib::vm::eval (2 samples, 0.25%)</title><rect x="94.2331%" y="1525" width="0.2454%" height="15" fill="rgb(236,68,12)" fg:x="768" fg:w="2"/><text x="94.4831%" y="1535.50"></text></g><g><title>blockstack_lib::vm::apply (2 samples, 0.25%)</title><rect x="94.2331%" y="1509" width="0.2454%" height="15" fill="rgb(225,194,26)" fg:x="768" fg:w="2"/><text x="94.4831%" y="1519.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="94.3558%" y="1493" width="0.1227%" height="15" fill="rgb(231,84,39)" fg:x="769" fg:w="1"/><text x="94.6058%" y="1503.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="94.3558%" y="1477" width="0.1227%" height="15" fill="rgb(210,11,45)" fg:x="769" fg:w="1"/><text x="94.6058%" y="1487.50"></text></g><g><title>blockstack_lib::vm::functions::database::special_contract_call (1 samples, 0.12%)</title><rect x="94.3558%" y="1461" width="0.1227%" height="15" fill="rgb(224,54,52)" fg:x="769" fg:w="1"/><text x="94.6058%" y="1471.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_contract (1 samples, 0.12%)</title><rect x="94.3558%" y="1445" width="0.1227%" height="15" fill="rgb(238,102,14)" fg:x="769" fg:w="1"/><text x="94.6058%" y="1455.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_contract::{{closure}} (1 samples, 0.12%)</title><rect x="94.3558%" y="1429" width="0.1227%" height="15" fill="rgb(243,160,52)" fg:x="769" fg:w="1"/><text x="94.6058%" y="1439.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_function_as_transaction (1 samples, 0.12%)</title><rect x="94.3558%" y="1413" width="0.1227%" height="15" fill="rgb(216,114,19)" fg:x="769" fg:w="1"/><text x="94.6058%" y="1423.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::execute_apply (1 samples, 0.12%)</title><rect x="94.3558%" y="1397" width="0.1227%" height="15" fill="rgb(244,166,37)" fg:x="769" fg:w="1"/><text x="94.6058%" y="1407.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="94.3558%" y="1381" width="0.1227%" height="15" fill="rgb(246,29,44)" fg:x="769" fg:w="1"/><text x="94.6058%" y="1391.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="94.3558%" y="1365" width="0.1227%" height="15" fill="rgb(215,56,53)" fg:x="769" fg:w="1"/><text x="94.6058%" y="1375.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="94.3558%" y="1349" width="0.1227%" height="15" fill="rgb(217,60,2)" fg:x="769" fg:w="1"/><text x="94.6058%" y="1359.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="94.3558%" y="1333" width="0.1227%" height="15" fill="rgb(207,26,24)" fg:x="769" fg:w="1"/><text x="94.6058%" y="1343.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="94.3558%" y="1317" width="0.1227%" height="15" fill="rgb(252,210,15)" fg:x="769" fg:w="1"/><text x="94.6058%" y="1327.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="94.3558%" y="1301" width="0.1227%" height="15" fill="rgb(253,209,26)" fg:x="769" fg:w="1"/><text x="94.6058%" y="1311.50"></text></g><g><title>blockstack_lib::vm::functions::database::special_contract_call (1 samples, 0.12%)</title><rect x="94.3558%" y="1285" width="0.1227%" height="15" fill="rgb(238,170,14)" fg:x="769" fg:w="1"/><text x="94.6058%" y="1295.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_contract (1 samples, 0.12%)</title><rect x="94.3558%" y="1269" width="0.1227%" height="15" fill="rgb(216,178,15)" fg:x="769" fg:w="1"/><text x="94.6058%" y="1279.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_contract::{{closure}} (1 samples, 0.12%)</title><rect x="94.3558%" y="1253" width="0.1227%" height="15" fill="rgb(250,197,2)" fg:x="769" fg:w="1"/><text x="94.6058%" y="1263.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_function_as_transaction (1 samples, 0.12%)</title><rect x="94.3558%" y="1237" width="0.1227%" height="15" fill="rgb(212,70,42)" fg:x="769" fg:w="1"/><text x="94.6058%" y="1247.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::execute_apply (1 samples, 0.12%)</title><rect x="94.3558%" y="1221" width="0.1227%" height="15" fill="rgb(227,213,9)" fg:x="769" fg:w="1"/><text x="94.6058%" y="1231.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="94.3558%" y="1205" width="0.1227%" height="15" fill="rgb(245,99,25)" fg:x="769" fg:w="1"/><text x="94.6058%" y="1215.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="94.3558%" y="1189" width="0.1227%" height="15" fill="rgb(250,82,29)" fg:x="769" fg:w="1"/><text x="94.6058%" y="1199.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="94.3558%" y="1173" width="0.1227%" height="15" fill="rgb(241,226,54)" fg:x="769" fg:w="1"/><text x="94.6058%" y="1183.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="94.3558%" y="1157" width="0.1227%" height="15" fill="rgb(221,99,41)" fg:x="769" fg:w="1"/><text x="94.6058%" y="1167.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="94.3558%" y="1141" width="0.1227%" height="15" fill="rgb(213,90,21)" fg:x="769" fg:w="1"/><text x="94.6058%" y="1151.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="94.3558%" y="1125" width="0.1227%" height="15" fill="rgb(205,208,24)" fg:x="769" fg:w="1"/><text x="94.6058%" y="1135.50"></text></g><g><title>blockstack_lib::vm::functions::assets::special_mint_token (1 samples, 0.12%)</title><rect x="94.3558%" y="1109" width="0.1227%" height="15" fill="rgb(246,31,12)" fg:x="769" fg:w="1"/><text x="94.6058%" y="1119.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="94.3558%" y="1093" width="0.1227%" height="15" fill="rgb(213,154,6)" fg:x="769" fg:w="1"/><text x="94.6058%" y="1103.50"></text></g><g><title>blockstack_lib::vm::lookup_variable (1 samples, 0.12%)</title><rect x="94.3558%" y="1077" width="0.1227%" height="15" fill="rgb(222,163,29)" fg:x="769" fg:w="1"/><text x="94.6058%" y="1087.50"></text></g><g><title>blockstack_lib::vm::costs::runtime_cost (1 samples, 0.12%)</title><rect x="94.3558%" y="1061" width="0.1227%" height="15" fill="rgb(227,201,8)" fg:x="769" fg:w="1"/><text x="94.6058%" y="1071.50"></text></g><g><title>&lt;blockstack_lib::vm::contexts::Environment as blockstack_lib::vm::costs::CostTracker&gt;::compute_cost (1 samples, 0.12%)</title><rect x="94.3558%" y="1045" width="0.1227%" height="15" fill="rgb(233,9,32)" fg:x="769" fg:w="1"/><text x="94.6058%" y="1055.50"></text></g><g><title>&lt;blockstack_lib::vm::costs::LimitedCostTracker as blockstack_lib::vm::costs::CostTracker&gt;::compute_cost (1 samples, 0.12%)</title><rect x="94.3558%" y="1029" width="0.1227%" height="15" fill="rgb(217,54,24)" fg:x="769" fg:w="1"/><text x="94.6058%" y="1039.50"></text></g><g><title>blockstack_lib::vm::costs::compute_cost (1 samples, 0.12%)</title><rect x="94.3558%" y="1013" width="0.1227%" height="15" fill="rgb(235,192,0)" fg:x="769" fg:w="1"/><text x="94.6058%" y="1023.50"></text></g><g><title>blockstack_lib::vm::eval_all (1 samples, 0.12%)</title><rect x="94.3558%" y="997" width="0.1227%" height="15" fill="rgb(235,45,9)" fg:x="769" fg:w="1"/><text x="94.6058%" y="1007.50"></text></g><g><title>blockstack_lib::vm::eval_all::{{closure}} (1 samples, 0.12%)</title><rect x="94.3558%" y="981" width="0.1227%" height="15" fill="rgb(246,42,40)" fg:x="769" fg:w="1"/><text x="94.6058%" y="991.50"></text></g><g><title>blockstack_lib::vm::contexts::GlobalContext::execute (1 samples, 0.12%)</title><rect x="94.3558%" y="965" width="0.1227%" height="15" fill="rgb(248,111,24)" fg:x="769" fg:w="1"/><text x="94.6058%" y="975.50"></text></g><g><title>blockstack_lib::vm::contexts::GlobalContext::begin (1 samples, 0.12%)</title><rect x="94.3558%" y="949" width="0.1227%" height="15" fill="rgb(249,65,22)" fg:x="769" fg:w="1"/><text x="94.6058%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.12%)</title><rect x="94.3558%" y="933" width="0.1227%" height="15" fill="rgb(238,111,51)" fg:x="769" fg:w="1"/><text x="94.6058%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="94.3558%" y="917" width="0.1227%" height="15" fill="rgb(250,118,22)" fg:x="769" fg:w="1"/><text x="94.6058%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="94.3558%" y="901" width="0.1227%" height="15" fill="rgb(234,84,26)" fg:x="769" fg:w="1"/><text x="94.6058%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.12%)</title><rect x="94.3558%" y="885" width="0.1227%" height="15" fill="rgb(243,172,12)" fg:x="769" fg:w="1"/><text x="94.6058%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.12%)</title><rect x="94.3558%" y="869" width="0.1227%" height="15" fill="rgb(236,150,49)" fg:x="769" fg:w="1"/><text x="94.6058%" y="879.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.12%)</title><rect x="94.3558%" y="853" width="0.1227%" height="15" fill="rgb(225,197,26)" fg:x="769" fg:w="1"/><text x="94.6058%" y="863.50"></text></g><g><title>blockstack_lib::vm::functions::special_asserts (1 samples, 0.12%)</title><rect x="94.4785%" y="1493" width="0.1227%" height="15" fill="rgb(214,17,42)" fg:x="770" fg:w="1"/><text x="94.7285%" y="1503.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="94.4785%" y="1477" width="0.1227%" height="15" fill="rgb(224,165,40)" fg:x="770" fg:w="1"/><text x="94.7285%" y="1487.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="94.4785%" y="1461" width="0.1227%" height="15" fill="rgb(246,100,4)" fg:x="770" fg:w="1"/><text x="94.7285%" y="1471.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="94.4785%" y="1445" width="0.1227%" height="15" fill="rgb(222,103,0)" fg:x="770" fg:w="1"/><text x="94.7285%" y="1455.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="94.4785%" y="1429" width="0.1227%" height="15" fill="rgb(227,189,26)" fg:x="770" fg:w="1"/><text x="94.7285%" y="1439.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="94.4785%" y="1413" width="0.1227%" height="15" fill="rgb(214,202,17)" fg:x="770" fg:w="1"/><text x="94.7285%" y="1423.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="94.4785%" y="1397" width="0.1227%" height="15" fill="rgb(229,111,3)" fg:x="770" fg:w="1"/><text x="94.7285%" y="1407.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="94.4785%" y="1381" width="0.1227%" height="15" fill="rgb(229,172,15)" fg:x="770" fg:w="1"/><text x="94.7285%" y="1391.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="94.4785%" y="1365" width="0.1227%" height="15" fill="rgb(230,224,35)" fg:x="770" fg:w="1"/><text x="94.7285%" y="1375.50"></text></g><g><title>blockstack_lib::vm::functions::database::special_contract_call (1 samples, 0.12%)</title><rect x="94.4785%" y="1349" width="0.1227%" height="15" fill="rgb(251,141,6)" fg:x="770" fg:w="1"/><text x="94.7285%" y="1359.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_contract (1 samples, 0.12%)</title><rect x="94.4785%" y="1333" width="0.1227%" height="15" fill="rgb(225,208,6)" fg:x="770" fg:w="1"/><text x="94.7285%" y="1343.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_contract::{{closure}} (1 samples, 0.12%)</title><rect x="94.4785%" y="1317" width="0.1227%" height="15" fill="rgb(246,181,16)" fg:x="770" fg:w="1"/><text x="94.7285%" y="1327.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get_contract (1 samples, 0.12%)</title><rect x="94.4785%" y="1301" width="0.1227%" height="15" fill="rgb(227,129,36)" fg:x="770" fg:w="1"/><text x="94.7285%" y="1311.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::fetch_metadata (1 samples, 0.12%)</title><rect x="94.4785%" y="1285" width="0.1227%" height="15" fill="rgb(248,117,24)" fg:x="770" fg:w="1"/><text x="94.7285%" y="1295.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.12%)</title><rect x="94.4785%" y="1269" width="0.1227%" height="15" fill="rgb(214,185,35)" fg:x="770" fg:w="1"/><text x="94.7285%" y="1279.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::fetch_metadata::{{closure}} (1 samples, 0.12%)</title><rect x="94.4785%" y="1253" width="0.1227%" height="15" fill="rgb(236,150,34)" fg:x="770" fg:w="1"/><text x="94.7285%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.12%)</title><rect x="94.4785%" y="1237" width="0.1227%" height="15" fill="rgb(243,228,27)" fg:x="770" fg:w="1"/><text x="94.7285%" y="1247.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::fetch_metadata::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="94.4785%" y="1221" width="0.1227%" height="15" fill="rgb(245,77,44)" fg:x="770" fg:w="1"/><text x="94.7285%" y="1231.50"></text></g><g><title>&lt;blockstack_lib::vm::contracts::Contract as blockstack_lib::vm::database::structures::ClarityDeserializable&lt;blockstack_lib::vm::contracts::Contract&gt;&gt;::deserialize (1 samples, 0.12%)</title><rect x="94.4785%" y="1205" width="0.1227%" height="15" fill="rgb(235,214,42)" fg:x="770" fg:w="1"/><text x="94.7285%" y="1215.50"></text></g><g><title>blockstack_lib::vm::contracts::_::&lt;impl serde::de::Deserialize for blockstack_lib::vm::contracts::Contract&gt;::deserialize (1 samples, 0.12%)</title><rect x="94.4785%" y="1189" width="0.1227%" height="15" fill="rgb(221,74,3)" fg:x="770" fg:w="1"/><text x="94.7285%" y="1199.50"></text></g><g><title>&lt;serde_stacker::de::Deserializer&lt;D&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.12%)</title><rect x="94.4785%" y="1173" width="0.1227%" height="15" fill="rgb(206,121,29)" fg:x="770" fg:w="1"/><text x="94.7285%" y="1183.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.12%)</title><rect x="94.4785%" y="1157" width="0.1227%" height="15" fill="rgb(249,131,53)" fg:x="770" fg:w="1"/><text x="94.7285%" y="1167.50"></text></g><g><title>&lt;serde_stacker::de::Visitor&lt;V&gt; as serde::de::Visitor&gt;::visit_map (1 samples, 0.12%)</title><rect x="94.4785%" y="1141" width="0.1227%" height="15" fill="rgb(236,170,29)" fg:x="770" fg:w="1"/><text x="94.7285%" y="1151.50"></text></g><g><title>stacker::maybe_grow (1 samples, 0.12%)</title><rect x="94.4785%" y="1125" width="0.1227%" height="15" fill="rgb(247,96,15)" fg:x="770" fg:w="1"/><text x="94.7285%" y="1135.50"></text></g><g><title>&lt;serde_stacker::de::Visitor&lt;V&gt; as serde::de::Visitor&gt;::visit_map::{{closure}} (1 samples, 0.12%)</title><rect x="94.4785%" y="1109" width="0.1227%" height="15" fill="rgb(211,210,7)" fg:x="770" fg:w="1"/><text x="94.7285%" y="1119.50"></text></g><g><title>&lt;blockstack_lib::vm::contracts::_::&lt;impl serde::de::Deserialize for blockstack_lib::vm::contracts::Contract&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.12%)</title><rect x="94.4785%" y="1093" width="0.1227%" height="15" fill="rgb(240,88,50)" fg:x="770" fg:w="1"/><text x="94.7285%" y="1103.50"></text></g><g><title>serde::de::MapAccess::next_value (1 samples, 0.12%)</title><rect x="94.4785%" y="1077" width="0.1227%" height="15" fill="rgb(209,229,26)" fg:x="770" fg:w="1"/><text x="94.7285%" y="1087.50"></text></g><g><title>&lt;serde_stacker::de::MapAccess&lt;D&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.12%)</title><rect x="94.4785%" y="1061" width="0.1227%" height="15" fill="rgb(210,68,23)" fg:x="770" fg:w="1"/><text x="94.7285%" y="1071.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.12%)</title><rect x="94.4785%" y="1045" width="0.1227%" height="15" fill="rgb(229,180,13)" fg:x="770" fg:w="1"/><text x="94.7285%" y="1055.50"></text></g><g><title>&lt;serde_stacker::de::DeserializeSeed&lt;S&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.12%)</title><rect x="94.4785%" y="1029" width="0.1227%" height="15" fill="rgb(236,53,44)" fg:x="770" fg:w="1"/><text x="94.7285%" y="1039.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.12%)</title><rect x="94.4785%" y="1013" width="0.1227%" height="15" fill="rgb(244,214,29)" fg:x="770" fg:w="1"/><text x="94.7285%" y="1023.50"></text></g><g><title>blockstack_lib::vm::contexts::_::&lt;impl serde::de::Deserialize for blockstack_lib::vm::contexts::ContractContext&gt;::deserialize (1 samples, 0.12%)</title><rect x="94.4785%" y="997" width="0.1227%" height="15" fill="rgb(220,75,29)" fg:x="770" fg:w="1"/><text x="94.7285%" y="1007.50"></text></g><g><title>&lt;serde_stacker::de::Deserializer&lt;D&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.12%)</title><rect x="94.4785%" y="981" width="0.1227%" height="15" fill="rgb(214,183,37)" fg:x="770" fg:w="1"/><text x="94.7285%" y="991.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.12%)</title><rect x="94.4785%" y="965" width="0.1227%" height="15" fill="rgb(239,117,29)" fg:x="770" fg:w="1"/><text x="94.7285%" y="975.50"></text></g><g><title>&lt;serde_stacker::de::Visitor&lt;V&gt; as serde::de::Visitor&gt;::visit_map (1 samples, 0.12%)</title><rect x="94.4785%" y="949" width="0.1227%" height="15" fill="rgb(237,171,35)" fg:x="770" fg:w="1"/><text x="94.7285%" y="959.50"></text></g><g><title>stacker::maybe_grow (1 samples, 0.12%)</title><rect x="94.4785%" y="933" width="0.1227%" height="15" fill="rgb(229,178,53)" fg:x="770" fg:w="1"/><text x="94.7285%" y="943.50"></text></g><g><title>&lt;serde_stacker::de::Visitor&lt;V&gt; as serde::de::Visitor&gt;::visit_map::{{closure}} (1 samples, 0.12%)</title><rect x="94.4785%" y="917" width="0.1227%" height="15" fill="rgb(210,102,19)" fg:x="770" fg:w="1"/><text x="94.7285%" y="927.50"></text></g><g><title>&lt;blockstack_lib::vm::contexts::_::&lt;impl serde::de::Deserialize for blockstack_lib::vm::contexts::ContractContext&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.12%)</title><rect x="94.4785%" y="901" width="0.1227%" height="15" fill="rgb(235,127,22)" fg:x="770" fg:w="1"/><text x="94.7285%" y="911.50"></text></g><g><title>serde::de::MapAccess::next_value (1 samples, 0.12%)</title><rect x="94.4785%" y="885" width="0.1227%" height="15" fill="rgb(244,31,31)" fg:x="770" fg:w="1"/><text x="94.7285%" y="895.50"></text></g><g><title>&lt;serde_stacker::de::MapAccess&lt;D&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.12%)</title><rect x="94.4785%" y="869" width="0.1227%" height="15" fill="rgb(231,43,21)" fg:x="770" fg:w="1"/><text x="94.7285%" y="879.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.12%)</title><rect x="94.4785%" y="853" width="0.1227%" height="15" fill="rgb(217,131,35)" fg:x="770" fg:w="1"/><text x="94.7285%" y="863.50"></text></g><g><title>&lt;serde_stacker::de::DeserializeSeed&lt;S&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.12%)</title><rect x="94.4785%" y="837" width="0.1227%" height="15" fill="rgb(221,149,4)" fg:x="770" fg:w="1"/><text x="94.7285%" y="847.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.12%)</title><rect x="94.4785%" y="821" width="0.1227%" height="15" fill="rgb(232,170,28)" fg:x="770" fg:w="1"/><text x="94.7285%" y="831.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.12%)</title><rect x="94.4785%" y="805" width="0.1227%" height="15" fill="rgb(238,56,10)" fg:x="770" fg:w="1"/><text x="94.7285%" y="815.50"></text></g><g><title>&lt;serde_stacker::de::Deserializer&lt;D&gt; as serde::de::Deserializer&gt;::deserialize_map (1 samples, 0.12%)</title><rect x="94.4785%" y="789" width="0.1227%" height="15" fill="rgb(235,196,14)" fg:x="770" fg:w="1"/><text x="94.7285%" y="799.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_map (1 samples, 0.12%)</title><rect x="94.4785%" y="773" width="0.1227%" height="15" fill="rgb(216,45,48)" fg:x="770" fg:w="1"/><text x="94.7285%" y="783.50"></text></g><g><title>&lt;serde_stacker::de::Visitor&lt;V&gt; as serde::de::Visitor&gt;::visit_map (1 samples, 0.12%)</title><rect x="94.4785%" y="757" width="0.1227%" height="15" fill="rgb(238,213,17)" fg:x="770" fg:w="1"/><text x="94.7285%" y="767.50"></text></g><g><title>stacker::maybe_grow (1 samples, 0.12%)</title><rect x="94.4785%" y="741" width="0.1227%" height="15" fill="rgb(212,13,2)" fg:x="770" fg:w="1"/><text x="94.7285%" y="751.50"></text></g><g><title>&lt;serde_stacker::de::Visitor&lt;V&gt; as serde::de::Visitor&gt;::visit_map::{{closure}} (1 samples, 0.12%)</title><rect x="94.4785%" y="725" width="0.1227%" height="15" fill="rgb(240,114,20)" fg:x="770" fg:w="1"/><text x="94.7285%" y="735.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize::MapVisitor&lt;K,V,S&gt; as serde::de::Visitor&gt;::visit_map (1 samples, 0.12%)</title><rect x="94.4785%" y="709" width="0.1227%" height="15" fill="rgb(228,41,40)" fg:x="770" fg:w="1"/><text x="94.7285%" y="719.50"></text></g><g><title>serde::de::MapAccess::next_entry (1 samples, 0.12%)</title><rect x="94.4785%" y="693" width="0.1227%" height="15" fill="rgb(244,132,35)" fg:x="770" fg:w="1"/><text x="94.7285%" y="703.50"></text></g><g><title>serde::de::MapAccess::next_entry_seed (1 samples, 0.12%)</title><rect x="94.4785%" y="677" width="0.1227%" height="15" fill="rgb(253,189,4)" fg:x="770" fg:w="1"/><text x="94.7285%" y="687.50"></text></g><g><title>&lt;serde_stacker::de::MapAccess&lt;D&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.12%)</title><rect x="94.4785%" y="661" width="0.1227%" height="15" fill="rgb(224,37,19)" fg:x="770" fg:w="1"/><text x="94.7285%" y="671.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.12%)</title><rect x="94.4785%" y="645" width="0.1227%" height="15" fill="rgb(235,223,18)" fg:x="770" fg:w="1"/><text x="94.7285%" y="655.50"></text></g><g><title>&lt;serde_stacker::de::DeserializeSeed&lt;S&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.12%)</title><rect x="94.4785%" y="629" width="0.1227%" height="15" fill="rgb(235,163,25)" fg:x="770" fg:w="1"/><text x="94.7285%" y="639.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.12%)</title><rect x="94.4785%" y="613" width="0.1227%" height="15" fill="rgb(217,145,28)" fg:x="770" fg:w="1"/><text x="94.7285%" y="623.50"></text></g><g><title>blockstack_lib::vm::callables::_::&lt;impl serde::de::Deserialize for blockstack_lib::vm::callables::DefinedFunction&gt;::deserialize (1 samples, 0.12%)</title><rect x="94.4785%" y="597" width="0.1227%" height="15" fill="rgb(223,223,32)" fg:x="770" fg:w="1"/><text x="94.7285%" y="607.50"></text></g><g><title>&lt;serde_stacker::de::Deserializer&lt;D&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.12%)</title><rect x="94.4785%" y="581" width="0.1227%" height="15" fill="rgb(227,189,39)" fg:x="770" fg:w="1"/><text x="94.7285%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_struct (1 samples, 0.12%)</title><rect x="94.4785%" y="565" width="0.1227%" height="15" fill="rgb(248,10,22)" fg:x="770" fg:w="1"/><text x="94.7285%" y="575.50"></text></g><g><title>&lt;serde_stacker::de::Visitor&lt;V&gt; as serde::de::Visitor&gt;::visit_map (1 samples, 0.12%)</title><rect x="94.4785%" y="549" width="0.1227%" height="15" fill="rgb(248,46,39)" fg:x="770" fg:w="1"/><text x="94.7285%" y="559.50"></text></g><g><title>stacker::maybe_grow (1 samples, 0.12%)</title><rect x="94.4785%" y="533" width="0.1227%" height="15" fill="rgb(248,113,48)" fg:x="770" fg:w="1"/><text x="94.7285%" y="543.50"></text></g><g><title>&lt;serde_stacker::de::Visitor&lt;V&gt; as serde::de::Visitor&gt;::visit_map::{{closure}} (1 samples, 0.12%)</title><rect x="94.4785%" y="517" width="0.1227%" height="15" fill="rgb(245,16,25)" fg:x="770" fg:w="1"/><text x="94.7285%" y="527.50"></text></g><g><title>&lt;blockstack_lib::vm::callables::_::&lt;impl serde::de::Deserialize for blockstack_lib::vm::callables::DefinedFunction&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.12%)</title><rect x="94.4785%" y="501" width="0.1227%" height="15" fill="rgb(249,152,16)" fg:x="770" fg:w="1"/><text x="94.7285%" y="511.50"></text></g><g><title>serde::de::MapAccess::next_value (1 samples, 0.12%)</title><rect x="94.4785%" y="485" width="0.1227%" height="15" fill="rgb(250,16,1)" fg:x="770" fg:w="1"/><text x="94.7285%" y="495.50"></text></g><g><title>&lt;serde_stacker::de::MapAccess&lt;D&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.12%)</title><rect x="94.4785%" y="469" width="0.1227%" height="15" fill="rgb(249,138,3)" fg:x="770" fg:w="1"/><text x="94.7285%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.12%)</title><rect x="94.4785%" y="453" width="0.1227%" height="15" fill="rgb(227,71,41)" fg:x="770" fg:w="1"/><text x="94.7285%" y="463.50"></text></g><g><title>&lt;serde_stacker::de::DeserializeSeed&lt;S&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.12%)</title><rect x="94.4785%" y="437" width="0.1227%" height="15" fill="rgb(209,184,23)" fg:x="770" fg:w="1"/><text x="94.7285%" y="447.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.12%)</title><rect x="94.4785%" y="421" width="0.1227%" height="15" fill="rgb(223,215,31)" fg:x="770" fg:w="1"/><text x="94.7285%" y="431.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (1 samples, 0.12%)</title><rect x="94.4785%" y="405" width="0.1227%" height="15" fill="rgb(210,146,28)" fg:x="770" fg:w="1"/><text x="94.7285%" y="415.50"></text></g><g><title>&lt;serde_stacker::de::Deserializer&lt;D&gt; as serde::de::Deserializer&gt;::deserialize_seq (1 samples, 0.12%)</title><rect x="94.4785%" y="389" width="0.1227%" height="15" fill="rgb(209,183,41)" fg:x="770" fg:w="1"/><text x="94.7285%" y="399.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_seq (1 samples, 0.12%)</title><rect x="94.4785%" y="373" width="0.1227%" height="15" fill="rgb(209,224,45)" fg:x="770" fg:w="1"/><text x="94.7285%" y="383.50"></text></g><g><title>&lt;serde_stacker::de::Visitor&lt;V&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.12%)</title><rect x="94.4785%" y="357" width="0.1227%" height="15" fill="rgb(224,209,51)" fg:x="770" fg:w="1"/><text x="94.7285%" y="367.50"></text></g><g><title>stacker::maybe_grow (1 samples, 0.12%)</title><rect x="94.4785%" y="341" width="0.1227%" height="15" fill="rgb(223,17,39)" fg:x="770" fg:w="1"/><text x="94.7285%" y="351.50"></text></g><g><title>&lt;serde_stacker::de::Visitor&lt;V&gt; as serde::de::Visitor&gt;::visit_seq::{{closure}} (1 samples, 0.12%)</title><rect x="94.4785%" y="325" width="0.1227%" height="15" fill="rgb(234,204,37)" fg:x="770" fg:w="1"/><text x="94.7285%" y="335.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.12%)</title><rect x="94.4785%" y="309" width="0.1227%" height="15" fill="rgb(236,120,5)" fg:x="770" fg:w="1"/><text x="94.7285%" y="319.50"></text></g><g><title>serde::de::SeqAccess::next_element (1 samples, 0.12%)</title><rect x="94.4785%" y="293" width="0.1227%" height="15" fill="rgb(248,97,27)" fg:x="770" fg:w="1"/><text x="94.7285%" y="303.50"></text></g><g><title>&lt;serde_stacker::de::SeqAccess&lt;D&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.12%)</title><rect x="94.4785%" y="277" width="0.1227%" height="15" fill="rgb(240,66,17)" fg:x="770" fg:w="1"/><text x="94.7285%" y="287.50"></text></g><g><title>&lt;serde_json::de::SeqAccess&lt;R&gt; as serde::de::SeqAccess&gt;::next_element_seed (1 samples, 0.12%)</title><rect x="94.4785%" y="261" width="0.1227%" height="15" fill="rgb(210,79,3)" fg:x="770" fg:w="1"/><text x="94.7285%" y="271.50"></text></g><g><title>&lt;serde_stacker::de::DeserializeSeed&lt;S&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.12%)</title><rect x="94.4785%" y="245" width="0.1227%" height="15" fill="rgb(214,176,27)" fg:x="770" fg:w="1"/><text x="94.7285%" y="255.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.12%)</title><rect x="94.4785%" y="229" width="0.1227%" height="15" fill="rgb(235,185,3)" fg:x="770" fg:w="1"/><text x="94.7285%" y="239.50"></text></g><g><title>blockstack_lib::vm::representations::_::&lt;impl serde::de::Deserialize for blockstack_lib::vm::representations::ClarityName&gt;::deserialize (1 samples, 0.12%)</title><rect x="94.4785%" y="213" width="0.1227%" height="15" fill="rgb(227,24,12)" fg:x="770" fg:w="1"/><text x="94.7285%" y="223.50"></text></g><g><title>&lt;serde_stacker::de::Deserializer&lt;D&gt; as serde::de::Deserializer&gt;::deserialize_newtype_struct (1 samples, 0.12%)</title><rect x="94.4785%" y="197" width="0.1227%" height="15" fill="rgb(252,169,48)" fg:x="770" fg:w="1"/><text x="94.7285%" y="207.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_newtype_struct (1 samples, 0.12%)</title><rect x="94.4785%" y="181" width="0.1227%" height="15" fill="rgb(212,65,1)" fg:x="770" fg:w="1"/><text x="94.7285%" y="191.50"></text></g><g><title>&lt;serde_stacker::de::Visitor&lt;V&gt; as serde::de::Visitor&gt;::visit_newtype_struct (1 samples, 0.12%)</title><rect x="94.4785%" y="165" width="0.1227%" height="15" fill="rgb(242,39,24)" fg:x="770" fg:w="1"/><text x="94.7285%" y="175.50"></text></g><g><title>stacker::maybe_grow (1 samples, 0.12%)</title><rect x="94.4785%" y="149" width="0.1227%" height="15" fill="rgb(249,32,23)" fg:x="770" fg:w="1"/><text x="94.7285%" y="159.50"></text></g><g><title>&lt;serde_stacker::de::Visitor&lt;V&gt; as serde::de::Visitor&gt;::visit_newtype_struct::{{closure}} (1 samples, 0.12%)</title><rect x="94.4785%" y="133" width="0.1227%" height="15" fill="rgb(251,195,23)" fg:x="770" fg:w="1"/><text x="94.7285%" y="143.50"></text></g><g><title>&lt;blockstack_lib::vm::representations::_::&lt;impl serde::de::Deserialize for blockstack_lib::vm::representations::ClarityName&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (1 samples, 0.12%)</title><rect x="94.4785%" y="117" width="0.1227%" height="15" fill="rgb(236,174,8)" fg:x="770" fg:w="1"/><text x="94.7285%" y="127.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1 samples, 0.12%)</title><rect x="94.4785%" y="101" width="0.1227%" height="15" fill="rgb(220,197,8)" fg:x="770" fg:w="1"/><text x="94.7285%" y="111.50"></text></g><g><title>&lt;serde_stacker::de::Deserializer&lt;D&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.12%)</title><rect x="94.4785%" y="85" width="0.1227%" height="15" fill="rgb(240,108,37)" fg:x="770" fg:w="1"/><text x="94.7285%" y="95.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.12%)</title><rect x="94.4785%" y="69" width="0.1227%" height="15" fill="rgb(232,176,24)" fg:x="770" fg:w="1"/><text x="94.7285%" y="79.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.12%)</title><rect x="94.4785%" y="53" width="0.1227%" height="15" fill="rgb(243,35,29)" fg:x="770" fg:w="1"/><text x="94.7285%" y="63.50"></text></g><g><title>malloc (1 samples, 0.12%)</title><rect x="94.4785%" y="37" width="0.1227%" height="15" fill="rgb(210,37,18)" fg:x="770" fg:w="1"/><text x="94.7285%" y="47.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::apply (1 samples, 0.12%)</title><rect x="94.6012%" y="1397" width="0.1227%" height="15" fill="rgb(224,184,40)" fg:x="771" fg:w="1"/><text x="94.8512%" y="1407.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::execute_apply (1 samples, 0.12%)</title><rect x="94.6012%" y="1381" width="0.1227%" height="15" fill="rgb(236,39,29)" fg:x="771" fg:w="1"/><text x="94.8512%" y="1391.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="94.6012%" y="1365" width="0.1227%" height="15" fill="rgb(232,48,39)" fg:x="771" fg:w="1"/><text x="94.8512%" y="1375.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="94.6012%" y="1349" width="0.1227%" height="15" fill="rgb(236,34,42)" fg:x="771" fg:w="1"/><text x="94.8512%" y="1359.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="94.6012%" y="1333" width="0.1227%" height="15" fill="rgb(243,106,37)" fg:x="771" fg:w="1"/><text x="94.8512%" y="1343.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="94.6012%" y="1317" width="0.1227%" height="15" fill="rgb(218,96,6)" fg:x="771" fg:w="1"/><text x="94.8512%" y="1327.50"></text></g><g><title>blockstack_lib::vm::functions::special_let (1 samples, 0.12%)</title><rect x="94.6012%" y="1301" width="0.1227%" height="15" fill="rgb(235,130,12)" fg:x="771" fg:w="1"/><text x="94.8512%" y="1311.50"></text></g><g><title>blockstack_lib::vm::functions::special_let::{{closure}} (1 samples, 0.12%)</title><rect x="94.6012%" y="1285" width="0.1227%" height="15" fill="rgb(231,95,0)" fg:x="771" fg:w="1"/><text x="94.8512%" y="1295.50"></text></g><g><title>blockstack_lib::vm::functions::handle_binding_list (1 samples, 0.12%)</title><rect x="94.6012%" y="1269" width="0.1227%" height="15" fill="rgb(228,12,23)" fg:x="771" fg:w="1"/><text x="94.8512%" y="1279.50"></text></g><g><title>blockstack_lib::vm::functions::special_let::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="94.6012%" y="1253" width="0.1227%" height="15" fill="rgb(216,12,1)" fg:x="771" fg:w="1"/><text x="94.8512%" y="1263.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="94.6012%" y="1237" width="0.1227%" height="15" fill="rgb(219,59,3)" fg:x="771" fg:w="1"/><text x="94.8512%" y="1247.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="94.6012%" y="1221" width="0.1227%" height="15" fill="rgb(215,208,46)" fg:x="771" fg:w="1"/><text x="94.8512%" y="1231.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="94.6012%" y="1205" width="0.1227%" height="15" fill="rgb(254,224,29)" fg:x="771" fg:w="1"/><text x="94.8512%" y="1215.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="94.6012%" y="1189" width="0.1227%" height="15" fill="rgb(232,14,29)" fg:x="771" fg:w="1"/><text x="94.8512%" y="1199.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="94.6012%" y="1173" width="0.1227%" height="15" fill="rgb(208,45,52)" fg:x="771" fg:w="1"/><text x="94.8512%" y="1183.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="94.6012%" y="1157" width="0.1227%" height="15" fill="rgb(234,191,28)" fg:x="771" fg:w="1"/><text x="94.8512%" y="1167.50"></text></g><g><title>blockstack_lib::vm::functions::database::special_contract_call (1 samples, 0.12%)</title><rect x="94.6012%" y="1141" width="0.1227%" height="15" fill="rgb(244,67,43)" fg:x="771" fg:w="1"/><text x="94.8512%" y="1151.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_contract (1 samples, 0.12%)</title><rect x="94.6012%" y="1125" width="0.1227%" height="15" fill="rgb(236,189,24)" fg:x="771" fg:w="1"/><text x="94.8512%" y="1135.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_contract::{{closure}} (1 samples, 0.12%)</title><rect x="94.6012%" y="1109" width="0.1227%" height="15" fill="rgb(239,214,33)" fg:x="771" fg:w="1"/><text x="94.8512%" y="1119.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get_contract (1 samples, 0.12%)</title><rect x="94.6012%" y="1093" width="0.1227%" height="15" fill="rgb(226,176,41)" fg:x="771" fg:w="1"/><text x="94.8512%" y="1103.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::fetch_metadata (1 samples, 0.12%)</title><rect x="94.6012%" y="1077" width="0.1227%" height="15" fill="rgb(248,47,8)" fg:x="771" fg:w="1"/><text x="94.8512%" y="1087.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get_metadata (1 samples, 0.12%)</title><rect x="94.6012%" y="1061" width="0.1227%" height="15" fill="rgb(218,81,44)" fg:x="771" fg:w="1"/><text x="94.8512%" y="1071.50"></text></g><g><title>blockstack_lib::vm::database::clarity_store::ClarityBackingStore::get_metadata (1 samples, 0.12%)</title><rect x="94.6012%" y="1045" width="0.1227%" height="15" fill="rgb(213,98,6)" fg:x="771" fg:w="1"/><text x="94.8512%" y="1055.50"></text></g><g><title>blockstack_lib::vm::database::clarity_store::ClarityBackingStore::get_contract_hash (1 samples, 0.12%)</title><rect x="94.6012%" y="1029" width="0.1227%" height="15" fill="rgb(222,85,22)" fg:x="771" fg:w="1"/><text x="94.8512%" y="1039.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::get_block_at_height (1 samples, 0.12%)</title><rect x="94.6012%" y="1013" width="0.1227%" height="15" fill="rgb(239,46,39)" fg:x="771" fg:w="1"/><text x="94.8512%" y="1023.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get_block_at_height (1 samples, 0.12%)</title><rect x="94.6012%" y="997" width="0.1227%" height="15" fill="rgb(237,12,29)" fg:x="771" fg:w="1"/><text x="94.8512%" y="1007.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt; as blockstack_lib::chainstate::stacks::index::marf::MarfConnection&lt;T&gt;&gt;::with_conn (1 samples, 0.12%)</title><rect x="94.6012%" y="981" width="0.1227%" height="15" fill="rgb(214,77,8)" fg:x="771" fg:w="1"/><text x="94.8512%" y="991.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get_block_at_height::{{closure}} (1 samples, 0.12%)</title><rect x="94.6012%" y="965" width="0.1227%" height="15" fill="rgb(217,168,37)" fg:x="771" fg:w="1"/><text x="94.8512%" y="975.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_block_at_height (1 samples, 0.12%)</title><rect x="94.6012%" y="949" width="0.1227%" height="15" fill="rgb(221,217,23)" fg:x="771" fg:w="1"/><text x="94.8512%" y="959.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_by_key (1 samples, 0.12%)</title><rect x="94.6012%" y="933" width="0.1227%" height="15" fill="rgb(243,229,36)" fg:x="771" fg:w="1"/><text x="94.8512%" y="943.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_path (1 samples, 0.12%)</title><rect x="94.6012%" y="917" width="0.1227%" height="15" fill="rgb(251,163,40)" fg:x="771" fg:w="1"/><text x="94.8512%" y="927.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk (1 samples, 0.12%)</title><rect x="94.6012%" y="901" width="0.1227%" height="15" fill="rgb(237,222,12)" fg:x="771" fg:w="1"/><text x="94.8512%" y="911.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_from (1 samples, 0.12%)</title><rect x="94.6012%" y="885" width="0.1227%" height="15" fill="rgb(248,132,6)" fg:x="771" fg:w="1"/><text x="94.8512%" y="895.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::node::TrieCursor&lt;T&gt;::walk (1 samples, 0.12%)</title><rect x="94.6012%" y="869" width="0.1227%" height="15" fill="rgb(227,167,50)" fg:x="771" fg:w="1"/><text x="94.8512%" y="879.50"></text></g><g><title>blockstack_lib::util::macros::is_trace (1 samples, 0.12%)</title><rect x="94.6012%" y="853" width="0.1227%" height="15" fill="rgb(242,84,37)" fg:x="771" fg:w="1"/><text x="94.8512%" y="863.50"></text></g><g><title>std::env::var (1 samples, 0.12%)</title><rect x="94.6012%" y="837" width="0.1227%" height="15" fill="rgb(212,4,50)" fg:x="771" fg:w="1"/><text x="94.8512%" y="847.50"></text></g><g><title>std::env::_var (1 samples, 0.12%)</title><rect x="94.6012%" y="821" width="0.1227%" height="15" fill="rgb(230,228,32)" fg:x="771" fg:w="1"/><text x="94.8512%" y="831.50"></text></g><g><title>std::env::var_os (1 samples, 0.12%)</title><rect x="94.6012%" y="805" width="0.1227%" height="15" fill="rgb(248,217,23)" fg:x="771" fg:w="1"/><text x="94.8512%" y="815.50"></text></g><g><title>std::env::_var_os (1 samples, 0.12%)</title><rect x="94.6012%" y="789" width="0.1227%" height="15" fill="rgb(238,197,32)" fg:x="771" fg:w="1"/><text x="94.8512%" y="799.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.12%)</title><rect x="94.6012%" y="773" width="0.1227%" height="15" fill="rgb(236,106,1)" fg:x="771" fg:w="1"/><text x="94.8512%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::ffi::c_str::CString&gt; (1 samples, 0.12%)</title><rect x="94.6012%" y="757" width="0.1227%" height="15" fill="rgb(219,228,13)" fg:x="771" fg:w="1"/><text x="94.8512%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;[u8]&gt;&gt; (1 samples, 0.12%)</title><rect x="94.6012%" y="741" width="0.1227%" height="15" fill="rgb(238,30,35)" fg:x="771" fg:w="1"/><text x="94.8512%" y="751.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.12%)</title><rect x="94.6012%" y="725" width="0.1227%" height="15" fill="rgb(236,70,23)" fg:x="771" fg:w="1"/><text x="94.8512%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.12%)</title><rect x="94.6012%" y="709" width="0.1227%" height="15" fill="rgb(249,104,48)" fg:x="771" fg:w="1"/><text x="94.8512%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.12%)</title><rect x="94.6012%" y="693" width="0.1227%" height="15" fill="rgb(254,117,50)" fg:x="771" fg:w="1"/><text x="94.8512%" y="703.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="94.7239%" y="1397" width="0.1227%" height="15" fill="rgb(223,152,4)" fg:x="772" fg:w="1"/><text x="94.9739%" y="1407.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="94.7239%" y="1381" width="0.1227%" height="15" fill="rgb(245,6,2)" fg:x="772" fg:w="1"/><text x="94.9739%" y="1391.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="94.7239%" y="1365" width="0.1227%" height="15" fill="rgb(249,150,24)" fg:x="772" fg:w="1"/><text x="94.9739%" y="1375.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="94.7239%" y="1349" width="0.1227%" height="15" fill="rgb(228,185,42)" fg:x="772" fg:w="1"/><text x="94.9739%" y="1359.50"></text></g><g><title>blockstack_lib::vm::functions::database::special_fetch_entry (1 samples, 0.12%)</title><rect x="94.7239%" y="1333" width="0.1227%" height="15" fill="rgb(226,39,33)" fg:x="772" fg:w="1"/><text x="94.9739%" y="1343.50"></text></g><g><title>blockstack_lib::vm::functions::database::special_fetch_entry_v205 (1 samples, 0.12%)</title><rect x="94.7239%" y="1317" width="0.1227%" height="15" fill="rgb(221,166,19)" fg:x="772" fg:w="1"/><text x="94.9739%" y="1327.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="94.7239%" y="1301" width="0.1227%" height="15" fill="rgb(209,109,2)" fg:x="772" fg:w="1"/><text x="94.9739%" y="1311.50"></text></g><g><title>blockstack_lib::vm::lookup_function (1 samples, 0.12%)</title><rect x="94.7239%" y="1285" width="0.1227%" height="15" fill="rgb(252,216,26)" fg:x="772" fg:w="1"/><text x="94.9739%" y="1295.50"></text></g><g><title>blockstack_lib::vm::costs::runtime_cost (1 samples, 0.12%)</title><rect x="94.7239%" y="1269" width="0.1227%" height="15" fill="rgb(227,173,36)" fg:x="772" fg:w="1"/><text x="94.9739%" y="1279.50"></text></g><g><title>&lt;blockstack_lib::vm::contexts::Environment as blockstack_lib::vm::costs::CostTracker&gt;::compute_cost (1 samples, 0.12%)</title><rect x="94.7239%" y="1253" width="0.1227%" height="15" fill="rgb(209,90,7)" fg:x="772" fg:w="1"/><text x="94.9739%" y="1263.50"></text></g><g><title>&lt;blockstack_lib::vm::costs::LimitedCostTracker as blockstack_lib::vm::costs::CostTracker&gt;::compute_cost (1 samples, 0.12%)</title><rect x="94.7239%" y="1237" width="0.1227%" height="15" fill="rgb(250,194,11)" fg:x="772" fg:w="1"/><text x="94.9739%" y="1247.50"></text></g><g><title>blockstack_lib::vm::costs::compute_cost (1 samples, 0.12%)</title><rect x="94.7239%" y="1221" width="0.1227%" height="15" fill="rgb(220,72,50)" fg:x="772" fg:w="1"/><text x="94.9739%" y="1231.50"></text></g><g><title>blockstack_lib::vm::eval_all (1 samples, 0.12%)</title><rect x="94.7239%" y="1205" width="0.1227%" height="15" fill="rgb(222,106,48)" fg:x="772" fg:w="1"/><text x="94.9739%" y="1215.50"></text></g><g><title>blockstack_lib::vm::eval_all::{{closure}} (1 samples, 0.12%)</title><rect x="94.7239%" y="1189" width="0.1227%" height="15" fill="rgb(216,220,45)" fg:x="772" fg:w="1"/><text x="94.9739%" y="1199.50"></text></g><g><title>blockstack_lib::vm::contexts::GlobalContext::execute (1 samples, 0.12%)</title><rect x="94.7239%" y="1173" width="0.1227%" height="15" fill="rgb(234,112,18)" fg:x="772" fg:w="1"/><text x="94.9739%" y="1183.50"></text></g><g><title>blockstack_lib::vm::eval_all::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="94.7239%" y="1157" width="0.1227%" height="15" fill="rgb(206,179,9)" fg:x="772" fg:w="1"/><text x="94.9739%" y="1167.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="94.7239%" y="1141" width="0.1227%" height="15" fill="rgb(215,115,40)" fg:x="772" fg:w="1"/><text x="94.9739%" y="1151.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="94.7239%" y="1125" width="0.1227%" height="15" fill="rgb(222,69,34)" fg:x="772" fg:w="1"/><text x="94.9739%" y="1135.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::apply (1 samples, 0.12%)</title><rect x="94.7239%" y="1109" width="0.1227%" height="15" fill="rgb(209,161,10)" fg:x="772" fg:w="1"/><text x="94.9739%" y="1119.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_function_as_transaction (1 samples, 0.12%)</title><rect x="94.7239%" y="1093" width="0.1227%" height="15" fill="rgb(217,6,38)" fg:x="772" fg:w="1"/><text x="94.9739%" y="1103.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::execute_apply (1 samples, 0.12%)</title><rect x="94.7239%" y="1077" width="0.1227%" height="15" fill="rgb(229,229,48)" fg:x="772" fg:w="1"/><text x="94.9739%" y="1087.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="94.7239%" y="1061" width="0.1227%" height="15" fill="rgb(225,21,28)" fg:x="772" fg:w="1"/><text x="94.9739%" y="1071.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="94.7239%" y="1045" width="0.1227%" height="15" fill="rgb(206,33,13)" fg:x="772" fg:w="1"/><text x="94.9739%" y="1055.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::apply (1 samples, 0.12%)</title><rect x="94.7239%" y="1029" width="0.1227%" height="15" fill="rgb(242,178,17)" fg:x="772" fg:w="1"/><text x="94.9739%" y="1039.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::execute_apply (1 samples, 0.12%)</title><rect x="94.7239%" y="1013" width="0.1227%" height="15" fill="rgb(220,162,5)" fg:x="772" fg:w="1"/><text x="94.9739%" y="1023.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="94.7239%" y="997" width="0.1227%" height="15" fill="rgb(210,33,43)" fg:x="772" fg:w="1"/><text x="94.9739%" y="1007.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="94.7239%" y="981" width="0.1227%" height="15" fill="rgb(216,116,54)" fg:x="772" fg:w="1"/><text x="94.9739%" y="991.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="94.7239%" y="965" width="0.1227%" height="15" fill="rgb(249,92,24)" fg:x="772" fg:w="1"/><text x="94.9739%" y="975.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="94.7239%" y="949" width="0.1227%" height="15" fill="rgb(231,189,14)" fg:x="772" fg:w="1"/><text x="94.9739%" y="959.50"></text></g><g><title>blockstack_lib::vm::functions::tuples::tuple_cons (1 samples, 0.12%)</title><rect x="94.7239%" y="933" width="0.1227%" height="15" fill="rgb(230,8,41)" fg:x="772" fg:w="1"/><text x="94.9739%" y="943.50"></text></g><g><title>blockstack_lib::vm::functions::parse_eval_bindings (1 samples, 0.12%)</title><rect x="94.7239%" y="917" width="0.1227%" height="15" fill="rgb(249,7,27)" fg:x="772" fg:w="1"/><text x="94.9739%" y="927.50"></text></g><g><title>blockstack_lib::vm::functions::handle_binding_list (1 samples, 0.12%)</title><rect x="94.7239%" y="901" width="0.1227%" height="15" fill="rgb(232,86,5)" fg:x="772" fg:w="1"/><text x="94.9739%" y="911.50"></text></g><g><title>blockstack_lib::vm::functions::parse_eval_bindings::{{closure}} (1 samples, 0.12%)</title><rect x="94.7239%" y="885" width="0.1227%" height="15" fill="rgb(224,175,18)" fg:x="772" fg:w="1"/><text x="94.9739%" y="895.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.12%)</title><rect x="94.7239%" y="869" width="0.1227%" height="15" fill="rgb(220,129,12)" fg:x="772" fg:w="1"/><text x="94.9739%" y="879.50"></text></g><g><title>blockstack_lib::vm::functions::parse_eval_bindings::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="94.7239%" y="853" width="0.1227%" height="15" fill="rgb(210,19,36)" fg:x="772" fg:w="1"/><text x="94.9739%" y="863.50"></text></g><g><title>&lt;blockstack_lib::vm::representations::ClarityName as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="94.7239%" y="837" width="0.1227%" height="15" fill="rgb(219,96,14)" fg:x="772" fg:w="1"/><text x="94.9739%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="94.7239%" y="821" width="0.1227%" height="15" fill="rgb(249,106,1)" fg:x="772" fg:w="1"/><text x="94.9739%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="94.7239%" y="805" width="0.1227%" height="15" fill="rgb(249,155,20)" fg:x="772" fg:w="1"/><text x="94.9739%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.12%)</title><rect x="94.7239%" y="789" width="0.1227%" height="15" fill="rgb(244,168,9)" fg:x="772" fg:w="1"/><text x="94.9739%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.12%)</title><rect x="94.7239%" y="773" width="0.1227%" height="15" fill="rgb(216,23,50)" fg:x="772" fg:w="1"/><text x="94.9739%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.12%)</title><rect x="94.7239%" y="757" width="0.1227%" height="15" fill="rgb(224,219,20)" fg:x="772" fg:w="1"/><text x="94.9739%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.12%)</title><rect x="94.7239%" y="741" width="0.1227%" height="15" fill="rgb(222,156,15)" fg:x="772" fg:w="1"/><text x="94.9739%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.12%)</title><rect x="94.7239%" y="725" width="0.1227%" height="15" fill="rgb(231,97,17)" fg:x="772" fg:w="1"/><text x="94.9739%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.12%)</title><rect x="94.7239%" y="709" width="0.1227%" height="15" fill="rgb(218,70,48)" fg:x="772" fg:w="1"/><text x="94.9739%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.12%)</title><rect x="94.7239%" y="693" width="0.1227%" height="15" fill="rgb(212,196,52)" fg:x="772" fg:w="1"/><text x="94.9739%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.12%)</title><rect x="94.7239%" y="677" width="0.1227%" height="15" fill="rgb(243,203,18)" fg:x="772" fg:w="1"/><text x="94.9739%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.12%)</title><rect x="94.7239%" y="661" width="0.1227%" height="15" fill="rgb(252,125,41)" fg:x="772" fg:w="1"/><text x="94.9739%" y="671.50"></text></g><g><title>malloc (1 samples, 0.12%)</title><rect x="94.7239%" y="645" width="0.1227%" height="15" fill="rgb(223,180,33)" fg:x="772" fg:w="1"/><text x="94.9739%" y="655.50"></text></g><g><title>blockstack_lib::vm::apply (6 samples, 0.74%)</title><rect x="94.2331%" y="1541" width="0.7362%" height="15" fill="rgb(254,159,46)" fg:x="768" fg:w="6"/><text x="94.4831%" y="1551.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (4 samples, 0.49%)</title><rect x="94.4785%" y="1525" width="0.4908%" height="15" fill="rgb(254,38,10)" fg:x="770" fg:w="4"/><text x="94.7285%" y="1535.50"></text></g><g><title>core::ops::function::Fn::call (4 samples, 0.49%)</title><rect x="94.4785%" y="1509" width="0.4908%" height="15" fill="rgb(208,217,32)" fg:x="770" fg:w="4"/><text x="94.7285%" y="1519.50"></text></g><g><title>blockstack_lib::vm::functions::special_let (3 samples, 0.37%)</title><rect x="94.6012%" y="1493" width="0.3681%" height="15" fill="rgb(221,120,13)" fg:x="771" fg:w="3"/><text x="94.8512%" y="1503.50"></text></g><g><title>blockstack_lib::vm::functions::special_let::{{closure}} (3 samples, 0.37%)</title><rect x="94.6012%" y="1477" width="0.3681%" height="15" fill="rgb(246,54,52)" fg:x="771" fg:w="3"/><text x="94.8512%" y="1487.50"></text></g><g><title>blockstack_lib::vm::functions::handle_binding_list (3 samples, 0.37%)</title><rect x="94.6012%" y="1461" width="0.3681%" height="15" fill="rgb(242,34,25)" fg:x="771" fg:w="3"/><text x="94.8512%" y="1471.50"></text></g><g><title>blockstack_lib::vm::functions::special_let::{{closure}}::{{closure}} (3 samples, 0.37%)</title><rect x="94.6012%" y="1445" width="0.3681%" height="15" fill="rgb(247,209,9)" fg:x="771" fg:w="3"/><text x="94.8512%" y="1455.50"></text></g><g><title>blockstack_lib::vm::eval (3 samples, 0.37%)</title><rect x="94.6012%" y="1429" width="0.3681%" height="15" fill="rgb(228,71,26)" fg:x="771" fg:w="3"/><text x="94.8512%" y="1439.50"></text></g><g><title>blockstack_lib::vm::apply (3 samples, 0.37%)</title><rect x="94.6012%" y="1413" width="0.3681%" height="15" fill="rgb(222,145,49)" fg:x="771" fg:w="3"/><text x="94.8512%" y="1423.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="94.8466%" y="1397" width="0.1227%" height="15" fill="rgb(218,121,17)" fg:x="773" fg:w="1"/><text x="95.0966%" y="1407.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="94.8466%" y="1381" width="0.1227%" height="15" fill="rgb(244,50,7)" fg:x="773" fg:w="1"/><text x="95.0966%" y="1391.50"></text></g><g><title>blockstack_lib::vm::functions::special_contract_of (1 samples, 0.12%)</title><rect x="94.8466%" y="1365" width="0.1227%" height="15" fill="rgb(246,229,37)" fg:x="773" fg:w="1"/><text x="95.0966%" y="1375.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get_contract (1 samples, 0.12%)</title><rect x="94.8466%" y="1349" width="0.1227%" height="15" fill="rgb(225,18,5)" fg:x="773" fg:w="1"/><text x="95.0966%" y="1359.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::fetch_metadata (1 samples, 0.12%)</title><rect x="94.8466%" y="1333" width="0.1227%" height="15" fill="rgb(213,204,8)" fg:x="773" fg:w="1"/><text x="95.0966%" y="1343.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get_metadata (1 samples, 0.12%)</title><rect x="94.8466%" y="1317" width="0.1227%" height="15" fill="rgb(238,103,6)" fg:x="773" fg:w="1"/><text x="95.0966%" y="1327.50"></text></g><g><title>blockstack_lib::vm::database::clarity_store::ClarityBackingStore::get_metadata (1 samples, 0.12%)</title><rect x="94.8466%" y="1301" width="0.1227%" height="15" fill="rgb(222,25,35)" fg:x="773" fg:w="1"/><text x="95.0966%" y="1311.50"></text></g><g><title>blockstack_lib::vm::database::clarity_store::ClarityBackingStore::get_contract_hash (1 samples, 0.12%)</title><rect x="94.8466%" y="1285" width="0.1227%" height="15" fill="rgb(213,203,35)" fg:x="773" fg:w="1"/><text x="95.0966%" y="1295.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::get_block_at_height (1 samples, 0.12%)</title><rect x="94.8466%" y="1269" width="0.1227%" height="15" fill="rgb(221,79,53)" fg:x="773" fg:w="1"/><text x="95.0966%" y="1279.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get_block_at_height (1 samples, 0.12%)</title><rect x="94.8466%" y="1253" width="0.1227%" height="15" fill="rgb(243,200,35)" fg:x="773" fg:w="1"/><text x="95.0966%" y="1263.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt; as blockstack_lib::chainstate::stacks::index::marf::MarfConnection&lt;T&gt;&gt;::with_conn (1 samples, 0.12%)</title><rect x="94.8466%" y="1237" width="0.1227%" height="15" fill="rgb(248,60,25)" fg:x="773" fg:w="1"/><text x="95.0966%" y="1247.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get_block_at_height::{{closure}} (1 samples, 0.12%)</title><rect x="94.8466%" y="1221" width="0.1227%" height="15" fill="rgb(227,53,46)" fg:x="773" fg:w="1"/><text x="95.0966%" y="1231.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_block_at_height (1 samples, 0.12%)</title><rect x="94.8466%" y="1205" width="0.1227%" height="15" fill="rgb(216,120,32)" fg:x="773" fg:w="1"/><text x="95.0966%" y="1215.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_by_key (1 samples, 0.12%)</title><rect x="94.8466%" y="1189" width="0.1227%" height="15" fill="rgb(220,134,1)" fg:x="773" fg:w="1"/><text x="95.0966%" y="1199.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_path (1 samples, 0.12%)</title><rect x="94.8466%" y="1173" width="0.1227%" height="15" fill="rgb(237,168,5)" fg:x="773" fg:w="1"/><text x="95.0966%" y="1183.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk (1 samples, 0.12%)</title><rect x="94.8466%" y="1157" width="0.1227%" height="15" fill="rgb(231,100,33)" fg:x="773" fg:w="1"/><text x="95.0966%" y="1167.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_backptr (1 samples, 0.12%)</title><rect x="94.8466%" y="1141" width="0.1227%" height="15" fill="rgb(236,177,47)" fg:x="773" fg:w="1"/><text x="95.0966%" y="1151.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_backptr (1 samples, 0.12%)</title><rect x="94.8466%" y="1125" width="0.1227%" height="15" fill="rgb(235,7,49)" fg:x="773" fg:w="1"/><text x="95.0966%" y="1135.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (1 samples, 0.12%)</title><rect x="94.8466%" y="1109" width="0.1227%" height="15" fill="rgb(232,119,22)" fg:x="773" fg:w="1"/><text x="95.0966%" y="1119.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (1 samples, 0.12%)</title><rect x="94.8466%" y="1093" width="0.1227%" height="15" fill="rgb(254,73,53)" fg:x="773" fg:w="1"/><text x="95.0966%" y="1103.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (1 samples, 0.12%)</title><rect x="94.8466%" y="1077" width="0.1227%" height="15" fill="rgb(251,35,20)" fg:x="773" fg:w="1"/><text x="95.0966%" y="1087.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (1 samples, 0.12%)</title><rect x="94.8466%" y="1061" width="0.1227%" height="15" fill="rgb(241,119,20)" fg:x="773" fg:w="1"/><text x="95.0966%" y="1071.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (1 samples, 0.12%)</title><rect x="94.8466%" y="1045" width="0.1227%" height="15" fill="rgb(207,102,14)" fg:x="773" fg:w="1"/><text x="95.0966%" y="1055.50"></text></g><g><title>std::io::Read::read_exact (1 samples, 0.12%)</title><rect x="94.8466%" y="1029" width="0.1227%" height="15" fill="rgb(248,201,50)" fg:x="773" fg:w="1"/><text x="95.0966%" y="1039.50"></text></g><g><title>std::io::default_read_exact (1 samples, 0.12%)</title><rect x="94.8466%" y="1013" width="0.1227%" height="15" fill="rgb(222,185,44)" fg:x="773" fg:w="1"/><text x="95.0966%" y="1023.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="94.8466%" y="997" width="0.1227%" height="15" fill="rgb(218,107,18)" fg:x="773" fg:w="1"/><text x="95.0966%" y="1007.50"></text></g><g><title>sqlite3_blob_read (1 samples, 0.12%)</title><rect x="94.8466%" y="981" width="0.1227%" height="15" fill="rgb(237,177,39)" fg:x="773" fg:w="1"/><text x="95.0966%" y="991.50"></text></g><g><title>blobReadWrite (1 samples, 0.12%)</title><rect x="94.8466%" y="965" width="0.1227%" height="15" fill="rgb(246,69,6)" fg:x="773" fg:w="1"/><text x="95.0966%" y="975.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="94.8466%" y="949" width="0.1227%" height="15" fill="rgb(234,208,37)" fg:x="773" fg:w="1"/><text x="95.0966%" y="959.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="94.8466%" y="933" width="0.1227%" height="15" fill="rgb(225,4,6)" fg:x="773" fg:w="1"/><text x="95.0966%" y="943.50"></text></g><g><title>accessPayload (1 samples, 0.12%)</title><rect x="94.8466%" y="917" width="0.1227%" height="15" fill="rgb(233,45,0)" fg:x="773" fg:w="1"/><text x="95.0966%" y="927.50"></text></g><g><title>getOverflowPage (1 samples, 0.12%)</title><rect x="94.8466%" y="901" width="0.1227%" height="15" fill="rgb(226,136,5)" fg:x="773" fg:w="1"/><text x="95.0966%" y="911.50"></text></g><g><title>btreeGetPage (1 samples, 0.12%)</title><rect x="94.8466%" y="885" width="0.1227%" height="15" fill="rgb(211,91,47)" fg:x="773" fg:w="1"/><text x="95.0966%" y="895.50"></text></g><g><title>sqlite3PagerGet (1 samples, 0.12%)</title><rect x="94.8466%" y="869" width="0.1227%" height="15" fill="rgb(242,88,51)" fg:x="773" fg:w="1"/><text x="95.0966%" y="879.50"></text></g><g><title>getPageMMap (1 samples, 0.12%)</title><rect x="94.8466%" y="853" width="0.1227%" height="15" fill="rgb(230,91,28)" fg:x="773" fg:w="1"/><text x="95.0966%" y="863.50"></text></g><g><title>getPageNormal (1 samples, 0.12%)</title><rect x="94.8466%" y="837" width="0.1227%" height="15" fill="rgb(254,186,29)" fg:x="773" fg:w="1"/><text x="95.0966%" y="847.50"></text></g><g><title>readDbPage (1 samples, 0.12%)</title><rect x="94.8466%" y="821" width="0.1227%" height="15" fill="rgb(238,6,4)" fg:x="773" fg:w="1"/><text x="95.0966%" y="831.50"></text></g><g><title>sqlite3OsRead (1 samples, 0.12%)</title><rect x="94.8466%" y="805" width="0.1227%" height="15" fill="rgb(221,151,16)" fg:x="773" fg:w="1"/><text x="95.0966%" y="815.50"></text></g><g><title>unixRead (1 samples, 0.12%)</title><rect x="94.8466%" y="789" width="0.1227%" height="15" fill="rgb(251,143,52)" fg:x="773" fg:w="1"/><text x="95.0966%" y="799.50"></text></g><g><title>seekAndRead (1 samples, 0.12%)</title><rect x="94.8466%" y="773" width="0.1227%" height="15" fill="rgb(206,90,15)" fg:x="773" fg:w="1"/><text x="95.0966%" y="783.50"></text></g><g><title>read (1 samples, 0.12%)</title><rect x="94.8466%" y="757" width="0.1227%" height="15" fill="rgb(218,35,8)" fg:x="773" fg:w="1"/><text x="95.0966%" y="767.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::execute_apply (1 samples, 0.12%)</title><rect x="94.9693%" y="1541" width="0.1227%" height="15" fill="rgb(239,215,6)" fg:x="774" fg:w="1"/><text x="95.2193%" y="1551.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="94.9693%" y="1525" width="0.1227%" height="15" fill="rgb(245,116,39)" fg:x="774" fg:w="1"/><text x="95.2193%" y="1535.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="94.9693%" y="1509" width="0.1227%" height="15" fill="rgb(242,65,28)" fg:x="774" fg:w="1"/><text x="95.2193%" y="1519.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="94.9693%" y="1493" width="0.1227%" height="15" fill="rgb(252,132,53)" fg:x="774" fg:w="1"/><text x="95.2193%" y="1503.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="94.9693%" y="1477" width="0.1227%" height="15" fill="rgb(224,159,50)" fg:x="774" fg:w="1"/><text x="95.2193%" y="1487.50"></text></g><g><title>blockstack_lib::vm::functions::special_let (1 samples, 0.12%)</title><rect x="94.9693%" y="1461" width="0.1227%" height="15" fill="rgb(224,93,4)" fg:x="774" fg:w="1"/><text x="95.2193%" y="1471.50"></text></g><g><title>blockstack_lib::vm::functions::special_let::{{closure}} (1 samples, 0.12%)</title><rect x="94.9693%" y="1445" width="0.1227%" height="15" fill="rgb(208,81,34)" fg:x="774" fg:w="1"/><text x="95.2193%" y="1455.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="94.9693%" y="1429" width="0.1227%" height="15" fill="rgb(233,92,54)" fg:x="774" fg:w="1"/><text x="95.2193%" y="1439.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="94.9693%" y="1413" width="0.1227%" height="15" fill="rgb(237,21,14)" fg:x="774" fg:w="1"/><text x="95.2193%" y="1423.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="94.9693%" y="1397" width="0.1227%" height="15" fill="rgb(249,128,51)" fg:x="774" fg:w="1"/><text x="95.2193%" y="1407.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="94.9693%" y="1381" width="0.1227%" height="15" fill="rgb(223,129,24)" fg:x="774" fg:w="1"/><text x="95.2193%" y="1391.50"></text></g><g><title>blockstack_lib::vm::functions::tuples::tuple_cons (1 samples, 0.12%)</title><rect x="94.9693%" y="1365" width="0.1227%" height="15" fill="rgb(231,168,25)" fg:x="774" fg:w="1"/><text x="95.2193%" y="1375.50"></text></g><g><title>blockstack_lib::vm::functions::parse_eval_bindings (1 samples, 0.12%)</title><rect x="94.9693%" y="1349" width="0.1227%" height="15" fill="rgb(224,39,20)" fg:x="774" fg:w="1"/><text x="95.2193%" y="1359.50"></text></g><g><title>blockstack_lib::vm::functions::handle_binding_list (1 samples, 0.12%)</title><rect x="94.9693%" y="1333" width="0.1227%" height="15" fill="rgb(225,152,53)" fg:x="774" fg:w="1"/><text x="95.2193%" y="1343.50"></text></g><g><title>blockstack_lib::vm::functions::parse_eval_bindings::{{closure}} (1 samples, 0.12%)</title><rect x="94.9693%" y="1317" width="0.1227%" height="15" fill="rgb(252,17,24)" fg:x="774" fg:w="1"/><text x="95.2193%" y="1327.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="94.9693%" y="1301" width="0.1227%" height="15" fill="rgb(250,114,30)" fg:x="774" fg:w="1"/><text x="95.2193%" y="1311.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="94.9693%" y="1285" width="0.1227%" height="15" fill="rgb(229,5,4)" fg:x="774" fg:w="1"/><text x="95.2193%" y="1295.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="94.9693%" y="1269" width="0.1227%" height="15" fill="rgb(225,176,49)" fg:x="774" fg:w="1"/><text x="95.2193%" y="1279.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="94.9693%" y="1253" width="0.1227%" height="15" fill="rgb(224,221,49)" fg:x="774" fg:w="1"/><text x="95.2193%" y="1263.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="94.9693%" y="1237" width="0.1227%" height="15" fill="rgb(253,169,27)" fg:x="774" fg:w="1"/><text x="95.2193%" y="1247.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="94.9693%" y="1221" width="0.1227%" height="15" fill="rgb(211,206,16)" fg:x="774" fg:w="1"/><text x="95.2193%" y="1231.50"></text></g><g><title>blockstack_lib::vm::functions::sequences::special_as_max_len (1 samples, 0.12%)</title><rect x="94.9693%" y="1205" width="0.1227%" height="15" fill="rgb(244,87,35)" fg:x="774" fg:w="1"/><text x="95.2193%" y="1215.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="94.9693%" y="1189" width="0.1227%" height="15" fill="rgb(246,28,10)" fg:x="774" fg:w="1"/><text x="95.2193%" y="1199.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="94.9693%" y="1173" width="0.1227%" height="15" fill="rgb(229,12,44)" fg:x="774" fg:w="1"/><text x="95.2193%" y="1183.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="94.9693%" y="1157" width="0.1227%" height="15" fill="rgb(210,145,37)" fg:x="774" fg:w="1"/><text x="95.2193%" y="1167.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="94.9693%" y="1141" width="0.1227%" height="15" fill="rgb(227,112,52)" fg:x="774" fg:w="1"/><text x="95.2193%" y="1151.50"></text></g><g><title>blockstack_lib::vm::functions::sequences::special_concat (1 samples, 0.12%)</title><rect x="94.9693%" y="1125" width="0.1227%" height="15" fill="rgb(238,155,34)" fg:x="774" fg:w="1"/><text x="95.2193%" y="1135.50"></text></g><g><title>blockstack_lib::vm::functions::sequences::special_concat_v205 (1 samples, 0.12%)</title><rect x="94.9693%" y="1109" width="0.1227%" height="15" fill="rgb(239,226,36)" fg:x="774" fg:w="1"/><text x="95.2193%" y="1119.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="94.9693%" y="1093" width="0.1227%" height="15" fill="rgb(230,16,23)" fg:x="774" fg:w="1"/><text x="95.2193%" y="1103.50"></text></g><g><title>blockstack_lib::vm::lookup_variable (1 samples, 0.12%)</title><rect x="94.9693%" y="1077" width="0.1227%" height="15" fill="rgb(236,171,36)" fg:x="774" fg:w="1"/><text x="95.2193%" y="1087.50"></text></g><g><title>blockstack_lib::vm::costs::runtime_cost (1 samples, 0.12%)</title><rect x="94.9693%" y="1061" width="0.1227%" height="15" fill="rgb(221,22,14)" fg:x="774" fg:w="1"/><text x="95.2193%" y="1071.50"></text></g><g><title>&lt;blockstack_lib::vm::contexts::Environment as blockstack_lib::vm::costs::CostTracker&gt;::compute_cost (1 samples, 0.12%)</title><rect x="94.9693%" y="1045" width="0.1227%" height="15" fill="rgb(242,43,11)" fg:x="774" fg:w="1"/><text x="95.2193%" y="1055.50"></text></g><g><title>&lt;blockstack_lib::vm::costs::LimitedCostTracker as blockstack_lib::vm::costs::CostTracker&gt;::compute_cost (1 samples, 0.12%)</title><rect x="94.9693%" y="1029" width="0.1227%" height="15" fill="rgb(232,69,23)" fg:x="774" fg:w="1"/><text x="95.2193%" y="1039.50"></text></g><g><title>blockstack_lib::vm::costs::compute_cost (1 samples, 0.12%)</title><rect x="94.9693%" y="1013" width="0.1227%" height="15" fill="rgb(216,180,54)" fg:x="774" fg:w="1"/><text x="95.2193%" y="1023.50"></text></g><g><title>blockstack_lib::vm::eval_all (1 samples, 0.12%)</title><rect x="94.9693%" y="997" width="0.1227%" height="15" fill="rgb(216,5,24)" fg:x="774" fg:w="1"/><text x="95.2193%" y="1007.50"></text></g><g><title>blockstack_lib::vm::eval_all::{{closure}} (1 samples, 0.12%)</title><rect x="94.9693%" y="981" width="0.1227%" height="15" fill="rgb(225,89,9)" fg:x="774" fg:w="1"/><text x="95.2193%" y="991.50"></text></g><g><title>blockstack_lib::vm::contexts::GlobalContext::execute (1 samples, 0.12%)</title><rect x="94.9693%" y="965" width="0.1227%" height="15" fill="rgb(243,75,33)" fg:x="774" fg:w="1"/><text x="95.2193%" y="975.50"></text></g><g><title>blockstack_lib::vm::contexts::GlobalContext::commit (1 samples, 0.12%)</title><rect x="94.9693%" y="949" width="0.1227%" height="15" fill="rgb(247,141,45)" fg:x="774" fg:w="1"/><text x="95.2193%" y="959.50"></text></g><g><title>blockstack_lib::util::macros::is_trace (1 samples, 0.12%)</title><rect x="94.9693%" y="933" width="0.1227%" height="15" fill="rgb(232,177,36)" fg:x="774" fg:w="1"/><text x="95.2193%" y="943.50"></text></g><g><title>std::env::var (1 samples, 0.12%)</title><rect x="94.9693%" y="917" width="0.1227%" height="15" fill="rgb(219,125,36)" fg:x="774" fg:w="1"/><text x="95.2193%" y="927.50"></text></g><g><title>std::env::_var (1 samples, 0.12%)</title><rect x="94.9693%" y="901" width="0.1227%" height="15" fill="rgb(227,94,9)" fg:x="774" fg:w="1"/><text x="95.2193%" y="911.50"></text></g><g><title>std::env::var_os (1 samples, 0.12%)</title><rect x="94.9693%" y="885" width="0.1227%" height="15" fill="rgb(240,34,52)" fg:x="774" fg:w="1"/><text x="95.2193%" y="895.50"></text></g><g><title>std::env::_var_os (1 samples, 0.12%)</title><rect x="94.9693%" y="869" width="0.1227%" height="15" fill="rgb(216,45,12)" fg:x="774" fg:w="1"/><text x="95.2193%" y="879.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.12%)</title><rect x="94.9693%" y="853" width="0.1227%" height="15" fill="rgb(246,21,19)" fg:x="774" fg:w="1"/><text x="95.2193%" y="863.50"></text></g><g><title>getenv (1 samples, 0.12%)</title><rect x="94.9693%" y="837" width="0.1227%" height="15" fill="rgb(213,98,42)" fg:x="774" fg:w="1"/><text x="95.2193%" y="847.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_function_as_transaction (1 samples, 0.12%)</title><rect x="95.0920%" y="1541" width="0.1227%" height="15" fill="rgb(250,136,47)" fg:x="775" fg:w="1"/><text x="95.3420%" y="1551.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::execute_apply (1 samples, 0.12%)</title><rect x="95.0920%" y="1525" width="0.1227%" height="15" fill="rgb(251,124,27)" fg:x="775" fg:w="1"/><text x="95.3420%" y="1535.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="95.0920%" y="1509" width="0.1227%" height="15" fill="rgb(229,180,14)" fg:x="775" fg:w="1"/><text x="95.3420%" y="1519.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="95.0920%" y="1493" width="0.1227%" height="15" fill="rgb(245,216,25)" fg:x="775" fg:w="1"/><text x="95.3420%" y="1503.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="95.0920%" y="1477" width="0.1227%" height="15" fill="rgb(251,43,5)" fg:x="775" fg:w="1"/><text x="95.3420%" y="1487.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="95.0920%" y="1461" width="0.1227%" height="15" fill="rgb(250,128,24)" fg:x="775" fg:w="1"/><text x="95.3420%" y="1471.50"></text></g><g><title>blockstack_lib::vm::functions::special_let (1 samples, 0.12%)</title><rect x="95.0920%" y="1445" width="0.1227%" height="15" fill="rgb(217,117,27)" fg:x="775" fg:w="1"/><text x="95.3420%" y="1455.50"></text></g><g><title>blockstack_lib::vm::functions::special_let::{{closure}} (1 samples, 0.12%)</title><rect x="95.0920%" y="1429" width="0.1227%" height="15" fill="rgb(245,147,4)" fg:x="775" fg:w="1"/><text x="95.3420%" y="1439.50"></text></g><g><title>blockstack_lib::vm::functions::handle_binding_list (1 samples, 0.12%)</title><rect x="95.0920%" y="1413" width="0.1227%" height="15" fill="rgb(242,201,35)" fg:x="775" fg:w="1"/><text x="95.3420%" y="1423.50"></text></g><g><title>blockstack_lib::vm::functions::special_let::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="95.0920%" y="1397" width="0.1227%" height="15" fill="rgb(218,181,1)" fg:x="775" fg:w="1"/><text x="95.3420%" y="1407.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="95.0920%" y="1381" width="0.1227%" height="15" fill="rgb(222,6,29)" fg:x="775" fg:w="1"/><text x="95.3420%" y="1391.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="95.0920%" y="1365" width="0.1227%" height="15" fill="rgb(208,186,3)" fg:x="775" fg:w="1"/><text x="95.3420%" y="1375.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="95.0920%" y="1349" width="0.1227%" height="15" fill="rgb(216,36,26)" fg:x="775" fg:w="1"/><text x="95.3420%" y="1359.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="95.0920%" y="1333" width="0.1227%" height="15" fill="rgb(248,201,23)" fg:x="775" fg:w="1"/><text x="95.3420%" y="1343.50"></text></g><g><title>blockstack_lib::vm::functions::database::special_fetch_variable (1 samples, 0.12%)</title><rect x="95.0920%" y="1317" width="0.1227%" height="15" fill="rgb(251,170,31)" fg:x="775" fg:w="1"/><text x="95.3420%" y="1327.50"></text></g><g><title>blockstack_lib::vm::functions::database::special_fetch_variable_v205 (1 samples, 0.12%)</title><rect x="95.0920%" y="1301" width="0.1227%" height="15" fill="rgb(207,110,25)" fg:x="775" fg:w="1"/><text x="95.3420%" y="1311.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::lookup_variable_with_size (1 samples, 0.12%)</title><rect x="95.0920%" y="1285" width="0.1227%" height="15" fill="rgb(250,54,15)" fg:x="775" fg:w="1"/><text x="95.3420%" y="1295.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get_value (1 samples, 0.12%)</title><rect x="95.0920%" y="1269" width="0.1227%" height="15" fill="rgb(227,68,33)" fg:x="775" fg:w="1"/><text x="95.3420%" y="1279.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get_value (1 samples, 0.12%)</title><rect x="95.0920%" y="1253" width="0.1227%" height="15" fill="rgb(238,34,41)" fg:x="775" fg:w="1"/><text x="95.3420%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.12%)</title><rect x="95.0920%" y="1237" width="0.1227%" height="15" fill="rgb(220,11,15)" fg:x="775" fg:w="1"/><text x="95.3420%" y="1247.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get_value::{{closure}} (1 samples, 0.12%)</title><rect x="95.0920%" y="1221" width="0.1227%" height="15" fill="rgb(246,111,35)" fg:x="775" fg:w="1"/><text x="95.3420%" y="1231.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::get (1 samples, 0.12%)</title><rect x="95.0920%" y="1205" width="0.1227%" height="15" fill="rgb(209,88,53)" fg:x="775" fg:w="1"/><text x="95.3420%" y="1215.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get (1 samples, 0.12%)</title><rect x="95.0920%" y="1189" width="0.1227%" height="15" fill="rgb(231,185,47)" fg:x="775" fg:w="1"/><text x="95.3420%" y="1199.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt; as blockstack_lib::chainstate::stacks::index::marf::MarfConnection&lt;T&gt;&gt;::with_conn (1 samples, 0.12%)</title><rect x="95.0920%" y="1173" width="0.1227%" height="15" fill="rgb(233,154,1)" fg:x="775" fg:w="1"/><text x="95.3420%" y="1183.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get::{{closure}} (1 samples, 0.12%)</title><rect x="95.0920%" y="1157" width="0.1227%" height="15" fill="rgb(225,15,46)" fg:x="775" fg:w="1"/><text x="95.3420%" y="1167.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_by_key (1 samples, 0.12%)</title><rect x="95.0920%" y="1141" width="0.1227%" height="15" fill="rgb(211,135,41)" fg:x="775" fg:w="1"/><text x="95.3420%" y="1151.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_path (1 samples, 0.12%)</title><rect x="95.0920%" y="1125" width="0.1227%" height="15" fill="rgb(208,54,0)" fg:x="775" fg:w="1"/><text x="95.3420%" y="1135.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk (1 samples, 0.12%)</title><rect x="95.0920%" y="1109" width="0.1227%" height="15" fill="rgb(244,136,14)" fg:x="775" fg:w="1"/><text x="95.3420%" y="1119.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_backptr (1 samples, 0.12%)</title><rect x="95.0920%" y="1093" width="0.1227%" height="15" fill="rgb(241,56,14)" fg:x="775" fg:w="1"/><text x="95.3420%" y="1103.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_backptr (1 samples, 0.12%)</title><rect x="95.0920%" y="1077" width="0.1227%" height="15" fill="rgb(205,80,24)" fg:x="775" fg:w="1"/><text x="95.3420%" y="1087.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (1 samples, 0.12%)</title><rect x="95.0920%" y="1061" width="0.1227%" height="15" fill="rgb(220,57,4)" fg:x="775" fg:w="1"/><text x="95.3420%" y="1071.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (1 samples, 0.12%)</title><rect x="95.0920%" y="1045" width="0.1227%" height="15" fill="rgb(226,193,50)" fg:x="775" fg:w="1"/><text x="95.3420%" y="1055.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (1 samples, 0.12%)</title><rect x="95.0920%" y="1029" width="0.1227%" height="15" fill="rgb(231,168,22)" fg:x="775" fg:w="1"/><text x="95.3420%" y="1039.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (1 samples, 0.12%)</title><rect x="95.0920%" y="1013" width="0.1227%" height="15" fill="rgb(254,215,14)" fg:x="775" fg:w="1"/><text x="95.3420%" y="1023.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (1 samples, 0.12%)</title><rect x="95.0920%" y="997" width="0.1227%" height="15" fill="rgb(211,115,16)" fg:x="775" fg:w="1"/><text x="95.3420%" y="1007.50"></text></g><g><title>std::io::Read::read_exact (1 samples, 0.12%)</title><rect x="95.0920%" y="981" width="0.1227%" height="15" fill="rgb(236,210,16)" fg:x="775" fg:w="1"/><text x="95.3420%" y="991.50"></text></g><g><title>std::io::default_read_exact (1 samples, 0.12%)</title><rect x="95.0920%" y="965" width="0.1227%" height="15" fill="rgb(221,94,12)" fg:x="775" fg:w="1"/><text x="95.3420%" y="975.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="95.0920%" y="949" width="0.1227%" height="15" fill="rgb(235,218,49)" fg:x="775" fg:w="1"/><text x="95.3420%" y="959.50"></text></g><g><title>sqlite3_blob_read (1 samples, 0.12%)</title><rect x="95.0920%" y="933" width="0.1227%" height="15" fill="rgb(217,114,14)" fg:x="775" fg:w="1"/><text x="95.3420%" y="943.50"></text></g><g><title>blobReadWrite (1 samples, 0.12%)</title><rect x="95.0920%" y="917" width="0.1227%" height="15" fill="rgb(216,145,22)" fg:x="775" fg:w="1"/><text x="95.3420%" y="927.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="95.0920%" y="901" width="0.1227%" height="15" fill="rgb(217,112,39)" fg:x="775" fg:w="1"/><text x="95.3420%" y="911.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="95.0920%" y="885" width="0.1227%" height="15" fill="rgb(225,85,32)" fg:x="775" fg:w="1"/><text x="95.3420%" y="895.50"></text></g><g><title>accessPayload (1 samples, 0.12%)</title><rect x="95.0920%" y="869" width="0.1227%" height="15" fill="rgb(245,209,47)" fg:x="775" fg:w="1"/><text x="95.3420%" y="879.50"></text></g><g><title>getOverflowPage (1 samples, 0.12%)</title><rect x="95.0920%" y="853" width="0.1227%" height="15" fill="rgb(218,220,15)" fg:x="775" fg:w="1"/><text x="95.3420%" y="863.50"></text></g><g><title>btreeGetPage (1 samples, 0.12%)</title><rect x="95.0920%" y="837" width="0.1227%" height="15" fill="rgb(222,202,31)" fg:x="775" fg:w="1"/><text x="95.3420%" y="847.50"></text></g><g><title>sqlite3PagerGet (1 samples, 0.12%)</title><rect x="95.0920%" y="821" width="0.1227%" height="15" fill="rgb(243,203,4)" fg:x="775" fg:w="1"/><text x="95.3420%" y="831.50"></text></g><g><title>getPageMMap (1 samples, 0.12%)</title><rect x="95.0920%" y="805" width="0.1227%" height="15" fill="rgb(237,92,17)" fg:x="775" fg:w="1"/><text x="95.3420%" y="815.50"></text></g><g><title>getPageNormal (1 samples, 0.12%)</title><rect x="95.0920%" y="789" width="0.1227%" height="15" fill="rgb(231,119,7)" fg:x="775" fg:w="1"/><text x="95.3420%" y="799.50"></text></g><g><title>readDbPage (1 samples, 0.12%)</title><rect x="95.0920%" y="773" width="0.1227%" height="15" fill="rgb(237,82,41)" fg:x="775" fg:w="1"/><text x="95.3420%" y="783.50"></text></g><g><title>sqlite3OsRead (1 samples, 0.12%)</title><rect x="95.0920%" y="757" width="0.1227%" height="15" fill="rgb(226,81,48)" fg:x="775" fg:w="1"/><text x="95.3420%" y="767.50"></text></g><g><title>unixRead (1 samples, 0.12%)</title><rect x="95.0920%" y="741" width="0.1227%" height="15" fill="rgb(234,70,51)" fg:x="775" fg:w="1"/><text x="95.3420%" y="751.50"></text></g><g><title>seekAndRead (1 samples, 0.12%)</title><rect x="95.0920%" y="725" width="0.1227%" height="15" fill="rgb(251,86,4)" fg:x="775" fg:w="1"/><text x="95.3420%" y="735.50"></text></g><g><title>__lseek64 (1 samples, 0.12%)</title><rect x="95.0920%" y="709" width="0.1227%" height="15" fill="rgb(244,144,28)" fg:x="775" fg:w="1"/><text x="95.3420%" y="719.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::execute_apply (1 samples, 0.12%)</title><rect x="95.2147%" y="1493" width="0.1227%" height="15" fill="rgb(232,161,39)" fg:x="776" fg:w="1"/><text x="95.4647%" y="1503.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="95.2147%" y="1477" width="0.1227%" height="15" fill="rgb(247,34,51)" fg:x="776" fg:w="1"/><text x="95.4647%" y="1487.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="95.2147%" y="1461" width="0.1227%" height="15" fill="rgb(225,132,2)" fg:x="776" fg:w="1"/><text x="95.4647%" y="1471.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="95.2147%" y="1445" width="0.1227%" height="15" fill="rgb(209,159,44)" fg:x="776" fg:w="1"/><text x="95.4647%" y="1455.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="95.2147%" y="1429" width="0.1227%" height="15" fill="rgb(251,214,1)" fg:x="776" fg:w="1"/><text x="95.4647%" y="1439.50"></text></g><g><title>blockstack_lib::vm::functions::special_let (1 samples, 0.12%)</title><rect x="95.2147%" y="1413" width="0.1227%" height="15" fill="rgb(247,84,47)" fg:x="776" fg:w="1"/><text x="95.4647%" y="1423.50"></text></g><g><title>blockstack_lib::vm::functions::special_let::{{closure}} (1 samples, 0.12%)</title><rect x="95.2147%" y="1397" width="0.1227%" height="15" fill="rgb(240,111,43)" fg:x="776" fg:w="1"/><text x="95.4647%" y="1407.50"></text></g><g><title>blockstack_lib::vm::functions::handle_binding_list (1 samples, 0.12%)</title><rect x="95.2147%" y="1381" width="0.1227%" height="15" fill="rgb(215,214,35)" fg:x="776" fg:w="1"/><text x="95.4647%" y="1391.50"></text></g><g><title>blockstack_lib::vm::functions::special_let::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="95.2147%" y="1365" width="0.1227%" height="15" fill="rgb(248,207,23)" fg:x="776" fg:w="1"/><text x="95.4647%" y="1375.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="95.2147%" y="1349" width="0.1227%" height="15" fill="rgb(214,186,4)" fg:x="776" fg:w="1"/><text x="95.4647%" y="1359.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="95.2147%" y="1333" width="0.1227%" height="15" fill="rgb(220,133,22)" fg:x="776" fg:w="1"/><text x="95.4647%" y="1343.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="95.2147%" y="1317" width="0.1227%" height="15" fill="rgb(239,134,19)" fg:x="776" fg:w="1"/><text x="95.4647%" y="1327.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="95.2147%" y="1301" width="0.1227%" height="15" fill="rgb(250,140,9)" fg:x="776" fg:w="1"/><text x="95.4647%" y="1311.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="95.2147%" y="1285" width="0.1227%" height="15" fill="rgb(225,59,14)" fg:x="776" fg:w="1"/><text x="95.4647%" y="1295.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="95.2147%" y="1269" width="0.1227%" height="15" fill="rgb(214,152,51)" fg:x="776" fg:w="1"/><text x="95.4647%" y="1279.50"></text></g><g><title>blockstack_lib::vm::functions::database::special_contract_call (1 samples, 0.12%)</title><rect x="95.2147%" y="1253" width="0.1227%" height="15" fill="rgb(251,227,43)" fg:x="776" fg:w="1"/><text x="95.4647%" y="1263.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get_contract (1 samples, 0.12%)</title><rect x="95.2147%" y="1237" width="0.1227%" height="15" fill="rgb(241,96,17)" fg:x="776" fg:w="1"/><text x="95.4647%" y="1247.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::fetch_metadata (1 samples, 0.12%)</title><rect x="95.2147%" y="1221" width="0.1227%" height="15" fill="rgb(234,198,43)" fg:x="776" fg:w="1"/><text x="95.4647%" y="1231.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get_metadata (1 samples, 0.12%)</title><rect x="95.2147%" y="1205" width="0.1227%" height="15" fill="rgb(220,108,29)" fg:x="776" fg:w="1"/><text x="95.4647%" y="1215.50"></text></g><g><title>blockstack_lib::vm::database::clarity_store::ClarityBackingStore::get_metadata (1 samples, 0.12%)</title><rect x="95.2147%" y="1189" width="0.1227%" height="15" fill="rgb(226,163,33)" fg:x="776" fg:w="1"/><text x="95.4647%" y="1199.50"></text></g><g><title>blockstack_lib::vm::database::clarity_store::ClarityBackingStore::get_contract_hash (1 samples, 0.12%)</title><rect x="95.2147%" y="1173" width="0.1227%" height="15" fill="rgb(205,194,45)" fg:x="776" fg:w="1"/><text x="95.4647%" y="1183.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::get (1 samples, 0.12%)</title><rect x="95.2147%" y="1157" width="0.1227%" height="15" fill="rgb(206,143,44)" fg:x="776" fg:w="1"/><text x="95.4647%" y="1167.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get (1 samples, 0.12%)</title><rect x="95.2147%" y="1141" width="0.1227%" height="15" fill="rgb(236,136,36)" fg:x="776" fg:w="1"/><text x="95.4647%" y="1151.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt; as blockstack_lib::chainstate::stacks::index::marf::MarfConnection&lt;T&gt;&gt;::with_conn (1 samples, 0.12%)</title><rect x="95.2147%" y="1125" width="0.1227%" height="15" fill="rgb(249,172,42)" fg:x="776" fg:w="1"/><text x="95.4647%" y="1135.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get::{{closure}} (1 samples, 0.12%)</title><rect x="95.2147%" y="1109" width="0.1227%" height="15" fill="rgb(216,139,23)" fg:x="776" fg:w="1"/><text x="95.4647%" y="1119.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_by_key (1 samples, 0.12%)</title><rect x="95.2147%" y="1093" width="0.1227%" height="15" fill="rgb(207,166,20)" fg:x="776" fg:w="1"/><text x="95.4647%" y="1103.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_path (1 samples, 0.12%)</title><rect x="95.2147%" y="1077" width="0.1227%" height="15" fill="rgb(210,209,22)" fg:x="776" fg:w="1"/><text x="95.4647%" y="1087.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk (1 samples, 0.12%)</title><rect x="95.2147%" y="1061" width="0.1227%" height="15" fill="rgb(232,118,20)" fg:x="776" fg:w="1"/><text x="95.4647%" y="1071.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_backptr (1 samples, 0.12%)</title><rect x="95.2147%" y="1045" width="0.1227%" height="15" fill="rgb(238,113,42)" fg:x="776" fg:w="1"/><text x="95.4647%" y="1055.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_backptr (1 samples, 0.12%)</title><rect x="95.2147%" y="1029" width="0.1227%" height="15" fill="rgb(231,42,5)" fg:x="776" fg:w="1"/><text x="95.4647%" y="1039.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (1 samples, 0.12%)</title><rect x="95.2147%" y="1013" width="0.1227%" height="15" fill="rgb(243,166,24)" fg:x="776" fg:w="1"/><text x="95.4647%" y="1023.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (1 samples, 0.12%)</title><rect x="95.2147%" y="997" width="0.1227%" height="15" fill="rgb(237,226,12)" fg:x="776" fg:w="1"/><text x="95.4647%" y="1007.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (1 samples, 0.12%)</title><rect x="95.2147%" y="981" width="0.1227%" height="15" fill="rgb(229,133,24)" fg:x="776" fg:w="1"/><text x="95.4647%" y="991.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (1 samples, 0.12%)</title><rect x="95.2147%" y="965" width="0.1227%" height="15" fill="rgb(238,33,43)" fg:x="776" fg:w="1"/><text x="95.4647%" y="975.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (1 samples, 0.12%)</title><rect x="95.2147%" y="949" width="0.1227%" height="15" fill="rgb(227,59,38)" fg:x="776" fg:w="1"/><text x="95.4647%" y="959.50"></text></g><g><title>std::io::Read::read_exact (1 samples, 0.12%)</title><rect x="95.2147%" y="933" width="0.1227%" height="15" fill="rgb(230,97,0)" fg:x="776" fg:w="1"/><text x="95.4647%" y="943.50"></text></g><g><title>std::io::default_read_exact (1 samples, 0.12%)</title><rect x="95.2147%" y="917" width="0.1227%" height="15" fill="rgb(250,173,50)" fg:x="776" fg:w="1"/><text x="95.4647%" y="927.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="95.2147%" y="901" width="0.1227%" height="15" fill="rgb(240,15,50)" fg:x="776" fg:w="1"/><text x="95.4647%" y="911.50"></text></g><g><title>sqlite3_blob_read (1 samples, 0.12%)</title><rect x="95.2147%" y="885" width="0.1227%" height="15" fill="rgb(221,93,22)" fg:x="776" fg:w="1"/><text x="95.4647%" y="895.50"></text></g><g><title>blobReadWrite (1 samples, 0.12%)</title><rect x="95.2147%" y="869" width="0.1227%" height="15" fill="rgb(245,180,53)" fg:x="776" fg:w="1"/><text x="95.4647%" y="879.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="95.2147%" y="853" width="0.1227%" height="15" fill="rgb(231,88,51)" fg:x="776" fg:w="1"/><text x="95.4647%" y="863.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="95.2147%" y="837" width="0.1227%" height="15" fill="rgb(240,58,21)" fg:x="776" fg:w="1"/><text x="95.4647%" y="847.50"></text></g><g><title>accessPayload (1 samples, 0.12%)</title><rect x="95.2147%" y="821" width="0.1227%" height="15" fill="rgb(237,21,10)" fg:x="776" fg:w="1"/><text x="95.4647%" y="831.50"></text></g><g><title>getOverflowPage (1 samples, 0.12%)</title><rect x="95.2147%" y="805" width="0.1227%" height="15" fill="rgb(218,43,11)" fg:x="776" fg:w="1"/><text x="95.4647%" y="815.50"></text></g><g><title>sqlite3Get4byte (1 samples, 0.12%)</title><rect x="95.2147%" y="789" width="0.1227%" height="15" fill="rgb(218,221,29)" fg:x="776" fg:w="1"/><text x="95.4647%" y="799.50"></text></g><g><title>blockstack_lib::vm::functions::database::special_fetch_entry (1 samples, 0.12%)</title><rect x="95.3374%" y="1365" width="0.1227%" height="15" fill="rgb(214,118,42)" fg:x="777" fg:w="1"/><text x="95.5874%" y="1375.50"></text></g><g><title>blockstack_lib::vm::functions::database::special_fetch_entry_v205 (1 samples, 0.12%)</title><rect x="95.3374%" y="1349" width="0.1227%" height="15" fill="rgb(251,200,26)" fg:x="777" fg:w="1"/><text x="95.5874%" y="1359.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::fetch_entry_with_size (1 samples, 0.12%)</title><rect x="95.3374%" y="1333" width="0.1227%" height="15" fill="rgb(237,101,39)" fg:x="777" fg:w="1"/><text x="95.5874%" y="1343.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get_value (1 samples, 0.12%)</title><rect x="95.3374%" y="1317" width="0.1227%" height="15" fill="rgb(251,117,11)" fg:x="777" fg:w="1"/><text x="95.5874%" y="1327.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get_value (1 samples, 0.12%)</title><rect x="95.3374%" y="1301" width="0.1227%" height="15" fill="rgb(216,223,23)" fg:x="777" fg:w="1"/><text x="95.5874%" y="1311.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.12%)</title><rect x="95.3374%" y="1285" width="0.1227%" height="15" fill="rgb(251,54,12)" fg:x="777" fg:w="1"/><text x="95.5874%" y="1295.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get_value::{{closure}} (1 samples, 0.12%)</title><rect x="95.3374%" y="1269" width="0.1227%" height="15" fill="rgb(254,176,54)" fg:x="777" fg:w="1"/><text x="95.5874%" y="1279.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::get (1 samples, 0.12%)</title><rect x="95.3374%" y="1253" width="0.1227%" height="15" fill="rgb(210,32,8)" fg:x="777" fg:w="1"/><text x="95.5874%" y="1263.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get (1 samples, 0.12%)</title><rect x="95.3374%" y="1237" width="0.1227%" height="15" fill="rgb(235,52,38)" fg:x="777" fg:w="1"/><text x="95.5874%" y="1247.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt; as blockstack_lib::chainstate::stacks::index::marf::MarfConnection&lt;T&gt;&gt;::with_conn (1 samples, 0.12%)</title><rect x="95.3374%" y="1221" width="0.1227%" height="15" fill="rgb(231,4,44)" fg:x="777" fg:w="1"/><text x="95.5874%" y="1231.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get::{{closure}} (1 samples, 0.12%)</title><rect x="95.3374%" y="1205" width="0.1227%" height="15" fill="rgb(249,2,32)" fg:x="777" fg:w="1"/><text x="95.5874%" y="1215.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_by_key (1 samples, 0.12%)</title><rect x="95.3374%" y="1189" width="0.1227%" height="15" fill="rgb(224,65,26)" fg:x="777" fg:w="1"/><text x="95.5874%" y="1199.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_path (1 samples, 0.12%)</title><rect x="95.3374%" y="1173" width="0.1227%" height="15" fill="rgb(250,73,40)" fg:x="777" fg:w="1"/><text x="95.5874%" y="1183.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk (1 samples, 0.12%)</title><rect x="95.3374%" y="1157" width="0.1227%" height="15" fill="rgb(253,177,16)" fg:x="777" fg:w="1"/><text x="95.5874%" y="1167.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_backptr (1 samples, 0.12%)</title><rect x="95.3374%" y="1141" width="0.1227%" height="15" fill="rgb(217,32,34)" fg:x="777" fg:w="1"/><text x="95.5874%" y="1151.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_backptr (1 samples, 0.12%)</title><rect x="95.3374%" y="1125" width="0.1227%" height="15" fill="rgb(212,7,10)" fg:x="777" fg:w="1"/><text x="95.5874%" y="1135.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (1 samples, 0.12%)</title><rect x="95.3374%" y="1109" width="0.1227%" height="15" fill="rgb(245,89,8)" fg:x="777" fg:w="1"/><text x="95.5874%" y="1119.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (1 samples, 0.12%)</title><rect x="95.3374%" y="1093" width="0.1227%" height="15" fill="rgb(237,16,53)" fg:x="777" fg:w="1"/><text x="95.5874%" y="1103.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (1 samples, 0.12%)</title><rect x="95.3374%" y="1077" width="0.1227%" height="15" fill="rgb(250,204,30)" fg:x="777" fg:w="1"/><text x="95.5874%" y="1087.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (1 samples, 0.12%)</title><rect x="95.3374%" y="1061" width="0.1227%" height="15" fill="rgb(208,77,27)" fg:x="777" fg:w="1"/><text x="95.5874%" y="1071.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (1 samples, 0.12%)</title><rect x="95.3374%" y="1045" width="0.1227%" height="15" fill="rgb(250,204,28)" fg:x="777" fg:w="1"/><text x="95.5874%" y="1055.50"></text></g><g><title>std::io::Read::read_exact (1 samples, 0.12%)</title><rect x="95.3374%" y="1029" width="0.1227%" height="15" fill="rgb(244,63,21)" fg:x="777" fg:w="1"/><text x="95.5874%" y="1039.50"></text></g><g><title>std::io::default_read_exact (1 samples, 0.12%)</title><rect x="95.3374%" y="1013" width="0.1227%" height="15" fill="rgb(236,85,44)" fg:x="777" fg:w="1"/><text x="95.5874%" y="1023.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="95.3374%" y="997" width="0.1227%" height="15" fill="rgb(215,98,4)" fg:x="777" fg:w="1"/><text x="95.5874%" y="1007.50"></text></g><g><title>sqlite3_blob_read (1 samples, 0.12%)</title><rect x="95.3374%" y="981" width="0.1227%" height="15" fill="rgb(235,38,11)" fg:x="777" fg:w="1"/><text x="95.5874%" y="991.50"></text></g><g><title>blobReadWrite (1 samples, 0.12%)</title><rect x="95.3374%" y="965" width="0.1227%" height="15" fill="rgb(254,186,25)" fg:x="777" fg:w="1"/><text x="95.5874%" y="975.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="95.3374%" y="949" width="0.1227%" height="15" fill="rgb(225,55,31)" fg:x="777" fg:w="1"/><text x="95.5874%" y="959.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="95.3374%" y="933" width="0.1227%" height="15" fill="rgb(211,15,21)" fg:x="777" fg:w="1"/><text x="95.5874%" y="943.50"></text></g><g><title>accessPayload (1 samples, 0.12%)</title><rect x="95.3374%" y="917" width="0.1227%" height="15" fill="rgb(215,187,41)" fg:x="777" fg:w="1"/><text x="95.5874%" y="927.50"></text></g><g><title>getOverflowPage (1 samples, 0.12%)</title><rect x="95.3374%" y="901" width="0.1227%" height="15" fill="rgb(248,69,32)" fg:x="777" fg:w="1"/><text x="95.5874%" y="911.50"></text></g><g><title>btreeGetPage (1 samples, 0.12%)</title><rect x="95.3374%" y="885" width="0.1227%" height="15" fill="rgb(252,102,52)" fg:x="777" fg:w="1"/><text x="95.5874%" y="895.50"></text></g><g><title>sqlite3PagerGet (1 samples, 0.12%)</title><rect x="95.3374%" y="869" width="0.1227%" height="15" fill="rgb(253,140,32)" fg:x="777" fg:w="1"/><text x="95.5874%" y="879.50"></text></g><g><title>getPageMMap (1 samples, 0.12%)</title><rect x="95.3374%" y="853" width="0.1227%" height="15" fill="rgb(216,56,42)" fg:x="777" fg:w="1"/><text x="95.5874%" y="863.50"></text></g><g><title>getPageNormal (1 samples, 0.12%)</title><rect x="95.3374%" y="837" width="0.1227%" height="15" fill="rgb(216,184,14)" fg:x="777" fg:w="1"/><text x="95.5874%" y="847.50"></text></g><g><title>readDbPage (1 samples, 0.12%)</title><rect x="95.3374%" y="821" width="0.1227%" height="15" fill="rgb(237,187,27)" fg:x="777" fg:w="1"/><text x="95.5874%" y="831.50"></text></g><g><title>sqlite3OsRead (1 samples, 0.12%)</title><rect x="95.3374%" y="805" width="0.1227%" height="15" fill="rgb(219,65,3)" fg:x="777" fg:w="1"/><text x="95.5874%" y="815.50"></text></g><g><title>unixRead (1 samples, 0.12%)</title><rect x="95.3374%" y="789" width="0.1227%" height="15" fill="rgb(245,83,25)" fg:x="777" fg:w="1"/><text x="95.5874%" y="799.50"></text></g><g><title>seekAndRead (1 samples, 0.12%)</title><rect x="95.3374%" y="773" width="0.1227%" height="15" fill="rgb(214,205,45)" fg:x="777" fg:w="1"/><text x="95.5874%" y="783.50"></text></g><g><title>read (1 samples, 0.12%)</title><rect x="95.3374%" y="757" width="0.1227%" height="15" fill="rgb(241,20,18)" fg:x="777" fg:w="1"/><text x="95.5874%" y="767.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::apply (3 samples, 0.37%)</title><rect x="95.2147%" y="1509" width="0.3681%" height="15" fill="rgb(232,163,23)" fg:x="776" fg:w="3"/><text x="95.4647%" y="1519.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_function_as_transaction (2 samples, 0.25%)</title><rect x="95.3374%" y="1493" width="0.2454%" height="15" fill="rgb(214,5,46)" fg:x="777" fg:w="2"/><text x="95.5874%" y="1503.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::execute_apply (2 samples, 0.25%)</title><rect x="95.3374%" y="1477" width="0.2454%" height="15" fill="rgb(229,78,17)" fg:x="777" fg:w="2"/><text x="95.5874%" y="1487.50"></text></g><g><title>blockstack_lib::vm::eval (2 samples, 0.25%)</title><rect x="95.3374%" y="1461" width="0.2454%" height="15" fill="rgb(248,89,10)" fg:x="777" fg:w="2"/><text x="95.5874%" y="1471.50"></text></g><g><title>blockstack_lib::vm::apply (2 samples, 0.25%)</title><rect x="95.3374%" y="1445" width="0.2454%" height="15" fill="rgb(248,54,15)" fg:x="777" fg:w="2"/><text x="95.5874%" y="1455.50"></text></g><g><title>blockstack_lib::vm::eval (2 samples, 0.25%)</title><rect x="95.3374%" y="1429" width="0.2454%" height="15" fill="rgb(223,116,6)" fg:x="777" fg:w="2"/><text x="95.5874%" y="1439.50"></text></g><g><title>blockstack_lib::vm::apply (2 samples, 0.25%)</title><rect x="95.3374%" y="1413" width="0.2454%" height="15" fill="rgb(205,125,38)" fg:x="777" fg:w="2"/><text x="95.5874%" y="1423.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (2 samples, 0.25%)</title><rect x="95.3374%" y="1397" width="0.2454%" height="15" fill="rgb(251,78,38)" fg:x="777" fg:w="2"/><text x="95.5874%" y="1407.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.25%)</title><rect x="95.3374%" y="1381" width="0.2454%" height="15" fill="rgb(253,78,28)" fg:x="777" fg:w="2"/><text x="95.5874%" y="1391.50"></text></g><g><title>blockstack_lib::vm::functions::special_asserts (1 samples, 0.12%)</title><rect x="95.4601%" y="1365" width="0.1227%" height="15" fill="rgb(209,120,3)" fg:x="778" fg:w="1"/><text x="95.7101%" y="1375.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="95.4601%" y="1349" width="0.1227%" height="15" fill="rgb(238,229,9)" fg:x="778" fg:w="1"/><text x="95.7101%" y="1359.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="95.4601%" y="1333" width="0.1227%" height="15" fill="rgb(253,159,18)" fg:x="778" fg:w="1"/><text x="95.7101%" y="1343.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="95.4601%" y="1317" width="0.1227%" height="15" fill="rgb(244,42,34)" fg:x="778" fg:w="1"/><text x="95.7101%" y="1327.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="95.4601%" y="1301" width="0.1227%" height="15" fill="rgb(224,8,7)" fg:x="778" fg:w="1"/><text x="95.7101%" y="1311.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="95.4601%" y="1285" width="0.1227%" height="15" fill="rgb(210,201,45)" fg:x="778" fg:w="1"/><text x="95.7101%" y="1295.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="95.4601%" y="1269" width="0.1227%" height="15" fill="rgb(252,185,21)" fg:x="778" fg:w="1"/><text x="95.7101%" y="1279.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="95.4601%" y="1253" width="0.1227%" height="15" fill="rgb(223,131,1)" fg:x="778" fg:w="1"/><text x="95.7101%" y="1263.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="95.4601%" y="1237" width="0.1227%" height="15" fill="rgb(245,141,16)" fg:x="778" fg:w="1"/><text x="95.7101%" y="1247.50"></text></g><g><title>blockstack_lib::vm::functions::database::special_contract_call (1 samples, 0.12%)</title><rect x="95.4601%" y="1221" width="0.1227%" height="15" fill="rgb(229,55,45)" fg:x="778" fg:w="1"/><text x="95.7101%" y="1231.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_contract (1 samples, 0.12%)</title><rect x="95.4601%" y="1205" width="0.1227%" height="15" fill="rgb(208,92,15)" fg:x="778" fg:w="1"/><text x="95.7101%" y="1215.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_contract::{{closure}} (1 samples, 0.12%)</title><rect x="95.4601%" y="1189" width="0.1227%" height="15" fill="rgb(234,185,47)" fg:x="778" fg:w="1"/><text x="95.7101%" y="1199.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get_contract (1 samples, 0.12%)</title><rect x="95.4601%" y="1173" width="0.1227%" height="15" fill="rgb(253,104,50)" fg:x="778" fg:w="1"/><text x="95.7101%" y="1183.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::fetch_metadata (1 samples, 0.12%)</title><rect x="95.4601%" y="1157" width="0.1227%" height="15" fill="rgb(205,70,7)" fg:x="778" fg:w="1"/><text x="95.7101%" y="1167.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get_metadata (1 samples, 0.12%)</title><rect x="95.4601%" y="1141" width="0.1227%" height="15" fill="rgb(240,178,43)" fg:x="778" fg:w="1"/><text x="95.7101%" y="1151.50"></text></g><g><title>blockstack_lib::vm::database::clarity_store::ClarityBackingStore::get_metadata (1 samples, 0.12%)</title><rect x="95.4601%" y="1125" width="0.1227%" height="15" fill="rgb(214,112,2)" fg:x="778" fg:w="1"/><text x="95.7101%" y="1135.50"></text></g><g><title>blockstack_lib::vm::database::clarity_store::ClarityBackingStore::get_contract_hash (1 samples, 0.12%)</title><rect x="95.4601%" y="1109" width="0.1227%" height="15" fill="rgb(206,46,17)" fg:x="778" fg:w="1"/><text x="95.7101%" y="1119.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::get (1 samples, 0.12%)</title><rect x="95.4601%" y="1093" width="0.1227%" height="15" fill="rgb(225,220,16)" fg:x="778" fg:w="1"/><text x="95.7101%" y="1103.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get (1 samples, 0.12%)</title><rect x="95.4601%" y="1077" width="0.1227%" height="15" fill="rgb(238,65,40)" fg:x="778" fg:w="1"/><text x="95.7101%" y="1087.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt; as blockstack_lib::chainstate::stacks::index::marf::MarfConnection&lt;T&gt;&gt;::with_conn (1 samples, 0.12%)</title><rect x="95.4601%" y="1061" width="0.1227%" height="15" fill="rgb(230,151,21)" fg:x="778" fg:w="1"/><text x="95.7101%" y="1071.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get::{{closure}} (1 samples, 0.12%)</title><rect x="95.4601%" y="1045" width="0.1227%" height="15" fill="rgb(218,58,49)" fg:x="778" fg:w="1"/><text x="95.7101%" y="1055.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_by_key (1 samples, 0.12%)</title><rect x="95.4601%" y="1029" width="0.1227%" height="15" fill="rgb(219,179,14)" fg:x="778" fg:w="1"/><text x="95.7101%" y="1039.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_path (1 samples, 0.12%)</title><rect x="95.4601%" y="1013" width="0.1227%" height="15" fill="rgb(223,72,1)" fg:x="778" fg:w="1"/><text x="95.7101%" y="1023.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk (1 samples, 0.12%)</title><rect x="95.4601%" y="997" width="0.1227%" height="15" fill="rgb(238,126,10)" fg:x="778" fg:w="1"/><text x="95.7101%" y="1007.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::read_root (1 samples, 0.12%)</title><rect x="95.4601%" y="981" width="0.1227%" height="15" fill="rgb(224,206,38)" fg:x="778" fg:w="1"/><text x="95.7101%" y="991.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (1 samples, 0.12%)</title><rect x="95.4601%" y="965" width="0.1227%" height="15" fill="rgb(212,201,54)" fg:x="778" fg:w="1"/><text x="95.7101%" y="975.50"></text></g><g><title>blockstack_lib::util::macros::is_trace (1 samples, 0.12%)</title><rect x="95.4601%" y="949" width="0.1227%" height="15" fill="rgb(218,154,48)" fg:x="778" fg:w="1"/><text x="95.7101%" y="959.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (1 samples, 0.12%)</title><rect x="95.4601%" y="933" width="0.1227%" height="15" fill="rgb(232,93,24)" fg:x="778" fg:w="1"/><text x="95.7101%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.12%)</title><rect x="95.4601%" y="917" width="0.1227%" height="15" fill="rgb(245,30,21)" fg:x="778" fg:w="1"/><text x="95.7101%" y="927.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.12%)</title><rect x="95.4601%" y="901" width="0.1227%" height="15" fill="rgb(242,148,29)" fg:x="778" fg:w="1"/><text x="95.7101%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.12%)</title><rect x="95.4601%" y="885" width="0.1227%" height="15" fill="rgb(244,153,54)" fg:x="778" fg:w="1"/><text x="95.7101%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.12%)</title><rect x="95.4601%" y="869" width="0.1227%" height="15" fill="rgb(252,87,22)" fg:x="778" fg:w="1"/><text x="95.7101%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.12%)</title><rect x="95.4601%" y="853" width="0.1227%" height="15" fill="rgb(210,51,29)" fg:x="778" fg:w="1"/><text x="95.7101%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.12%)</title><rect x="95.4601%" y="837" width="0.1227%" height="15" fill="rgb(242,136,47)" fg:x="778" fg:w="1"/><text x="95.7101%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.12%)</title><rect x="95.4601%" y="821" width="0.1227%" height="15" fill="rgb(238,68,4)" fg:x="778" fg:w="1"/><text x="95.7101%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.12%)</title><rect x="95.4601%" y="805" width="0.1227%" height="15" fill="rgb(242,161,30)" fg:x="778" fg:w="1"/><text x="95.7101%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.12%)</title><rect x="95.4601%" y="789" width="0.1227%" height="15" fill="rgb(218,58,44)" fg:x="778" fg:w="1"/><text x="95.7101%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.12%)</title><rect x="95.4601%" y="773" width="0.1227%" height="15" fill="rgb(252,125,32)" fg:x="778" fg:w="1"/><text x="95.7101%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.12%)</title><rect x="95.4601%" y="757" width="0.1227%" height="15" fill="rgb(219,178,0)" fg:x="778" fg:w="1"/><text x="95.7101%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.12%)</title><rect x="95.4601%" y="741" width="0.1227%" height="15" fill="rgb(213,152,7)" fg:x="778" fg:w="1"/><text x="95.7101%" y="751.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.12%)</title><rect x="95.4601%" y="725" width="0.1227%" height="15" fill="rgb(249,109,34)" fg:x="778" fg:w="1"/><text x="95.7101%" y="735.50"></text></g><g><title>malloc (1 samples, 0.12%)</title><rect x="95.4601%" y="709" width="0.1227%" height="15" fill="rgb(232,96,21)" fg:x="778" fg:w="1"/><text x="95.7101%" y="719.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::apply (1 samples, 0.12%)</title><rect x="95.5828%" y="1477" width="0.1227%" height="15" fill="rgb(228,27,39)" fg:x="779" fg:w="1"/><text x="95.8328%" y="1487.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_function_as_transaction (1 samples, 0.12%)</title><rect x="95.5828%" y="1461" width="0.1227%" height="15" fill="rgb(211,182,52)" fg:x="779" fg:w="1"/><text x="95.8328%" y="1471.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::execute_apply (1 samples, 0.12%)</title><rect x="95.5828%" y="1445" width="0.1227%" height="15" fill="rgb(234,178,38)" fg:x="779" fg:w="1"/><text x="95.8328%" y="1455.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="95.5828%" y="1429" width="0.1227%" height="15" fill="rgb(221,111,3)" fg:x="779" fg:w="1"/><text x="95.8328%" y="1439.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="95.5828%" y="1413" width="0.1227%" height="15" fill="rgb(228,175,21)" fg:x="779" fg:w="1"/><text x="95.8328%" y="1423.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="95.5828%" y="1397" width="0.1227%" height="15" fill="rgb(228,174,43)" fg:x="779" fg:w="1"/><text x="95.8328%" y="1407.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="95.5828%" y="1381" width="0.1227%" height="15" fill="rgb(211,191,0)" fg:x="779" fg:w="1"/><text x="95.8328%" y="1391.50"></text></g><g><title>blockstack_lib::vm::functions::database::special_fetch_entry (1 samples, 0.12%)</title><rect x="95.5828%" y="1365" width="0.1227%" height="15" fill="rgb(253,117,3)" fg:x="779" fg:w="1"/><text x="95.8328%" y="1375.50"></text></g><g><title>blockstack_lib::vm::functions::database::special_fetch_entry_v205 (1 samples, 0.12%)</title><rect x="95.5828%" y="1349" width="0.1227%" height="15" fill="rgb(241,127,19)" fg:x="779" fg:w="1"/><text x="95.8328%" y="1359.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::fetch_entry_with_size (1 samples, 0.12%)</title><rect x="95.5828%" y="1333" width="0.1227%" height="15" fill="rgb(218,103,12)" fg:x="779" fg:w="1"/><text x="95.8328%" y="1343.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get_value (1 samples, 0.12%)</title><rect x="95.5828%" y="1317" width="0.1227%" height="15" fill="rgb(236,214,43)" fg:x="779" fg:w="1"/><text x="95.8328%" y="1327.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get_value (1 samples, 0.12%)</title><rect x="95.5828%" y="1301" width="0.1227%" height="15" fill="rgb(244,144,19)" fg:x="779" fg:w="1"/><text x="95.8328%" y="1311.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.12%)</title><rect x="95.5828%" y="1285" width="0.1227%" height="15" fill="rgb(246,188,10)" fg:x="779" fg:w="1"/><text x="95.8328%" y="1295.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get_value::{{closure}} (1 samples, 0.12%)</title><rect x="95.5828%" y="1269" width="0.1227%" height="15" fill="rgb(212,193,33)" fg:x="779" fg:w="1"/><text x="95.8328%" y="1279.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::get (1 samples, 0.12%)</title><rect x="95.5828%" y="1253" width="0.1227%" height="15" fill="rgb(241,51,29)" fg:x="779" fg:w="1"/><text x="95.8328%" y="1263.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get (1 samples, 0.12%)</title><rect x="95.5828%" y="1237" width="0.1227%" height="15" fill="rgb(211,58,19)" fg:x="779" fg:w="1"/><text x="95.8328%" y="1247.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt; as blockstack_lib::chainstate::stacks::index::marf::MarfConnection&lt;T&gt;&gt;::with_conn (1 samples, 0.12%)</title><rect x="95.5828%" y="1221" width="0.1227%" height="15" fill="rgb(229,111,26)" fg:x="779" fg:w="1"/><text x="95.8328%" y="1231.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get::{{closure}} (1 samples, 0.12%)</title><rect x="95.5828%" y="1205" width="0.1227%" height="15" fill="rgb(213,115,40)" fg:x="779" fg:w="1"/><text x="95.8328%" y="1215.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_by_key (1 samples, 0.12%)</title><rect x="95.5828%" y="1189" width="0.1227%" height="15" fill="rgb(209,56,44)" fg:x="779" fg:w="1"/><text x="95.8328%" y="1199.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_path (1 samples, 0.12%)</title><rect x="95.5828%" y="1173" width="0.1227%" height="15" fill="rgb(230,108,32)" fg:x="779" fg:w="1"/><text x="95.8328%" y="1183.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk (1 samples, 0.12%)</title><rect x="95.5828%" y="1157" width="0.1227%" height="15" fill="rgb(216,165,31)" fg:x="779" fg:w="1"/><text x="95.8328%" y="1167.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_backptr (1 samples, 0.12%)</title><rect x="95.5828%" y="1141" width="0.1227%" height="15" fill="rgb(218,122,21)" fg:x="779" fg:w="1"/><text x="95.8328%" y="1151.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_backptr (1 samples, 0.12%)</title><rect x="95.5828%" y="1125" width="0.1227%" height="15" fill="rgb(223,224,47)" fg:x="779" fg:w="1"/><text x="95.8328%" y="1135.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (1 samples, 0.12%)</title><rect x="95.5828%" y="1109" width="0.1227%" height="15" fill="rgb(238,102,44)" fg:x="779" fg:w="1"/><text x="95.8328%" y="1119.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (1 samples, 0.12%)</title><rect x="95.5828%" y="1093" width="0.1227%" height="15" fill="rgb(236,46,40)" fg:x="779" fg:w="1"/><text x="95.8328%" y="1103.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (1 samples, 0.12%)</title><rect x="95.5828%" y="1077" width="0.1227%" height="15" fill="rgb(247,202,50)" fg:x="779" fg:w="1"/><text x="95.8328%" y="1087.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (1 samples, 0.12%)</title><rect x="95.5828%" y="1061" width="0.1227%" height="15" fill="rgb(209,99,20)" fg:x="779" fg:w="1"/><text x="95.8328%" y="1071.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (1 samples, 0.12%)</title><rect x="95.5828%" y="1045" width="0.1227%" height="15" fill="rgb(252,27,34)" fg:x="779" fg:w="1"/><text x="95.8328%" y="1055.50"></text></g><g><title>std::io::Read::read_exact (1 samples, 0.12%)</title><rect x="95.5828%" y="1029" width="0.1227%" height="15" fill="rgb(215,206,23)" fg:x="779" fg:w="1"/><text x="95.8328%" y="1039.50"></text></g><g><title>std::io::default_read_exact (1 samples, 0.12%)</title><rect x="95.5828%" y="1013" width="0.1227%" height="15" fill="rgb(212,135,36)" fg:x="779" fg:w="1"/><text x="95.8328%" y="1023.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="95.5828%" y="997" width="0.1227%" height="15" fill="rgb(240,189,1)" fg:x="779" fg:w="1"/><text x="95.8328%" y="1007.50"></text></g><g><title>sqlite3_blob_read (1 samples, 0.12%)</title><rect x="95.5828%" y="981" width="0.1227%" height="15" fill="rgb(242,56,20)" fg:x="779" fg:w="1"/><text x="95.8328%" y="991.50"></text></g><g><title>blobReadWrite (1 samples, 0.12%)</title><rect x="95.5828%" y="965" width="0.1227%" height="15" fill="rgb(247,132,33)" fg:x="779" fg:w="1"/><text x="95.8328%" y="975.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="95.5828%" y="949" width="0.1227%" height="15" fill="rgb(208,149,11)" fg:x="779" fg:w="1"/><text x="95.8328%" y="959.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="95.5828%" y="933" width="0.1227%" height="15" fill="rgb(211,33,11)" fg:x="779" fg:w="1"/><text x="95.8328%" y="943.50"></text></g><g><title>accessPayload (1 samples, 0.12%)</title><rect x="95.5828%" y="917" width="0.1227%" height="15" fill="rgb(221,29,38)" fg:x="779" fg:w="1"/><text x="95.8328%" y="927.50"></text></g><g><title>getOverflowPage (1 samples, 0.12%)</title><rect x="95.5828%" y="901" width="0.1227%" height="15" fill="rgb(206,182,49)" fg:x="779" fg:w="1"/><text x="95.8328%" y="911.50"></text></g><g><title>btreeGetPage (1 samples, 0.12%)</title><rect x="95.5828%" y="885" width="0.1227%" height="15" fill="rgb(216,140,1)" fg:x="779" fg:w="1"/><text x="95.8328%" y="895.50"></text></g><g><title>sqlite3PagerGet (1 samples, 0.12%)</title><rect x="95.5828%" y="869" width="0.1227%" height="15" fill="rgb(232,57,40)" fg:x="779" fg:w="1"/><text x="95.8328%" y="879.50"></text></g><g><title>getPageMMap (1 samples, 0.12%)</title><rect x="95.5828%" y="853" width="0.1227%" height="15" fill="rgb(224,186,18)" fg:x="779" fg:w="1"/><text x="95.8328%" y="863.50"></text></g><g><title>getPageNormal (1 samples, 0.12%)</title><rect x="95.5828%" y="837" width="0.1227%" height="15" fill="rgb(215,121,11)" fg:x="779" fg:w="1"/><text x="95.8328%" y="847.50"></text></g><g><title>readDbPage (1 samples, 0.12%)</title><rect x="95.5828%" y="821" width="0.1227%" height="15" fill="rgb(245,147,10)" fg:x="779" fg:w="1"/><text x="95.8328%" y="831.50"></text></g><g><title>sqlite3OsRead (1 samples, 0.12%)</title><rect x="95.5828%" y="805" width="0.1227%" height="15" fill="rgb(238,153,13)" fg:x="779" fg:w="1"/><text x="95.8328%" y="815.50"></text></g><g><title>unixRead (1 samples, 0.12%)</title><rect x="95.5828%" y="789" width="0.1227%" height="15" fill="rgb(233,108,0)" fg:x="779" fg:w="1"/><text x="95.8328%" y="799.50"></text></g><g><title>seekAndRead (1 samples, 0.12%)</title><rect x="95.5828%" y="773" width="0.1227%" height="15" fill="rgb(212,157,17)" fg:x="779" fg:w="1"/><text x="95.8328%" y="783.50"></text></g><g><title>read (1 samples, 0.12%)</title><rect x="95.5828%" y="757" width="0.1227%" height="15" fill="rgb(225,213,38)" fg:x="779" fg:w="1"/><text x="95.8328%" y="767.50"></text></g><g><title>blockstack_lib::vm::eval (2 samples, 0.25%)</title><rect x="95.5828%" y="1509" width="0.2454%" height="15" fill="rgb(248,16,11)" fg:x="779" fg:w="2"/><text x="95.8328%" y="1519.50"></text></g><g><title>blockstack_lib::vm::apply (2 samples, 0.25%)</title><rect x="95.5828%" y="1493" width="0.2454%" height="15" fill="rgb(241,33,4)" fg:x="779" fg:w="2"/><text x="95.8328%" y="1503.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="95.7055%" y="1477" width="0.1227%" height="15" fill="rgb(222,26,43)" fg:x="780" fg:w="1"/><text x="95.9555%" y="1487.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="95.7055%" y="1461" width="0.1227%" height="15" fill="rgb(243,29,36)" fg:x="780" fg:w="1"/><text x="95.9555%" y="1471.50"></text></g><g><title>blockstack_lib::vm::functions::special_as_contract (1 samples, 0.12%)</title><rect x="95.7055%" y="1445" width="0.1227%" height="15" fill="rgb(241,9,27)" fg:x="780" fg:w="1"/><text x="95.9555%" y="1455.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="95.7055%" y="1429" width="0.1227%" height="15" fill="rgb(205,117,26)" fg:x="780" fg:w="1"/><text x="95.9555%" y="1439.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="95.7055%" y="1413" width="0.1227%" height="15" fill="rgb(209,80,39)" fg:x="780" fg:w="1"/><text x="95.9555%" y="1423.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="95.7055%" y="1397" width="0.1227%" height="15" fill="rgb(239,155,6)" fg:x="780" fg:w="1"/><text x="95.9555%" y="1407.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="95.7055%" y="1381" width="0.1227%" height="15" fill="rgb(212,104,12)" fg:x="780" fg:w="1"/><text x="95.9555%" y="1391.50"></text></g><g><title>blockstack_lib::vm::functions::database::special_contract_call (1 samples, 0.12%)</title><rect x="95.7055%" y="1365" width="0.1227%" height="15" fill="rgb(234,204,3)" fg:x="780" fg:w="1"/><text x="95.9555%" y="1375.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_contract (1 samples, 0.12%)</title><rect x="95.7055%" y="1349" width="0.1227%" height="15" fill="rgb(251,218,7)" fg:x="780" fg:w="1"/><text x="95.9555%" y="1359.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_contract::{{closure}} (1 samples, 0.12%)</title><rect x="95.7055%" y="1333" width="0.1227%" height="15" fill="rgb(221,81,32)" fg:x="780" fg:w="1"/><text x="95.9555%" y="1343.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_function_as_transaction (1 samples, 0.12%)</title><rect x="95.7055%" y="1317" width="0.1227%" height="15" fill="rgb(214,152,26)" fg:x="780" fg:w="1"/><text x="95.9555%" y="1327.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::execute_apply (1 samples, 0.12%)</title><rect x="95.7055%" y="1301" width="0.1227%" height="15" fill="rgb(223,22,3)" fg:x="780" fg:w="1"/><text x="95.9555%" y="1311.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="95.7055%" y="1285" width="0.1227%" height="15" fill="rgb(207,174,7)" fg:x="780" fg:w="1"/><text x="95.9555%" y="1295.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="95.7055%" y="1269" width="0.1227%" height="15" fill="rgb(224,19,52)" fg:x="780" fg:w="1"/><text x="95.9555%" y="1279.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="95.7055%" y="1253" width="0.1227%" height="15" fill="rgb(228,24,14)" fg:x="780" fg:w="1"/><text x="95.9555%" y="1263.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="95.7055%" y="1237" width="0.1227%" height="15" fill="rgb(230,153,43)" fg:x="780" fg:w="1"/><text x="95.9555%" y="1247.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="95.7055%" y="1221" width="0.1227%" height="15" fill="rgb(231,106,12)" fg:x="780" fg:w="1"/><text x="95.9555%" y="1231.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="95.7055%" y="1205" width="0.1227%" height="15" fill="rgb(215,92,2)" fg:x="780" fg:w="1"/><text x="95.9555%" y="1215.50"></text></g><g><title>blockstack_lib::vm::functions::database::special_contract_call (1 samples, 0.12%)</title><rect x="95.7055%" y="1189" width="0.1227%" height="15" fill="rgb(249,143,25)" fg:x="780" fg:w="1"/><text x="95.9555%" y="1199.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_contract (1 samples, 0.12%)</title><rect x="95.7055%" y="1173" width="0.1227%" height="15" fill="rgb(252,7,35)" fg:x="780" fg:w="1"/><text x="95.9555%" y="1183.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get_contract_size (1 samples, 0.12%)</title><rect x="95.7055%" y="1157" width="0.1227%" height="15" fill="rgb(216,69,40)" fg:x="780" fg:w="1"/><text x="95.9555%" y="1167.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::fetch_metadata (1 samples, 0.12%)</title><rect x="95.7055%" y="1141" width="0.1227%" height="15" fill="rgb(240,36,33)" fg:x="780" fg:w="1"/><text x="95.9555%" y="1151.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get_metadata (1 samples, 0.12%)</title><rect x="95.7055%" y="1125" width="0.1227%" height="15" fill="rgb(231,128,14)" fg:x="780" fg:w="1"/><text x="95.9555%" y="1135.50"></text></g><g><title>blockstack_lib::vm::database::clarity_store::ClarityBackingStore::get_metadata (1 samples, 0.12%)</title><rect x="95.7055%" y="1109" width="0.1227%" height="15" fill="rgb(245,143,14)" fg:x="780" fg:w="1"/><text x="95.9555%" y="1119.50"></text></g><g><title>blockstack_lib::vm::database::sqlite::SqliteConnection::get_metadata (1 samples, 0.12%)</title><rect x="95.7055%" y="1093" width="0.1227%" height="15" fill="rgb(222,130,28)" fg:x="780" fg:w="1"/><text x="95.9555%" y="1103.50"></text></g><g><title>rusqlite::Connection::query_row (1 samples, 0.12%)</title><rect x="95.7055%" y="1077" width="0.1227%" height="15" fill="rgb(212,10,48)" fg:x="780" fg:w="1"/><text x="95.9555%" y="1087.50"></text></g><g><title>rusqlite::statement::Statement::query_row (1 samples, 0.12%)</title><rect x="95.7055%" y="1061" width="0.1227%" height="15" fill="rgb(254,118,45)" fg:x="780" fg:w="1"/><text x="95.9555%" y="1071.50"></text></g><g><title>rusqlite::row::Rows::get_expected_row (1 samples, 0.12%)</title><rect x="95.7055%" y="1045" width="0.1227%" height="15" fill="rgb(228,6,45)" fg:x="780" fg:w="1"/><text x="95.9555%" y="1055.50"></text></g><g><title>rusqlite::row::Rows::next (1 samples, 0.12%)</title><rect x="95.7055%" y="1029" width="0.1227%" height="15" fill="rgb(241,18,35)" fg:x="780" fg:w="1"/><text x="95.9555%" y="1039.50"></text></g><g><title>&lt;rusqlite::row::Rows as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (1 samples, 0.12%)</title><rect x="95.7055%" y="1013" width="0.1227%" height="15" fill="rgb(227,214,53)" fg:x="780" fg:w="1"/><text x="95.9555%" y="1023.50"></text></g><g><title>rusqlite::statement::Statement::step (1 samples, 0.12%)</title><rect x="95.7055%" y="997" width="0.1227%" height="15" fill="rgb(224,107,51)" fg:x="780" fg:w="1"/><text x="95.9555%" y="1007.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (1 samples, 0.12%)</title><rect x="95.7055%" y="981" width="0.1227%" height="15" fill="rgb(248,60,28)" fg:x="780" fg:w="1"/><text x="95.9555%" y="991.50"></text></g><g><title>sqlite3_step (1 samples, 0.12%)</title><rect x="95.7055%" y="965" width="0.1227%" height="15" fill="rgb(249,101,23)" fg:x="780" fg:w="1"/><text x="95.9555%" y="975.50"></text></g><g><title>sqlite3_step (1 samples, 0.12%)</title><rect x="95.7055%" y="949" width="0.1227%" height="15" fill="rgb(228,51,19)" fg:x="780" fg:w="1"/><text x="95.9555%" y="959.50"></text></g><g><title>sqlite3Step (1 samples, 0.12%)</title><rect x="95.7055%" y="933" width="0.1227%" height="15" fill="rgb(213,20,6)" fg:x="780" fg:w="1"/><text x="95.9555%" y="943.50"></text></g><g><title>sqlite3VdbeExec (1 samples, 0.12%)</title><rect x="95.7055%" y="917" width="0.1227%" height="15" fill="rgb(212,124,10)" fg:x="780" fg:w="1"/><text x="95.9555%" y="927.50"></text></g><g><title>sqlite3BtreeBeginTrans (1 samples, 0.12%)</title><rect x="95.7055%" y="901" width="0.1227%" height="15" fill="rgb(248,3,40)" fg:x="780" fg:w="1"/><text x="95.9555%" y="911.50"></text></g><g><title>sqlite3Get4byte (1 samples, 0.12%)</title><rect x="95.7055%" y="885" width="0.1227%" height="15" fill="rgb(223,178,23)" fg:x="780" fg:w="1"/><text x="95.9555%" y="895.50"></text></g><g><title>blockstack_lib::vm::functions::boolean::special_or (1 samples, 0.12%)</title><rect x="95.8282%" y="1477" width="0.1227%" height="15" fill="rgb(240,132,45)" fg:x="781" fg:w="1"/><text x="96.0782%" y="1487.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="95.8282%" y="1461" width="0.1227%" height="15" fill="rgb(245,164,36)" fg:x="781" fg:w="1"/><text x="96.0782%" y="1471.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="95.8282%" y="1445" width="0.1227%" height="15" fill="rgb(231,188,53)" fg:x="781" fg:w="1"/><text x="96.0782%" y="1455.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="95.8282%" y="1429" width="0.1227%" height="15" fill="rgb(237,198,39)" fg:x="781" fg:w="1"/><text x="96.0782%" y="1439.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="95.8282%" y="1413" width="0.1227%" height="15" fill="rgb(223,120,35)" fg:x="781" fg:w="1"/><text x="96.0782%" y="1423.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="95.8282%" y="1397" width="0.1227%" height="15" fill="rgb(253,107,49)" fg:x="781" fg:w="1"/><text x="96.0782%" y="1407.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="95.8282%" y="1381" width="0.1227%" height="15" fill="rgb(216,44,31)" fg:x="781" fg:w="1"/><text x="96.0782%" y="1391.50"></text></g><g><title>blockstack_lib::vm::functions::database::special_fetch_variable (1 samples, 0.12%)</title><rect x="95.8282%" y="1365" width="0.1227%" height="15" fill="rgb(253,87,21)" fg:x="781" fg:w="1"/><text x="96.0782%" y="1375.50"></text></g><g><title>blockstack_lib::vm::functions::database::special_fetch_variable_v205 (1 samples, 0.12%)</title><rect x="95.8282%" y="1349" width="0.1227%" height="15" fill="rgb(226,18,2)" fg:x="781" fg:w="1"/><text x="96.0782%" y="1359.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::lookup_variable_with_size (1 samples, 0.12%)</title><rect x="95.8282%" y="1333" width="0.1227%" height="15" fill="rgb(216,8,46)" fg:x="781" fg:w="1"/><text x="96.0782%" y="1343.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get_value (1 samples, 0.12%)</title><rect x="95.8282%" y="1317" width="0.1227%" height="15" fill="rgb(226,140,39)" fg:x="781" fg:w="1"/><text x="96.0782%" y="1327.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get_value (1 samples, 0.12%)</title><rect x="95.8282%" y="1301" width="0.1227%" height="15" fill="rgb(221,194,54)" fg:x="781" fg:w="1"/><text x="96.0782%" y="1311.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.12%)</title><rect x="95.8282%" y="1285" width="0.1227%" height="15" fill="rgb(213,92,11)" fg:x="781" fg:w="1"/><text x="96.0782%" y="1295.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get_value::{{closure}} (1 samples, 0.12%)</title><rect x="95.8282%" y="1269" width="0.1227%" height="15" fill="rgb(229,162,46)" fg:x="781" fg:w="1"/><text x="96.0782%" y="1279.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::get (1 samples, 0.12%)</title><rect x="95.8282%" y="1253" width="0.1227%" height="15" fill="rgb(214,111,36)" fg:x="781" fg:w="1"/><text x="96.0782%" y="1263.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get (1 samples, 0.12%)</title><rect x="95.8282%" y="1237" width="0.1227%" height="15" fill="rgb(207,6,21)" fg:x="781" fg:w="1"/><text x="96.0782%" y="1247.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt; as blockstack_lib::chainstate::stacks::index::marf::MarfConnection&lt;T&gt;&gt;::with_conn (1 samples, 0.12%)</title><rect x="95.8282%" y="1221" width="0.1227%" height="15" fill="rgb(213,127,38)" fg:x="781" fg:w="1"/><text x="96.0782%" y="1231.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get::{{closure}} (1 samples, 0.12%)</title><rect x="95.8282%" y="1205" width="0.1227%" height="15" fill="rgb(238,118,32)" fg:x="781" fg:w="1"/><text x="96.0782%" y="1215.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_by_key (1 samples, 0.12%)</title><rect x="95.8282%" y="1189" width="0.1227%" height="15" fill="rgb(240,139,39)" fg:x="781" fg:w="1"/><text x="96.0782%" y="1199.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_path (1 samples, 0.12%)</title><rect x="95.8282%" y="1173" width="0.1227%" height="15" fill="rgb(235,10,37)" fg:x="781" fg:w="1"/><text x="96.0782%" y="1183.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk (1 samples, 0.12%)</title><rect x="95.8282%" y="1157" width="0.1227%" height="15" fill="rgb(249,171,38)" fg:x="781" fg:w="1"/><text x="96.0782%" y="1167.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_backptr (1 samples, 0.12%)</title><rect x="95.8282%" y="1141" width="0.1227%" height="15" fill="rgb(242,144,32)" fg:x="781" fg:w="1"/><text x="96.0782%" y="1151.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_backptr (1 samples, 0.12%)</title><rect x="95.8282%" y="1125" width="0.1227%" height="15" fill="rgb(217,117,21)" fg:x="781" fg:w="1"/><text x="96.0782%" y="1135.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (1 samples, 0.12%)</title><rect x="95.8282%" y="1109" width="0.1227%" height="15" fill="rgb(249,87,1)" fg:x="781" fg:w="1"/><text x="96.0782%" y="1119.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (1 samples, 0.12%)</title><rect x="95.8282%" y="1093" width="0.1227%" height="15" fill="rgb(248,196,48)" fg:x="781" fg:w="1"/><text x="96.0782%" y="1103.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (1 samples, 0.12%)</title><rect x="95.8282%" y="1077" width="0.1227%" height="15" fill="rgb(251,206,33)" fg:x="781" fg:w="1"/><text x="96.0782%" y="1087.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (1 samples, 0.12%)</title><rect x="95.8282%" y="1061" width="0.1227%" height="15" fill="rgb(232,141,28)" fg:x="781" fg:w="1"/><text x="96.0782%" y="1071.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (1 samples, 0.12%)</title><rect x="95.8282%" y="1045" width="0.1227%" height="15" fill="rgb(209,167,14)" fg:x="781" fg:w="1"/><text x="96.0782%" y="1055.50"></text></g><g><title>std::io::Read::read_exact (1 samples, 0.12%)</title><rect x="95.8282%" y="1029" width="0.1227%" height="15" fill="rgb(225,11,50)" fg:x="781" fg:w="1"/><text x="96.0782%" y="1039.50"></text></g><g><title>std::io::default_read_exact (1 samples, 0.12%)</title><rect x="95.8282%" y="1013" width="0.1227%" height="15" fill="rgb(209,50,20)" fg:x="781" fg:w="1"/><text x="96.0782%" y="1023.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="95.8282%" y="997" width="0.1227%" height="15" fill="rgb(212,17,46)" fg:x="781" fg:w="1"/><text x="96.0782%" y="1007.50"></text></g><g><title>sqlite3_blob_read (1 samples, 0.12%)</title><rect x="95.8282%" y="981" width="0.1227%" height="15" fill="rgb(216,101,39)" fg:x="781" fg:w="1"/><text x="96.0782%" y="991.50"></text></g><g><title>blobReadWrite (1 samples, 0.12%)</title><rect x="95.8282%" y="965" width="0.1227%" height="15" fill="rgb(212,228,48)" fg:x="781" fg:w="1"/><text x="96.0782%" y="975.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="95.8282%" y="949" width="0.1227%" height="15" fill="rgb(250,6,50)" fg:x="781" fg:w="1"/><text x="96.0782%" y="959.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="95.8282%" y="933" width="0.1227%" height="15" fill="rgb(250,160,48)" fg:x="781" fg:w="1"/><text x="96.0782%" y="943.50"></text></g><g><title>accessPayload (1 samples, 0.12%)</title><rect x="95.8282%" y="917" width="0.1227%" height="15" fill="rgb(244,216,33)" fg:x="781" fg:w="1"/><text x="96.0782%" y="927.50"></text></g><g><title>getOverflowPage (1 samples, 0.12%)</title><rect x="95.8282%" y="901" width="0.1227%" height="15" fill="rgb(207,157,5)" fg:x="781" fg:w="1"/><text x="96.0782%" y="911.50"></text></g><g><title>btreeGetPage (1 samples, 0.12%)</title><rect x="95.8282%" y="885" width="0.1227%" height="15" fill="rgb(228,199,8)" fg:x="781" fg:w="1"/><text x="96.0782%" y="895.50"></text></g><g><title>sqlite3PagerGet (1 samples, 0.12%)</title><rect x="95.8282%" y="869" width="0.1227%" height="15" fill="rgb(227,80,20)" fg:x="781" fg:w="1"/><text x="96.0782%" y="879.50"></text></g><g><title>getPageMMap (1 samples, 0.12%)</title><rect x="95.8282%" y="853" width="0.1227%" height="15" fill="rgb(222,9,33)" fg:x="781" fg:w="1"/><text x="96.0782%" y="863.50"></text></g><g><title>getPageNormal (1 samples, 0.12%)</title><rect x="95.8282%" y="837" width="0.1227%" height="15" fill="rgb(239,44,28)" fg:x="781" fg:w="1"/><text x="96.0782%" y="847.50"></text></g><g><title>readDbPage (1 samples, 0.12%)</title><rect x="95.8282%" y="821" width="0.1227%" height="15" fill="rgb(249,187,43)" fg:x="781" fg:w="1"/><text x="96.0782%" y="831.50"></text></g><g><title>sqlite3OsRead (1 samples, 0.12%)</title><rect x="95.8282%" y="805" width="0.1227%" height="15" fill="rgb(216,141,28)" fg:x="781" fg:w="1"/><text x="96.0782%" y="815.50"></text></g><g><title>unixRead (1 samples, 0.12%)</title><rect x="95.8282%" y="789" width="0.1227%" height="15" fill="rgb(230,154,53)" fg:x="781" fg:w="1"/><text x="96.0782%" y="799.50"></text></g><g><title>seekAndRead (1 samples, 0.12%)</title><rect x="95.8282%" y="773" width="0.1227%" height="15" fill="rgb(227,82,4)" fg:x="781" fg:w="1"/><text x="96.0782%" y="783.50"></text></g><g><title>read (1 samples, 0.12%)</title><rect x="95.8282%" y="757" width="0.1227%" height="15" fill="rgb(220,107,16)" fg:x="781" fg:w="1"/><text x="96.0782%" y="767.50"></text></g><g><title>blockstack_lib::vm::functions::sequences::special_fold (1 samples, 0.12%)</title><rect x="95.9509%" y="1477" width="0.1227%" height="15" fill="rgb(207,187,2)" fg:x="782" fg:w="1"/><text x="96.2009%" y="1487.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.12%)</title><rect x="95.9509%" y="1461" width="0.1227%" height="15" fill="rgb(210,162,52)" fg:x="782" fg:w="1"/><text x="96.2009%" y="1471.50"></text></g><g><title>blockstack_lib::vm::functions::sequences::special_fold::{{closure}} (1 samples, 0.12%)</title><rect x="95.9509%" y="1445" width="0.1227%" height="15" fill="rgb(217,216,49)" fg:x="782" fg:w="1"/><text x="96.2009%" y="1455.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="95.9509%" y="1429" width="0.1227%" height="15" fill="rgb(218,146,49)" fg:x="782" fg:w="1"/><text x="96.2009%" y="1439.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::apply (1 samples, 0.12%)</title><rect x="95.9509%" y="1413" width="0.1227%" height="15" fill="rgb(216,55,40)" fg:x="782" fg:w="1"/><text x="96.2009%" y="1423.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::execute_apply (1 samples, 0.12%)</title><rect x="95.9509%" y="1397" width="0.1227%" height="15" fill="rgb(208,196,21)" fg:x="782" fg:w="1"/><text x="96.2009%" y="1407.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="95.9509%" y="1381" width="0.1227%" height="15" fill="rgb(242,117,42)" fg:x="782" fg:w="1"/><text x="96.2009%" y="1391.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="95.9509%" y="1365" width="0.1227%" height="15" fill="rgb(210,11,23)" fg:x="782" fg:w="1"/><text x="96.2009%" y="1375.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="95.9509%" y="1349" width="0.1227%" height="15" fill="rgb(217,110,2)" fg:x="782" fg:w="1"/><text x="96.2009%" y="1359.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="95.9509%" y="1333" width="0.1227%" height="15" fill="rgb(229,77,54)" fg:x="782" fg:w="1"/><text x="96.2009%" y="1343.50"></text></g><g><title>blockstack_lib::vm::functions::special_let (1 samples, 0.12%)</title><rect x="95.9509%" y="1317" width="0.1227%" height="15" fill="rgb(218,53,16)" fg:x="782" fg:w="1"/><text x="96.2009%" y="1327.50"></text></g><g><title>blockstack_lib::vm::functions::special_let::{{closure}} (1 samples, 0.12%)</title><rect x="95.9509%" y="1301" width="0.1227%" height="15" fill="rgb(215,38,13)" fg:x="782" fg:w="1"/><text x="96.2009%" y="1311.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="95.9509%" y="1285" width="0.1227%" height="15" fill="rgb(235,42,18)" fg:x="782" fg:w="1"/><text x="96.2009%" y="1295.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="95.9509%" y="1269" width="0.1227%" height="15" fill="rgb(219,66,54)" fg:x="782" fg:w="1"/><text x="96.2009%" y="1279.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="95.9509%" y="1253" width="0.1227%" height="15" fill="rgb(222,205,4)" fg:x="782" fg:w="1"/><text x="96.2009%" y="1263.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="95.9509%" y="1237" width="0.1227%" height="15" fill="rgb(227,213,46)" fg:x="782" fg:w="1"/><text x="96.2009%" y="1247.50"></text></g><g><title>blockstack_lib::vm::functions::tuples::tuple_cons (1 samples, 0.12%)</title><rect x="95.9509%" y="1221" width="0.1227%" height="15" fill="rgb(250,145,42)" fg:x="782" fg:w="1"/><text x="96.2009%" y="1231.50"></text></g><g><title>blockstack_lib::vm::functions::parse_eval_bindings (1 samples, 0.12%)</title><rect x="95.9509%" y="1205" width="0.1227%" height="15" fill="rgb(219,15,2)" fg:x="782" fg:w="1"/><text x="96.2009%" y="1215.50"></text></g><g><title>blockstack_lib::vm::functions::handle_binding_list (1 samples, 0.12%)</title><rect x="95.9509%" y="1189" width="0.1227%" height="15" fill="rgb(231,181,52)" fg:x="782" fg:w="1"/><text x="96.2009%" y="1199.50"></text></g><g><title>blockstack_lib::vm::functions::parse_eval_bindings::{{closure}} (1 samples, 0.12%)</title><rect x="95.9509%" y="1173" width="0.1227%" height="15" fill="rgb(235,1,42)" fg:x="782" fg:w="1"/><text x="96.2009%" y="1183.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="95.9509%" y="1157" width="0.1227%" height="15" fill="rgb(249,88,27)" fg:x="782" fg:w="1"/><text x="96.2009%" y="1167.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="95.9509%" y="1141" width="0.1227%" height="15" fill="rgb(235,145,16)" fg:x="782" fg:w="1"/><text x="96.2009%" y="1151.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="95.9509%" y="1125" width="0.1227%" height="15" fill="rgb(237,114,19)" fg:x="782" fg:w="1"/><text x="96.2009%" y="1135.50"></text></g><g><title>blockstack_lib::vm::lookup_variable (1 samples, 0.12%)</title><rect x="95.9509%" y="1109" width="0.1227%" height="15" fill="rgb(238,51,50)" fg:x="782" fg:w="1"/><text x="96.2009%" y="1119.50"></text></g><g><title>blockstack_lib::vm::costs::runtime_cost (1 samples, 0.12%)</title><rect x="95.9509%" y="1093" width="0.1227%" height="15" fill="rgb(205,194,25)" fg:x="782" fg:w="1"/><text x="96.2009%" y="1103.50"></text></g><g><title>&lt;blockstack_lib::vm::contexts::Environment as blockstack_lib::vm::costs::CostTracker&gt;::compute_cost (1 samples, 0.12%)</title><rect x="95.9509%" y="1077" width="0.1227%" height="15" fill="rgb(215,203,17)" fg:x="782" fg:w="1"/><text x="96.2009%" y="1087.50"></text></g><g><title>&lt;blockstack_lib::vm::costs::LimitedCostTracker as blockstack_lib::vm::costs::CostTracker&gt;::compute_cost (1 samples, 0.12%)</title><rect x="95.9509%" y="1061" width="0.1227%" height="15" fill="rgb(233,112,49)" fg:x="782" fg:w="1"/><text x="96.2009%" y="1071.50"></text></g><g><title>blockstack_lib::vm::costs::compute_cost (1 samples, 0.12%)</title><rect x="95.9509%" y="1045" width="0.1227%" height="15" fill="rgb(241,130,26)" fg:x="782" fg:w="1"/><text x="96.2009%" y="1055.50"></text></g><g><title>blockstack_lib::vm::eval_all (1 samples, 0.12%)</title><rect x="95.9509%" y="1029" width="0.1227%" height="15" fill="rgb(252,223,19)" fg:x="782" fg:w="1"/><text x="96.2009%" y="1039.50"></text></g><g><title>blockstack_lib::vm::eval_all::{{closure}} (1 samples, 0.12%)</title><rect x="95.9509%" y="1013" width="0.1227%" height="15" fill="rgb(211,95,25)" fg:x="782" fg:w="1"/><text x="96.2009%" y="1023.50"></text></g><g><title>blockstack_lib::vm::contexts::GlobalContext::execute (1 samples, 0.12%)</title><rect x="95.9509%" y="997" width="0.1227%" height="15" fill="rgb(251,182,27)" fg:x="782" fg:w="1"/><text x="96.2009%" y="1007.50"></text></g><g><title>blockstack_lib::vm::eval_all::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="95.9509%" y="981" width="0.1227%" height="15" fill="rgb(238,24,4)" fg:x="782" fg:w="1"/><text x="96.2009%" y="991.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="95.9509%" y="965" width="0.1227%" height="15" fill="rgb(224,220,25)" fg:x="782" fg:w="1"/><text x="96.2009%" y="975.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="95.9509%" y="949" width="0.1227%" height="15" fill="rgb(239,133,26)" fg:x="782" fg:w="1"/><text x="96.2009%" y="959.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::apply (1 samples, 0.12%)</title><rect x="95.9509%" y="933" width="0.1227%" height="15" fill="rgb(211,94,48)" fg:x="782" fg:w="1"/><text x="96.2009%" y="943.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_function_as_transaction (1 samples, 0.12%)</title><rect x="95.9509%" y="917" width="0.1227%" height="15" fill="rgb(239,87,6)" fg:x="782" fg:w="1"/><text x="96.2009%" y="927.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::execute_apply (1 samples, 0.12%)</title><rect x="95.9509%" y="901" width="0.1227%" height="15" fill="rgb(227,62,0)" fg:x="782" fg:w="1"/><text x="96.2009%" y="911.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="95.9509%" y="885" width="0.1227%" height="15" fill="rgb(211,226,4)" fg:x="782" fg:w="1"/><text x="96.2009%" y="895.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="95.9509%" y="869" width="0.1227%" height="15" fill="rgb(253,38,52)" fg:x="782" fg:w="1"/><text x="96.2009%" y="879.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="95.9509%" y="853" width="0.1227%" height="15" fill="rgb(229,126,40)" fg:x="782" fg:w="1"/><text x="96.2009%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (1 samples, 0.12%)</title><rect x="95.9509%" y="837" width="0.1227%" height="15" fill="rgb(229,165,44)" fg:x="782" fg:w="1"/><text x="96.2009%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;blockstack_lib::vm::analysis::errors::CheckErrors&gt; (1 samples, 0.12%)</title><rect x="95.9509%" y="821" width="0.1227%" height="15" fill="rgb(247,95,47)" fg:x="782" fg:w="1"/><text x="96.2009%" y="831.50"></text></g><g><title>blockstack_lib::vm::functions::database::special_contract_call (1 samples, 0.12%)</title><rect x="96.0736%" y="1349" width="0.1227%" height="15" fill="rgb(216,140,30)" fg:x="783" fg:w="1"/><text x="96.3236%" y="1359.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_contract (1 samples, 0.12%)</title><rect x="96.0736%" y="1333" width="0.1227%" height="15" fill="rgb(246,214,8)" fg:x="783" fg:w="1"/><text x="96.3236%" y="1343.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get_contract_size (1 samples, 0.12%)</title><rect x="96.0736%" y="1317" width="0.1227%" height="15" fill="rgb(227,224,15)" fg:x="783" fg:w="1"/><text x="96.3236%" y="1327.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::fetch_metadata (1 samples, 0.12%)</title><rect x="96.0736%" y="1301" width="0.1227%" height="15" fill="rgb(233,175,4)" fg:x="783" fg:w="1"/><text x="96.3236%" y="1311.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get_metadata (1 samples, 0.12%)</title><rect x="96.0736%" y="1285" width="0.1227%" height="15" fill="rgb(221,66,45)" fg:x="783" fg:w="1"/><text x="96.3236%" y="1295.50"></text></g><g><title>blockstack_lib::vm::database::clarity_store::ClarityBackingStore::get_metadata (1 samples, 0.12%)</title><rect x="96.0736%" y="1269" width="0.1227%" height="15" fill="rgb(221,178,18)" fg:x="783" fg:w="1"/><text x="96.3236%" y="1279.50"></text></g><g><title>blockstack_lib::vm::database::clarity_store::ClarityBackingStore::get_contract_hash (1 samples, 0.12%)</title><rect x="96.0736%" y="1253" width="0.1227%" height="15" fill="rgb(213,81,29)" fg:x="783" fg:w="1"/><text x="96.3236%" y="1263.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::get_block_at_height (1 samples, 0.12%)</title><rect x="96.0736%" y="1237" width="0.1227%" height="15" fill="rgb(220,89,49)" fg:x="783" fg:w="1"/><text x="96.3236%" y="1247.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get_block_at_height (1 samples, 0.12%)</title><rect x="96.0736%" y="1221" width="0.1227%" height="15" fill="rgb(227,60,33)" fg:x="783" fg:w="1"/><text x="96.3236%" y="1231.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt; as blockstack_lib::chainstate::stacks::index::marf::MarfConnection&lt;T&gt;&gt;::with_conn (1 samples, 0.12%)</title><rect x="96.0736%" y="1205" width="0.1227%" height="15" fill="rgb(205,113,12)" fg:x="783" fg:w="1"/><text x="96.3236%" y="1215.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get_block_at_height::{{closure}} (1 samples, 0.12%)</title><rect x="96.0736%" y="1189" width="0.1227%" height="15" fill="rgb(211,32,1)" fg:x="783" fg:w="1"/><text x="96.3236%" y="1199.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_block_at_height (1 samples, 0.12%)</title><rect x="96.0736%" y="1173" width="0.1227%" height="15" fill="rgb(246,2,12)" fg:x="783" fg:w="1"/><text x="96.3236%" y="1183.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_by_key (1 samples, 0.12%)</title><rect x="96.0736%" y="1157" width="0.1227%" height="15" fill="rgb(243,37,27)" fg:x="783" fg:w="1"/><text x="96.3236%" y="1167.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_path (1 samples, 0.12%)</title><rect x="96.0736%" y="1141" width="0.1227%" height="15" fill="rgb(248,211,31)" fg:x="783" fg:w="1"/><text x="96.3236%" y="1151.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk (1 samples, 0.12%)</title><rect x="96.0736%" y="1125" width="0.1227%" height="15" fill="rgb(242,146,47)" fg:x="783" fg:w="1"/><text x="96.3236%" y="1135.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_backptr (1 samples, 0.12%)</title><rect x="96.0736%" y="1109" width="0.1227%" height="15" fill="rgb(206,70,20)" fg:x="783" fg:w="1"/><text x="96.3236%" y="1119.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_backptr (1 samples, 0.12%)</title><rect x="96.0736%" y="1093" width="0.1227%" height="15" fill="rgb(215,10,51)" fg:x="783" fg:w="1"/><text x="96.3236%" y="1103.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (1 samples, 0.12%)</title><rect x="96.0736%" y="1077" width="0.1227%" height="15" fill="rgb(243,178,53)" fg:x="783" fg:w="1"/><text x="96.3236%" y="1087.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (1 samples, 0.12%)</title><rect x="96.0736%" y="1061" width="0.1227%" height="15" fill="rgb(233,221,20)" fg:x="783" fg:w="1"/><text x="96.3236%" y="1071.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (1 samples, 0.12%)</title><rect x="96.0736%" y="1045" width="0.1227%" height="15" fill="rgb(218,95,35)" fg:x="783" fg:w="1"/><text x="96.3236%" y="1055.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (1 samples, 0.12%)</title><rect x="96.0736%" y="1029" width="0.1227%" height="15" fill="rgb(229,13,5)" fg:x="783" fg:w="1"/><text x="96.3236%" y="1039.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (1 samples, 0.12%)</title><rect x="96.0736%" y="1013" width="0.1227%" height="15" fill="rgb(252,164,30)" fg:x="783" fg:w="1"/><text x="96.3236%" y="1023.50"></text></g><g><title>std::io::Read::read_exact (1 samples, 0.12%)</title><rect x="96.0736%" y="997" width="0.1227%" height="15" fill="rgb(232,68,36)" fg:x="783" fg:w="1"/><text x="96.3236%" y="1007.50"></text></g><g><title>std::io::default_read_exact (1 samples, 0.12%)</title><rect x="96.0736%" y="981" width="0.1227%" height="15" fill="rgb(219,59,54)" fg:x="783" fg:w="1"/><text x="96.3236%" y="991.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="96.0736%" y="965" width="0.1227%" height="15" fill="rgb(250,92,33)" fg:x="783" fg:w="1"/><text x="96.3236%" y="975.50"></text></g><g><title>sqlite3_blob_read (1 samples, 0.12%)</title><rect x="96.0736%" y="949" width="0.1227%" height="15" fill="rgb(229,162,54)" fg:x="783" fg:w="1"/><text x="96.3236%" y="959.50"></text></g><g><title>blobReadWrite (1 samples, 0.12%)</title><rect x="96.0736%" y="933" width="0.1227%" height="15" fill="rgb(244,114,52)" fg:x="783" fg:w="1"/><text x="96.3236%" y="943.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="96.0736%" y="917" width="0.1227%" height="15" fill="rgb(212,211,43)" fg:x="783" fg:w="1"/><text x="96.3236%" y="927.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="96.0736%" y="901" width="0.1227%" height="15" fill="rgb(226,147,8)" fg:x="783" fg:w="1"/><text x="96.3236%" y="911.50"></text></g><g><title>accessPayload (1 samples, 0.12%)</title><rect x="96.0736%" y="885" width="0.1227%" height="15" fill="rgb(226,23,13)" fg:x="783" fg:w="1"/><text x="96.3236%" y="895.50"></text></g><g><title>getOverflowPage (1 samples, 0.12%)</title><rect x="96.0736%" y="869" width="0.1227%" height="15" fill="rgb(240,63,4)" fg:x="783" fg:w="1"/><text x="96.3236%" y="879.50"></text></g><g><title>btreeGetPage (1 samples, 0.12%)</title><rect x="96.0736%" y="853" width="0.1227%" height="15" fill="rgb(221,1,32)" fg:x="783" fg:w="1"/><text x="96.3236%" y="863.50"></text></g><g><title>sqlite3PagerGet (1 samples, 0.12%)</title><rect x="96.0736%" y="837" width="0.1227%" height="15" fill="rgb(242,117,10)" fg:x="783" fg:w="1"/><text x="96.3236%" y="847.50"></text></g><g><title>getPageMMap (1 samples, 0.12%)</title><rect x="96.0736%" y="821" width="0.1227%" height="15" fill="rgb(249,172,44)" fg:x="783" fg:w="1"/><text x="96.3236%" y="831.50"></text></g><g><title>getPageNormal (1 samples, 0.12%)</title><rect x="96.0736%" y="805" width="0.1227%" height="15" fill="rgb(244,46,45)" fg:x="783" fg:w="1"/><text x="96.3236%" y="815.50"></text></g><g><title>sqlite3PcacheFetch (1 samples, 0.12%)</title><rect x="96.0736%" y="789" width="0.1227%" height="15" fill="rgb(206,43,17)" fg:x="783" fg:w="1"/><text x="96.3236%" y="799.50"></text></g><g><title>pcache1Fetch (1 samples, 0.12%)</title><rect x="96.0736%" y="773" width="0.1227%" height="15" fill="rgb(239,218,39)" fg:x="783" fg:w="1"/><text x="96.3236%" y="783.50"></text></g><g><title>pcache1FetchWithMutex (1 samples, 0.12%)</title><rect x="96.0736%" y="757" width="0.1227%" height="15" fill="rgb(208,169,54)" fg:x="783" fg:w="1"/><text x="96.3236%" y="767.50"></text></g><g><title>pcache1FetchNoMutex (1 samples, 0.12%)</title><rect x="96.0736%" y="741" width="0.1227%" height="15" fill="rgb(247,25,42)" fg:x="783" fg:w="1"/><text x="96.3236%" y="751.50"></text></g><g><title>blockstack_lib::vm::eval (9 samples, 1.10%)</title><rect x="95.2147%" y="1541" width="1.1043%" height="15" fill="rgb(226,23,31)" fg:x="776" fg:w="9"/><text x="95.4647%" y="1551.50"></text></g><g><title>blockstack_lib::vm::apply (9 samples, 1.10%)</title><rect x="95.2147%" y="1525" width="1.1043%" height="15" fill="rgb(247,16,28)" fg:x="776" fg:w="9"/><text x="95.4647%" y="1535.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (4 samples, 0.49%)</title><rect x="95.8282%" y="1509" width="0.4908%" height="15" fill="rgb(231,147,38)" fg:x="781" fg:w="4"/><text x="96.0782%" y="1519.50"></text></g><g><title>core::ops::function::Fn::call (4 samples, 0.49%)</title><rect x="95.8282%" y="1493" width="0.4908%" height="15" fill="rgb(253,81,48)" fg:x="781" fg:w="4"/><text x="96.0782%" y="1503.50"></text></g><g><title>blockstack_lib::vm::functions::special_let (2 samples, 0.25%)</title><rect x="96.0736%" y="1477" width="0.2454%" height="15" fill="rgb(249,222,43)" fg:x="783" fg:w="2"/><text x="96.3236%" y="1487.50"></text></g><g><title>blockstack_lib::vm::functions::special_let::{{closure}} (2 samples, 0.25%)</title><rect x="96.0736%" y="1461" width="0.2454%" height="15" fill="rgb(221,3,27)" fg:x="783" fg:w="2"/><text x="96.3236%" y="1471.50"></text></g><g><title>blockstack_lib::vm::functions::handle_binding_list (2 samples, 0.25%)</title><rect x="96.0736%" y="1445" width="0.2454%" height="15" fill="rgb(228,180,5)" fg:x="783" fg:w="2"/><text x="96.3236%" y="1455.50"></text></g><g><title>blockstack_lib::vm::functions::special_let::{{closure}}::{{closure}} (2 samples, 0.25%)</title><rect x="96.0736%" y="1429" width="0.2454%" height="15" fill="rgb(227,131,42)" fg:x="783" fg:w="2"/><text x="96.3236%" y="1439.50"></text></g><g><title>blockstack_lib::vm::eval (2 samples, 0.25%)</title><rect x="96.0736%" y="1413" width="0.2454%" height="15" fill="rgb(212,3,39)" fg:x="783" fg:w="2"/><text x="96.3236%" y="1423.50"></text></g><g><title>blockstack_lib::vm::apply (2 samples, 0.25%)</title><rect x="96.0736%" y="1397" width="0.2454%" height="15" fill="rgb(226,45,5)" fg:x="783" fg:w="2"/><text x="96.3236%" y="1407.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (2 samples, 0.25%)</title><rect x="96.0736%" y="1381" width="0.2454%" height="15" fill="rgb(215,167,45)" fg:x="783" fg:w="2"/><text x="96.3236%" y="1391.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.25%)</title><rect x="96.0736%" y="1365" width="0.2454%" height="15" fill="rgb(250,218,53)" fg:x="783" fg:w="2"/><text x="96.3236%" y="1375.50"></text></g><g><title>blockstack_lib::vm::functions::special_contract_of (1 samples, 0.12%)</title><rect x="96.1963%" y="1349" width="0.1227%" height="15" fill="rgb(207,140,0)" fg:x="784" fg:w="1"/><text x="96.4463%" y="1359.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get_contract (1 samples, 0.12%)</title><rect x="96.1963%" y="1333" width="0.1227%" height="15" fill="rgb(238,133,51)" fg:x="784" fg:w="1"/><text x="96.4463%" y="1343.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::fetch_metadata (1 samples, 0.12%)</title><rect x="96.1963%" y="1317" width="0.1227%" height="15" fill="rgb(218,203,53)" fg:x="784" fg:w="1"/><text x="96.4463%" y="1327.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get_metadata (1 samples, 0.12%)</title><rect x="96.1963%" y="1301" width="0.1227%" height="15" fill="rgb(226,184,25)" fg:x="784" fg:w="1"/><text x="96.4463%" y="1311.50"></text></g><g><title>blockstack_lib::vm::database::clarity_store::ClarityBackingStore::get_metadata (1 samples, 0.12%)</title><rect x="96.1963%" y="1285" width="0.1227%" height="15" fill="rgb(231,121,21)" fg:x="784" fg:w="1"/><text x="96.4463%" y="1295.50"></text></g><g><title>blockstack_lib::vm::database::clarity_store::ClarityBackingStore::get_contract_hash (1 samples, 0.12%)</title><rect x="96.1963%" y="1269" width="0.1227%" height="15" fill="rgb(251,14,34)" fg:x="784" fg:w="1"/><text x="96.4463%" y="1279.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::get (1 samples, 0.12%)</title><rect x="96.1963%" y="1253" width="0.1227%" height="15" fill="rgb(249,193,11)" fg:x="784" fg:w="1"/><text x="96.4463%" y="1263.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get (1 samples, 0.12%)</title><rect x="96.1963%" y="1237" width="0.1227%" height="15" fill="rgb(220,172,37)" fg:x="784" fg:w="1"/><text x="96.4463%" y="1247.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt; as blockstack_lib::chainstate::stacks::index::marf::MarfConnection&lt;T&gt;&gt;::with_conn (1 samples, 0.12%)</title><rect x="96.1963%" y="1221" width="0.1227%" height="15" fill="rgb(231,229,43)" fg:x="784" fg:w="1"/><text x="96.4463%" y="1231.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get::{{closure}} (1 samples, 0.12%)</title><rect x="96.1963%" y="1205" width="0.1227%" height="15" fill="rgb(250,161,5)" fg:x="784" fg:w="1"/><text x="96.4463%" y="1215.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_by_key (1 samples, 0.12%)</title><rect x="96.1963%" y="1189" width="0.1227%" height="15" fill="rgb(218,225,18)" fg:x="784" fg:w="1"/><text x="96.4463%" y="1199.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_path (1 samples, 0.12%)</title><rect x="96.1963%" y="1173" width="0.1227%" height="15" fill="rgb(245,45,42)" fg:x="784" fg:w="1"/><text x="96.4463%" y="1183.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk (1 samples, 0.12%)</title><rect x="96.1963%" y="1157" width="0.1227%" height="15" fill="rgb(211,115,1)" fg:x="784" fg:w="1"/><text x="96.4463%" y="1167.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_backptr (1 samples, 0.12%)</title><rect x="96.1963%" y="1141" width="0.1227%" height="15" fill="rgb(248,133,52)" fg:x="784" fg:w="1"/><text x="96.4463%" y="1151.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_backptr (1 samples, 0.12%)</title><rect x="96.1963%" y="1125" width="0.1227%" height="15" fill="rgb(238,100,21)" fg:x="784" fg:w="1"/><text x="96.4463%" y="1135.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (1 samples, 0.12%)</title><rect x="96.1963%" y="1109" width="0.1227%" height="15" fill="rgb(247,144,11)" fg:x="784" fg:w="1"/><text x="96.4463%" y="1119.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (1 samples, 0.12%)</title><rect x="96.1963%" y="1093" width="0.1227%" height="15" fill="rgb(206,164,16)" fg:x="784" fg:w="1"/><text x="96.4463%" y="1103.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (1 samples, 0.12%)</title><rect x="96.1963%" y="1077" width="0.1227%" height="15" fill="rgb(222,34,3)" fg:x="784" fg:w="1"/><text x="96.4463%" y="1087.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (1 samples, 0.12%)</title><rect x="96.1963%" y="1061" width="0.1227%" height="15" fill="rgb(248,82,4)" fg:x="784" fg:w="1"/><text x="96.4463%" y="1071.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (1 samples, 0.12%)</title><rect x="96.1963%" y="1045" width="0.1227%" height="15" fill="rgb(228,81,46)" fg:x="784" fg:w="1"/><text x="96.4463%" y="1055.50"></text></g><g><title>std::io::Read::read_exact (1 samples, 0.12%)</title><rect x="96.1963%" y="1029" width="0.1227%" height="15" fill="rgb(227,67,47)" fg:x="784" fg:w="1"/><text x="96.4463%" y="1039.50"></text></g><g><title>std::io::default_read_exact (1 samples, 0.12%)</title><rect x="96.1963%" y="1013" width="0.1227%" height="15" fill="rgb(215,93,53)" fg:x="784" fg:w="1"/><text x="96.4463%" y="1023.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="96.1963%" y="997" width="0.1227%" height="15" fill="rgb(248,194,39)" fg:x="784" fg:w="1"/><text x="96.4463%" y="1007.50"></text></g><g><title>sqlite3_blob_read (1 samples, 0.12%)</title><rect x="96.1963%" y="981" width="0.1227%" height="15" fill="rgb(215,5,19)" fg:x="784" fg:w="1"/><text x="96.4463%" y="991.50"></text></g><g><title>blobReadWrite (1 samples, 0.12%)</title><rect x="96.1963%" y="965" width="0.1227%" height="15" fill="rgb(226,215,51)" fg:x="784" fg:w="1"/><text x="96.4463%" y="975.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="96.1963%" y="949" width="0.1227%" height="15" fill="rgb(225,56,26)" fg:x="784" fg:w="1"/><text x="96.4463%" y="959.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="96.1963%" y="933" width="0.1227%" height="15" fill="rgb(222,75,29)" fg:x="784" fg:w="1"/><text x="96.4463%" y="943.50"></text></g><g><title>accessPayload (1 samples, 0.12%)</title><rect x="96.1963%" y="917" width="0.1227%" height="15" fill="rgb(236,139,6)" fg:x="784" fg:w="1"/><text x="96.4463%" y="927.50"></text></g><g><title>getOverflowPage (1 samples, 0.12%)</title><rect x="96.1963%" y="901" width="0.1227%" height="15" fill="rgb(223,137,36)" fg:x="784" fg:w="1"/><text x="96.4463%" y="911.50"></text></g><g><title>btreeGetPage (1 samples, 0.12%)</title><rect x="96.1963%" y="885" width="0.1227%" height="15" fill="rgb(226,99,2)" fg:x="784" fg:w="1"/><text x="96.4463%" y="895.50"></text></g><g><title>sqlite3PagerGet (1 samples, 0.12%)</title><rect x="96.1963%" y="869" width="0.1227%" height="15" fill="rgb(206,133,23)" fg:x="784" fg:w="1"/><text x="96.4463%" y="879.50"></text></g><g><title>getPageMMap (1 samples, 0.12%)</title><rect x="96.1963%" y="853" width="0.1227%" height="15" fill="rgb(243,173,15)" fg:x="784" fg:w="1"/><text x="96.4463%" y="863.50"></text></g><g><title>getPageNormal (1 samples, 0.12%)</title><rect x="96.1963%" y="837" width="0.1227%" height="15" fill="rgb(228,69,28)" fg:x="784" fg:w="1"/><text x="96.4463%" y="847.50"></text></g><g><title>readDbPage (1 samples, 0.12%)</title><rect x="96.1963%" y="821" width="0.1227%" height="15" fill="rgb(212,51,22)" fg:x="784" fg:w="1"/><text x="96.4463%" y="831.50"></text></g><g><title>sqlite3OsRead (1 samples, 0.12%)</title><rect x="96.1963%" y="805" width="0.1227%" height="15" fill="rgb(227,113,0)" fg:x="784" fg:w="1"/><text x="96.4463%" y="815.50"></text></g><g><title>unixRead (1 samples, 0.12%)</title><rect x="96.1963%" y="789" width="0.1227%" height="15" fill="rgb(252,84,27)" fg:x="784" fg:w="1"/><text x="96.4463%" y="799.50"></text></g><g><title>seekAndRead (1 samples, 0.12%)</title><rect x="96.1963%" y="773" width="0.1227%" height="15" fill="rgb(223,145,39)" fg:x="784" fg:w="1"/><text x="96.4463%" y="783.50"></text></g><g><title>read (1 samples, 0.12%)</title><rect x="96.1963%" y="757" width="0.1227%" height="15" fill="rgb(239,219,30)" fg:x="784" fg:w="1"/><text x="96.4463%" y="767.50"></text></g><g><title>blockstack_lib::vm::functions::database::special_contract_call (1 samples, 0.12%)</title><rect x="96.3190%" y="1541" width="0.1227%" height="15" fill="rgb(224,196,39)" fg:x="785" fg:w="1"/><text x="96.5690%" y="1551.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_contract (1 samples, 0.12%)</title><rect x="96.3190%" y="1525" width="0.1227%" height="15" fill="rgb(205,35,43)" fg:x="785" fg:w="1"/><text x="96.5690%" y="1535.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_contract::{{closure}} (1 samples, 0.12%)</title><rect x="96.3190%" y="1509" width="0.1227%" height="15" fill="rgb(228,201,21)" fg:x="785" fg:w="1"/><text x="96.5690%" y="1519.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_function_as_transaction (1 samples, 0.12%)</title><rect x="96.3190%" y="1493" width="0.1227%" height="15" fill="rgb(237,118,16)" fg:x="785" fg:w="1"/><text x="96.5690%" y="1503.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::execute_apply (1 samples, 0.12%)</title><rect x="96.3190%" y="1477" width="0.1227%" height="15" fill="rgb(241,17,19)" fg:x="785" fg:w="1"/><text x="96.5690%" y="1487.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="96.3190%" y="1461" width="0.1227%" height="15" fill="rgb(214,10,25)" fg:x="785" fg:w="1"/><text x="96.5690%" y="1471.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="96.3190%" y="1445" width="0.1227%" height="15" fill="rgb(238,37,29)" fg:x="785" fg:w="1"/><text x="96.5690%" y="1455.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="96.3190%" y="1429" width="0.1227%" height="15" fill="rgb(253,83,25)" fg:x="785" fg:w="1"/><text x="96.5690%" y="1439.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="96.3190%" y="1413" width="0.1227%" height="15" fill="rgb(234,192,12)" fg:x="785" fg:w="1"/><text x="96.5690%" y="1423.50"></text></g><g><title>blockstack_lib::vm::functions::special_let (1 samples, 0.12%)</title><rect x="96.3190%" y="1397" width="0.1227%" height="15" fill="rgb(241,216,45)" fg:x="785" fg:w="1"/><text x="96.5690%" y="1407.50"></text></g><g><title>blockstack_lib::vm::functions::special_let::{{closure}} (1 samples, 0.12%)</title><rect x="96.3190%" y="1381" width="0.1227%" height="15" fill="rgb(242,22,33)" fg:x="785" fg:w="1"/><text x="96.5690%" y="1391.50"></text></g><g><title>blockstack_lib::vm::functions::handle_binding_list (1 samples, 0.12%)</title><rect x="96.3190%" y="1365" width="0.1227%" height="15" fill="rgb(231,105,49)" fg:x="785" fg:w="1"/><text x="96.5690%" y="1375.50"></text></g><g><title>blockstack_lib::vm::functions::special_let::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="96.3190%" y="1349" width="0.1227%" height="15" fill="rgb(218,204,15)" fg:x="785" fg:w="1"/><text x="96.5690%" y="1359.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="96.3190%" y="1333" width="0.1227%" height="15" fill="rgb(235,138,41)" fg:x="785" fg:w="1"/><text x="96.5690%" y="1343.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="96.3190%" y="1317" width="0.1227%" height="15" fill="rgb(246,0,9)" fg:x="785" fg:w="1"/><text x="96.5690%" y="1327.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="96.3190%" y="1301" width="0.1227%" height="15" fill="rgb(210,74,4)" fg:x="785" fg:w="1"/><text x="96.5690%" y="1311.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="96.3190%" y="1285" width="0.1227%" height="15" fill="rgb(250,60,41)" fg:x="785" fg:w="1"/><text x="96.5690%" y="1295.50"></text></g><g><title>blockstack_lib::vm::functions::database::special_contract_call (1 samples, 0.12%)</title><rect x="96.3190%" y="1269" width="0.1227%" height="15" fill="rgb(220,115,12)" fg:x="785" fg:w="1"/><text x="96.5690%" y="1279.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_contract (1 samples, 0.12%)</title><rect x="96.3190%" y="1253" width="0.1227%" height="15" fill="rgb(237,100,13)" fg:x="785" fg:w="1"/><text x="96.5690%" y="1263.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_contract::{{closure}} (1 samples, 0.12%)</title><rect x="96.3190%" y="1237" width="0.1227%" height="15" fill="rgb(213,55,26)" fg:x="785" fg:w="1"/><text x="96.5690%" y="1247.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_function_as_transaction (1 samples, 0.12%)</title><rect x="96.3190%" y="1221" width="0.1227%" height="15" fill="rgb(216,17,4)" fg:x="785" fg:w="1"/><text x="96.5690%" y="1231.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::execute_apply (1 samples, 0.12%)</title><rect x="96.3190%" y="1205" width="0.1227%" height="15" fill="rgb(220,153,47)" fg:x="785" fg:w="1"/><text x="96.5690%" y="1215.50"></text></g><g><title>blockstack_lib::vm::costs::runtime_cost (1 samples, 0.12%)</title><rect x="96.3190%" y="1189" width="0.1227%" height="15" fill="rgb(215,131,9)" fg:x="785" fg:w="1"/><text x="96.5690%" y="1199.50"></text></g><g><title>&lt;blockstack_lib::vm::contexts::Environment as blockstack_lib::vm::costs::CostTracker&gt;::compute_cost (1 samples, 0.12%)</title><rect x="96.3190%" y="1173" width="0.1227%" height="15" fill="rgb(233,46,42)" fg:x="785" fg:w="1"/><text x="96.5690%" y="1183.50"></text></g><g><title>&lt;blockstack_lib::vm::costs::LimitedCostTracker as blockstack_lib::vm::costs::CostTracker&gt;::compute_cost (1 samples, 0.12%)</title><rect x="96.3190%" y="1157" width="0.1227%" height="15" fill="rgb(226,86,7)" fg:x="785" fg:w="1"/><text x="96.5690%" y="1167.50"></text></g><g><title>blockstack_lib::vm::costs::compute_cost (1 samples, 0.12%)</title><rect x="96.3190%" y="1141" width="0.1227%" height="15" fill="rgb(239,226,21)" fg:x="785" fg:w="1"/><text x="96.5690%" y="1151.50"></text></g><g><title>blockstack_lib::vm::eval_all (1 samples, 0.12%)</title><rect x="96.3190%" y="1125" width="0.1227%" height="15" fill="rgb(244,137,22)" fg:x="785" fg:w="1"/><text x="96.5690%" y="1135.50"></text></g><g><title>blockstack_lib::vm::eval_all::{{closure}} (1 samples, 0.12%)</title><rect x="96.3190%" y="1109" width="0.1227%" height="15" fill="rgb(211,139,35)" fg:x="785" fg:w="1"/><text x="96.5690%" y="1119.50"></text></g><g><title>blockstack_lib::vm::contexts::GlobalContext::execute (1 samples, 0.12%)</title><rect x="96.3190%" y="1093" width="0.1227%" height="15" fill="rgb(214,62,50)" fg:x="785" fg:w="1"/><text x="96.5690%" y="1103.50"></text></g><g><title>blockstack_lib::vm::eval_all::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="96.3190%" y="1077" width="0.1227%" height="15" fill="rgb(212,113,44)" fg:x="785" fg:w="1"/><text x="96.5690%" y="1087.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="96.3190%" y="1061" width="0.1227%" height="15" fill="rgb(226,150,43)" fg:x="785" fg:w="1"/><text x="96.5690%" y="1071.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="96.3190%" y="1045" width="0.1227%" height="15" fill="rgb(250,71,37)" fg:x="785" fg:w="1"/><text x="96.5690%" y="1055.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::apply (1 samples, 0.12%)</title><rect x="96.3190%" y="1029" width="0.1227%" height="15" fill="rgb(219,76,19)" fg:x="785" fg:w="1"/><text x="96.5690%" y="1039.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_function_as_transaction (1 samples, 0.12%)</title><rect x="96.3190%" y="1013" width="0.1227%" height="15" fill="rgb(250,39,11)" fg:x="785" fg:w="1"/><text x="96.5690%" y="1023.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::execute_apply (1 samples, 0.12%)</title><rect x="96.3190%" y="997" width="0.1227%" height="15" fill="rgb(230,64,31)" fg:x="785" fg:w="1"/><text x="96.5690%" y="1007.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="96.3190%" y="981" width="0.1227%" height="15" fill="rgb(208,222,23)" fg:x="785" fg:w="1"/><text x="96.5690%" y="991.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="96.3190%" y="965" width="0.1227%" height="15" fill="rgb(227,125,18)" fg:x="785" fg:w="1"/><text x="96.5690%" y="975.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="96.3190%" y="949" width="0.1227%" height="15" fill="rgb(234,210,9)" fg:x="785" fg:w="1"/><text x="96.5690%" y="959.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="96.3190%" y="933" width="0.1227%" height="15" fill="rgb(217,127,24)" fg:x="785" fg:w="1"/><text x="96.5690%" y="943.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::apply (1 samples, 0.12%)</title><rect x="96.3190%" y="917" width="0.1227%" height="15" fill="rgb(239,141,48)" fg:x="785" fg:w="1"/><text x="96.5690%" y="927.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::execute_apply (1 samples, 0.12%)</title><rect x="96.3190%" y="901" width="0.1227%" height="15" fill="rgb(227,109,8)" fg:x="785" fg:w="1"/><text x="96.5690%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.12%)</title><rect x="96.3190%" y="885" width="0.1227%" height="15" fill="rgb(235,184,23)" fg:x="785" fg:w="1"/><text x="96.5690%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="96.3190%" y="869" width="0.1227%" height="15" fill="rgb(227,226,48)" fg:x="785" fg:w="1"/><text x="96.5690%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="96.3190%" y="853" width="0.1227%" height="15" fill="rgb(206,150,11)" fg:x="785" fg:w="1"/><text x="96.5690%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="96.3190%" y="837" width="0.1227%" height="15" fill="rgb(254,2,33)" fg:x="785" fg:w="1"/><text x="96.5690%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.12%)</title><rect x="96.3190%" y="821" width="0.1227%" height="15" fill="rgb(243,160,20)" fg:x="785" fg:w="1"/><text x="96.5690%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.12%)</title><rect x="96.3190%" y="805" width="0.1227%" height="15" fill="rgb(218,208,30)" fg:x="785" fg:w="1"/><text x="96.5690%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.12%)</title><rect x="96.3190%" y="789" width="0.1227%" height="15" fill="rgb(224,120,49)" fg:x="785" fg:w="1"/><text x="96.5690%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.12%)</title><rect x="96.3190%" y="773" width="0.1227%" height="15" fill="rgb(246,12,2)" fg:x="785" fg:w="1"/><text x="96.5690%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.12%)</title><rect x="96.3190%" y="757" width="0.1227%" height="15" fill="rgb(236,117,3)" fg:x="785" fg:w="1"/><text x="96.5690%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.12%)</title><rect x="96.3190%" y="741" width="0.1227%" height="15" fill="rgb(216,128,52)" fg:x="785" fg:w="1"/><text x="96.5690%" y="751.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.12%)</title><rect x="96.3190%" y="725" width="0.1227%" height="15" fill="rgb(246,145,19)" fg:x="785" fg:w="1"/><text x="96.5690%" y="735.50"></text></g><g><title>malloc (1 samples, 0.12%)</title><rect x="96.3190%" y="709" width="0.1227%" height="15" fill="rgb(222,11,46)" fg:x="785" fg:w="1"/><text x="96.5690%" y="719.50"></text></g><g><title>blockstack_lib::vm::functions::special_if (1 samples, 0.12%)</title><rect x="96.4417%" y="1541" width="0.1227%" height="15" fill="rgb(245,82,36)" fg:x="786" fg:w="1"/><text x="96.6917%" y="1551.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="96.4417%" y="1525" width="0.1227%" height="15" fill="rgb(250,73,51)" fg:x="786" fg:w="1"/><text x="96.6917%" y="1535.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="96.4417%" y="1509" width="0.1227%" height="15" fill="rgb(221,189,23)" fg:x="786" fg:w="1"/><text x="96.6917%" y="1519.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="96.4417%" y="1493" width="0.1227%" height="15" fill="rgb(210,33,7)" fg:x="786" fg:w="1"/><text x="96.6917%" y="1503.50"></text></g><g><title>blockstack_lib::vm::lookup_variable (1 samples, 0.12%)</title><rect x="96.4417%" y="1477" width="0.1227%" height="15" fill="rgb(210,107,22)" fg:x="786" fg:w="1"/><text x="96.6917%" y="1487.50"></text></g><g><title>blockstack_lib::vm::costs::runtime_cost (1 samples, 0.12%)</title><rect x="96.4417%" y="1461" width="0.1227%" height="15" fill="rgb(222,116,37)" fg:x="786" fg:w="1"/><text x="96.6917%" y="1471.50"></text></g><g><title>&lt;blockstack_lib::vm::contexts::Environment as blockstack_lib::vm::costs::CostTracker&gt;::compute_cost (1 samples, 0.12%)</title><rect x="96.4417%" y="1445" width="0.1227%" height="15" fill="rgb(254,17,48)" fg:x="786" fg:w="1"/><text x="96.6917%" y="1455.50"></text></g><g><title>&lt;blockstack_lib::vm::costs::LimitedCostTracker as blockstack_lib::vm::costs::CostTracker&gt;::compute_cost (1 samples, 0.12%)</title><rect x="96.4417%" y="1429" width="0.1227%" height="15" fill="rgb(224,36,32)" fg:x="786" fg:w="1"/><text x="96.6917%" y="1439.50"></text></g><g><title>blockstack_lib::vm::costs::compute_cost (1 samples, 0.12%)</title><rect x="96.4417%" y="1413" width="0.1227%" height="15" fill="rgb(232,90,46)" fg:x="786" fg:w="1"/><text x="96.6917%" y="1423.50"></text></g><g><title>blockstack_lib::vm::eval_all (1 samples, 0.12%)</title><rect x="96.4417%" y="1397" width="0.1227%" height="15" fill="rgb(241,66,40)" fg:x="786" fg:w="1"/><text x="96.6917%" y="1407.50"></text></g><g><title>blockstack_lib::vm::eval_all::{{closure}} (1 samples, 0.12%)</title><rect x="96.4417%" y="1381" width="0.1227%" height="15" fill="rgb(249,184,29)" fg:x="786" fg:w="1"/><text x="96.6917%" y="1391.50"></text></g><g><title>blockstack_lib::vm::contexts::GlobalContext::execute (1 samples, 0.12%)</title><rect x="96.4417%" y="1365" width="0.1227%" height="15" fill="rgb(231,181,1)" fg:x="786" fg:w="1"/><text x="96.6917%" y="1375.50"></text></g><g><title>blockstack_lib::vm::eval_all::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="96.4417%" y="1349" width="0.1227%" height="15" fill="rgb(224,94,2)" fg:x="786" fg:w="1"/><text x="96.6917%" y="1359.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="96.4417%" y="1333" width="0.1227%" height="15" fill="rgb(229,170,15)" fg:x="786" fg:w="1"/><text x="96.6917%" y="1343.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="96.4417%" y="1317" width="0.1227%" height="15" fill="rgb(240,127,35)" fg:x="786" fg:w="1"/><text x="96.6917%" y="1327.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::apply (1 samples, 0.12%)</title><rect x="96.4417%" y="1301" width="0.1227%" height="15" fill="rgb(248,196,34)" fg:x="786" fg:w="1"/><text x="96.6917%" y="1311.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_function_as_transaction (1 samples, 0.12%)</title><rect x="96.4417%" y="1285" width="0.1227%" height="15" fill="rgb(236,137,7)" fg:x="786" fg:w="1"/><text x="96.6917%" y="1295.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::execute_apply (1 samples, 0.12%)</title><rect x="96.4417%" y="1269" width="0.1227%" height="15" fill="rgb(235,127,16)" fg:x="786" fg:w="1"/><text x="96.6917%" y="1279.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="96.4417%" y="1253" width="0.1227%" height="15" fill="rgb(250,192,54)" fg:x="786" fg:w="1"/><text x="96.6917%" y="1263.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="96.4417%" y="1237" width="0.1227%" height="15" fill="rgb(218,98,20)" fg:x="786" fg:w="1"/><text x="96.6917%" y="1247.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="96.4417%" y="1221" width="0.1227%" height="15" fill="rgb(230,176,47)" fg:x="786" fg:w="1"/><text x="96.6917%" y="1231.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="96.4417%" y="1205" width="0.1227%" height="15" fill="rgb(244,2,33)" fg:x="786" fg:w="1"/><text x="96.6917%" y="1215.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::apply (1 samples, 0.12%)</title><rect x="96.4417%" y="1189" width="0.1227%" height="15" fill="rgb(231,100,17)" fg:x="786" fg:w="1"/><text x="96.6917%" y="1199.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::execute_apply (1 samples, 0.12%)</title><rect x="96.4417%" y="1173" width="0.1227%" height="15" fill="rgb(245,23,12)" fg:x="786" fg:w="1"/><text x="96.6917%" y="1183.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="96.4417%" y="1157" width="0.1227%" height="15" fill="rgb(249,55,22)" fg:x="786" fg:w="1"/><text x="96.6917%" y="1167.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="96.4417%" y="1141" width="0.1227%" height="15" fill="rgb(207,134,9)" fg:x="786" fg:w="1"/><text x="96.6917%" y="1151.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="96.4417%" y="1125" width="0.1227%" height="15" fill="rgb(218,134,0)" fg:x="786" fg:w="1"/><text x="96.6917%" y="1135.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="96.4417%" y="1109" width="0.1227%" height="15" fill="rgb(213,212,33)" fg:x="786" fg:w="1"/><text x="96.6917%" y="1119.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.12%)</title><rect x="96.4417%" y="1093" width="0.1227%" height="15" fill="rgb(252,106,18)" fg:x="786" fg:w="1"/><text x="96.6917%" y="1103.50"></text></g><g><title>blockstack_lib::vm::apply::{{closure}} (1 samples, 0.12%)</title><rect x="96.4417%" y="1077" width="0.1227%" height="15" fill="rgb(208,126,42)" fg:x="786" fg:w="1"/><text x="96.6917%" y="1087.50"></text></g><g><title>blockstack_lib::vm::callables::NativeHandle::apply (1 samples, 0.12%)</title><rect x="96.4417%" y="1061" width="0.1227%" height="15" fill="rgb(246,175,29)" fg:x="786" fg:w="1"/><text x="96.6917%" y="1071.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="96.4417%" y="1045" width="0.1227%" height="15" fill="rgb(215,13,50)" fg:x="786" fg:w="1"/><text x="96.6917%" y="1055.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="96.4417%" y="1029" width="0.1227%" height="15" fill="rgb(216,172,15)" fg:x="786" fg:w="1"/><text x="96.6917%" y="1039.50"></text></g><g><title>blockstack_lib::vm::functions::arithmetic::native_mul (1 samples, 0.12%)</title><rect x="96.4417%" y="1013" width="0.1227%" height="15" fill="rgb(212,103,13)" fg:x="786" fg:w="1"/><text x="96.6917%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.12%)</title><rect x="96.4417%" y="997" width="0.1227%" height="15" fill="rgb(231,171,36)" fg:x="786" fg:w="1"/><text x="96.6917%" y="1007.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="96.4417%" y="981" width="0.1227%" height="15" fill="rgb(250,123,20)" fg:x="786" fg:w="1"/><text x="96.6917%" y="991.50"></text></g><g><title>core::iter::adapters::process_results (1 samples, 0.12%)</title><rect x="96.4417%" y="965" width="0.1227%" height="15" fill="rgb(212,53,50)" fg:x="786" fg:w="1"/><text x="96.6917%" y="975.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1 samples, 0.12%)</title><rect x="96.4417%" y="949" width="0.1227%" height="15" fill="rgb(243,54,12)" fg:x="786" fg:w="1"/><text x="96.6917%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.12%)</title><rect x="96.4417%" y="933" width="0.1227%" height="15" fill="rgb(234,101,34)" fg:x="786" fg:w="1"/><text x="96.6917%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="96.4417%" y="917" width="0.1227%" height="15" fill="rgb(254,67,22)" fg:x="786" fg:w="1"/><text x="96.6917%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="96.4417%" y="901" width="0.1227%" height="15" fill="rgb(250,35,47)" fg:x="786" fg:w="1"/><text x="96.6917%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="96.4417%" y="885" width="0.1227%" height="15" fill="rgb(226,126,38)" fg:x="786" fg:w="1"/><text x="96.6917%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.12%)</title><rect x="96.4417%" y="869" width="0.1227%" height="15" fill="rgb(216,138,53)" fg:x="786" fg:w="1"/><text x="96.6917%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.12%)</title><rect x="96.4417%" y="853" width="0.1227%" height="15" fill="rgb(246,199,43)" fg:x="786" fg:w="1"/><text x="96.6917%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="96.4417%" y="837" width="0.1227%" height="15" fill="rgb(232,125,11)" fg:x="786" fg:w="1"/><text x="96.6917%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="96.4417%" y="821" width="0.1227%" height="15" fill="rgb(218,219,45)" fg:x="786" fg:w="1"/><text x="96.6917%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.12%)</title><rect x="96.4417%" y="805" width="0.1227%" height="15" fill="rgb(216,102,54)" fg:x="786" fg:w="1"/><text x="96.6917%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.12%)</title><rect x="96.4417%" y="789" width="0.1227%" height="15" fill="rgb(250,228,7)" fg:x="786" fg:w="1"/><text x="96.6917%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.12%)</title><rect x="96.4417%" y="773" width="0.1227%" height="15" fill="rgb(226,125,25)" fg:x="786" fg:w="1"/><text x="96.6917%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.12%)</title><rect x="96.4417%" y="757" width="0.1227%" height="15" fill="rgb(224,165,27)" fg:x="786" fg:w="1"/><text x="96.6917%" y="767.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.12%)</title><rect x="96.4417%" y="741" width="0.1227%" height="15" fill="rgb(233,86,3)" fg:x="786" fg:w="1"/><text x="96.6917%" y="751.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.12%)</title><rect x="96.4417%" y="725" width="0.1227%" height="15" fill="rgb(228,116,20)" fg:x="786" fg:w="1"/><text x="96.6917%" y="735.50"></text></g><g><title>__libc_realloc (1 samples, 0.12%)</title><rect x="96.4417%" y="709" width="0.1227%" height="15" fill="rgb(209,192,17)" fg:x="786" fg:w="1"/><text x="96.6917%" y="719.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="96.5644%" y="1477" width="0.1227%" height="15" fill="rgb(224,88,34)" fg:x="787" fg:w="1"/><text x="96.8144%" y="1487.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="96.5644%" y="1461" width="0.1227%" height="15" fill="rgb(233,38,6)" fg:x="787" fg:w="1"/><text x="96.8144%" y="1471.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="96.5644%" y="1445" width="0.1227%" height="15" fill="rgb(212,59,30)" fg:x="787" fg:w="1"/><text x="96.8144%" y="1455.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="96.5644%" y="1429" width="0.1227%" height="15" fill="rgb(213,80,3)" fg:x="787" fg:w="1"/><text x="96.8144%" y="1439.50"></text></g><g><title>blockstack_lib::vm::functions::database::special_contract_call (1 samples, 0.12%)</title><rect x="96.5644%" y="1413" width="0.1227%" height="15" fill="rgb(251,178,7)" fg:x="787" fg:w="1"/><text x="96.8144%" y="1423.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_contract (1 samples, 0.12%)</title><rect x="96.5644%" y="1397" width="0.1227%" height="15" fill="rgb(213,154,26)" fg:x="787" fg:w="1"/><text x="96.8144%" y="1407.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_contract::{{closure}} (1 samples, 0.12%)</title><rect x="96.5644%" y="1381" width="0.1227%" height="15" fill="rgb(238,165,49)" fg:x="787" fg:w="1"/><text x="96.8144%" y="1391.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get_contract (1 samples, 0.12%)</title><rect x="96.5644%" y="1365" width="0.1227%" height="15" fill="rgb(248,91,46)" fg:x="787" fg:w="1"/><text x="96.8144%" y="1375.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::fetch_metadata (1 samples, 0.12%)</title><rect x="96.5644%" y="1349" width="0.1227%" height="15" fill="rgb(244,21,52)" fg:x="787" fg:w="1"/><text x="96.8144%" y="1359.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get_metadata (1 samples, 0.12%)</title><rect x="96.5644%" y="1333" width="0.1227%" height="15" fill="rgb(247,122,20)" fg:x="787" fg:w="1"/><text x="96.8144%" y="1343.50"></text></g><g><title>blockstack_lib::vm::database::clarity_store::ClarityBackingStore::get_metadata (1 samples, 0.12%)</title><rect x="96.5644%" y="1317" width="0.1227%" height="15" fill="rgb(218,27,9)" fg:x="787" fg:w="1"/><text x="96.8144%" y="1327.50"></text></g><g><title>blockstack_lib::vm::database::clarity_store::ClarityBackingStore::get_contract_hash (1 samples, 0.12%)</title><rect x="96.5644%" y="1301" width="0.1227%" height="15" fill="rgb(246,7,6)" fg:x="787" fg:w="1"/><text x="96.8144%" y="1311.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::get (1 samples, 0.12%)</title><rect x="96.5644%" y="1285" width="0.1227%" height="15" fill="rgb(227,135,54)" fg:x="787" fg:w="1"/><text x="96.8144%" y="1295.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get (1 samples, 0.12%)</title><rect x="96.5644%" y="1269" width="0.1227%" height="15" fill="rgb(247,14,11)" fg:x="787" fg:w="1"/><text x="96.8144%" y="1279.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt; as blockstack_lib::chainstate::stacks::index::marf::MarfConnection&lt;T&gt;&gt;::with_conn (1 samples, 0.12%)</title><rect x="96.5644%" y="1253" width="0.1227%" height="15" fill="rgb(206,149,34)" fg:x="787" fg:w="1"/><text x="96.8144%" y="1263.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get::{{closure}} (1 samples, 0.12%)</title><rect x="96.5644%" y="1237" width="0.1227%" height="15" fill="rgb(227,228,4)" fg:x="787" fg:w="1"/><text x="96.8144%" y="1247.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_by_key (1 samples, 0.12%)</title><rect x="96.5644%" y="1221" width="0.1227%" height="15" fill="rgb(238,218,28)" fg:x="787" fg:w="1"/><text x="96.8144%" y="1231.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_path (1 samples, 0.12%)</title><rect x="96.5644%" y="1205" width="0.1227%" height="15" fill="rgb(252,86,40)" fg:x="787" fg:w="1"/><text x="96.8144%" y="1215.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk (1 samples, 0.12%)</title><rect x="96.5644%" y="1189" width="0.1227%" height="15" fill="rgb(251,225,11)" fg:x="787" fg:w="1"/><text x="96.8144%" y="1199.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_backptr (1 samples, 0.12%)</title><rect x="96.5644%" y="1173" width="0.1227%" height="15" fill="rgb(206,46,49)" fg:x="787" fg:w="1"/><text x="96.8144%" y="1183.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_backptr (1 samples, 0.12%)</title><rect x="96.5644%" y="1157" width="0.1227%" height="15" fill="rgb(245,128,24)" fg:x="787" fg:w="1"/><text x="96.8144%" y="1167.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (1 samples, 0.12%)</title><rect x="96.5644%" y="1141" width="0.1227%" height="15" fill="rgb(219,177,34)" fg:x="787" fg:w="1"/><text x="96.8144%" y="1151.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (1 samples, 0.12%)</title><rect x="96.5644%" y="1125" width="0.1227%" height="15" fill="rgb(218,60,48)" fg:x="787" fg:w="1"/><text x="96.8144%" y="1135.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (1 samples, 0.12%)</title><rect x="96.5644%" y="1109" width="0.1227%" height="15" fill="rgb(221,11,5)" fg:x="787" fg:w="1"/><text x="96.8144%" y="1119.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (1 samples, 0.12%)</title><rect x="96.5644%" y="1093" width="0.1227%" height="15" fill="rgb(220,148,13)" fg:x="787" fg:w="1"/><text x="96.8144%" y="1103.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (1 samples, 0.12%)</title><rect x="96.5644%" y="1077" width="0.1227%" height="15" fill="rgb(210,16,3)" fg:x="787" fg:w="1"/><text x="96.8144%" y="1087.50"></text></g><g><title>std::io::Read::read_exact (1 samples, 0.12%)</title><rect x="96.5644%" y="1061" width="0.1227%" height="15" fill="rgb(236,80,2)" fg:x="787" fg:w="1"/><text x="96.8144%" y="1071.50"></text></g><g><title>std::io::default_read_exact (1 samples, 0.12%)</title><rect x="96.5644%" y="1045" width="0.1227%" height="15" fill="rgb(239,129,19)" fg:x="787" fg:w="1"/><text x="96.8144%" y="1055.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="96.5644%" y="1029" width="0.1227%" height="15" fill="rgb(220,106,35)" fg:x="787" fg:w="1"/><text x="96.8144%" y="1039.50"></text></g><g><title>sqlite3_blob_read (1 samples, 0.12%)</title><rect x="96.5644%" y="1013" width="0.1227%" height="15" fill="rgb(252,139,45)" fg:x="787" fg:w="1"/><text x="96.8144%" y="1023.50"></text></g><g><title>blobReadWrite (1 samples, 0.12%)</title><rect x="96.5644%" y="997" width="0.1227%" height="15" fill="rgb(229,8,36)" fg:x="787" fg:w="1"/><text x="96.8144%" y="1007.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="96.5644%" y="981" width="0.1227%" height="15" fill="rgb(230,126,33)" fg:x="787" fg:w="1"/><text x="96.8144%" y="991.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="96.5644%" y="965" width="0.1227%" height="15" fill="rgb(239,140,21)" fg:x="787" fg:w="1"/><text x="96.8144%" y="975.50"></text></g><g><title>accessPayload (1 samples, 0.12%)</title><rect x="96.5644%" y="949" width="0.1227%" height="15" fill="rgb(254,104,9)" fg:x="787" fg:w="1"/><text x="96.8144%" y="959.50"></text></g><g><title>getOverflowPage (1 samples, 0.12%)</title><rect x="96.5644%" y="933" width="0.1227%" height="15" fill="rgb(239,52,14)" fg:x="787" fg:w="1"/><text x="96.8144%" y="943.50"></text></g><g><title>btreeGetPage (1 samples, 0.12%)</title><rect x="96.5644%" y="917" width="0.1227%" height="15" fill="rgb(208,227,44)" fg:x="787" fg:w="1"/><text x="96.8144%" y="927.50"></text></g><g><title>sqlite3PagerGet (1 samples, 0.12%)</title><rect x="96.5644%" y="901" width="0.1227%" height="15" fill="rgb(246,18,19)" fg:x="787" fg:w="1"/><text x="96.8144%" y="911.50"></text></g><g><title>getPageMMap (1 samples, 0.12%)</title><rect x="96.5644%" y="885" width="0.1227%" height="15" fill="rgb(235,228,25)" fg:x="787" fg:w="1"/><text x="96.8144%" y="895.50"></text></g><g><title>getPageNormal (1 samples, 0.12%)</title><rect x="96.5644%" y="869" width="0.1227%" height="15" fill="rgb(240,156,20)" fg:x="787" fg:w="1"/><text x="96.8144%" y="879.50"></text></g><g><title>readDbPage (1 samples, 0.12%)</title><rect x="96.5644%" y="853" width="0.1227%" height="15" fill="rgb(224,8,20)" fg:x="787" fg:w="1"/><text x="96.8144%" y="863.50"></text></g><g><title>sqlite3OsRead (1 samples, 0.12%)</title><rect x="96.5644%" y="837" width="0.1227%" height="15" fill="rgb(214,12,52)" fg:x="787" fg:w="1"/><text x="96.8144%" y="847.50"></text></g><g><title>unixRead (1 samples, 0.12%)</title><rect x="96.5644%" y="821" width="0.1227%" height="15" fill="rgb(211,220,47)" fg:x="787" fg:w="1"/><text x="96.8144%" y="831.50"></text></g><g><title>seekAndRead (1 samples, 0.12%)</title><rect x="96.5644%" y="805" width="0.1227%" height="15" fill="rgb(250,173,5)" fg:x="787" fg:w="1"/><text x="96.8144%" y="815.50"></text></g><g><title>read (1 samples, 0.12%)</title><rect x="96.5644%" y="789" width="0.1227%" height="15" fill="rgb(250,125,52)" fg:x="787" fg:w="1"/><text x="96.8144%" y="799.50"></text></g><g><title>blockstack_lib::vm::eval (2 samples, 0.25%)</title><rect x="96.5644%" y="1509" width="0.2454%" height="15" fill="rgb(209,133,18)" fg:x="787" fg:w="2"/><text x="96.8144%" y="1519.50"></text></g><g><title>blockstack_lib::vm::apply (2 samples, 0.25%)</title><rect x="96.5644%" y="1493" width="0.2454%" height="15" fill="rgb(216,173,22)" fg:x="787" fg:w="2"/><text x="96.8144%" y="1503.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="96.6871%" y="1477" width="0.1227%" height="15" fill="rgb(205,3,22)" fg:x="788" fg:w="1"/><text x="96.9371%" y="1487.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="96.6871%" y="1461" width="0.1227%" height="15" fill="rgb(248,22,20)" fg:x="788" fg:w="1"/><text x="96.9371%" y="1471.50"></text></g><g><title>blockstack_lib::vm::functions::special_let (1 samples, 0.12%)</title><rect x="96.6871%" y="1445" width="0.1227%" height="15" fill="rgb(233,6,29)" fg:x="788" fg:w="1"/><text x="96.9371%" y="1455.50"></text></g><g><title>blockstack_lib::vm::functions::special_let::{{closure}} (1 samples, 0.12%)</title><rect x="96.6871%" y="1429" width="0.1227%" height="15" fill="rgb(240,22,54)" fg:x="788" fg:w="1"/><text x="96.9371%" y="1439.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="96.6871%" y="1413" width="0.1227%" height="15" fill="rgb(231,133,32)" fg:x="788" fg:w="1"/><text x="96.9371%" y="1423.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="96.6871%" y="1397" width="0.1227%" height="15" fill="rgb(248,193,4)" fg:x="788" fg:w="1"/><text x="96.9371%" y="1407.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="96.6871%" y="1381" width="0.1227%" height="15" fill="rgb(211,178,46)" fg:x="788" fg:w="1"/><text x="96.9371%" y="1391.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="96.6871%" y="1365" width="0.1227%" height="15" fill="rgb(224,5,42)" fg:x="788" fg:w="1"/><text x="96.9371%" y="1375.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::apply (1 samples, 0.12%)</title><rect x="96.6871%" y="1349" width="0.1227%" height="15" fill="rgb(239,176,25)" fg:x="788" fg:w="1"/><text x="96.9371%" y="1359.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_function_as_transaction (1 samples, 0.12%)</title><rect x="96.6871%" y="1333" width="0.1227%" height="15" fill="rgb(245,187,50)" fg:x="788" fg:w="1"/><text x="96.9371%" y="1343.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::execute_apply (1 samples, 0.12%)</title><rect x="96.6871%" y="1317" width="0.1227%" height="15" fill="rgb(248,24,15)" fg:x="788" fg:w="1"/><text x="96.9371%" y="1327.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="96.6871%" y="1301" width="0.1227%" height="15" fill="rgb(205,166,13)" fg:x="788" fg:w="1"/><text x="96.9371%" y="1311.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="96.6871%" y="1285" width="0.1227%" height="15" fill="rgb(208,114,23)" fg:x="788" fg:w="1"/><text x="96.9371%" y="1295.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="96.6871%" y="1269" width="0.1227%" height="15" fill="rgb(239,127,18)" fg:x="788" fg:w="1"/><text x="96.9371%" y="1279.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="96.6871%" y="1253" width="0.1227%" height="15" fill="rgb(219,154,28)" fg:x="788" fg:w="1"/><text x="96.9371%" y="1263.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="96.6871%" y="1237" width="0.1227%" height="15" fill="rgb(225,157,23)" fg:x="788" fg:w="1"/><text x="96.9371%" y="1247.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="96.6871%" y="1221" width="0.1227%" height="15" fill="rgb(219,8,6)" fg:x="788" fg:w="1"/><text x="96.9371%" y="1231.50"></text></g><g><title>blockstack_lib::vm::functions::special_let (1 samples, 0.12%)</title><rect x="96.6871%" y="1205" width="0.1227%" height="15" fill="rgb(212,47,6)" fg:x="788" fg:w="1"/><text x="96.9371%" y="1215.50"></text></g><g><title>blockstack_lib::vm::functions::special_let::{{closure}} (1 samples, 0.12%)</title><rect x="96.6871%" y="1189" width="0.1227%" height="15" fill="rgb(224,190,4)" fg:x="788" fg:w="1"/><text x="96.9371%" y="1199.50"></text></g><g><title>blockstack_lib::vm::functions::handle_binding_list (1 samples, 0.12%)</title><rect x="96.6871%" y="1173" width="0.1227%" height="15" fill="rgb(239,183,29)" fg:x="788" fg:w="1"/><text x="96.9371%" y="1183.50"></text></g><g><title>blockstack_lib::vm::functions::special_let::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="96.6871%" y="1157" width="0.1227%" height="15" fill="rgb(213,57,7)" fg:x="788" fg:w="1"/><text x="96.9371%" y="1167.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="96.6871%" y="1141" width="0.1227%" height="15" fill="rgb(216,148,1)" fg:x="788" fg:w="1"/><text x="96.9371%" y="1151.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="96.6871%" y="1125" width="0.1227%" height="15" fill="rgb(236,182,29)" fg:x="788" fg:w="1"/><text x="96.9371%" y="1135.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::apply (1 samples, 0.12%)</title><rect x="96.6871%" y="1109" width="0.1227%" height="15" fill="rgb(244,120,48)" fg:x="788" fg:w="1"/><text x="96.9371%" y="1119.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_function_as_transaction (1 samples, 0.12%)</title><rect x="96.6871%" y="1093" width="0.1227%" height="15" fill="rgb(206,71,34)" fg:x="788" fg:w="1"/><text x="96.9371%" y="1103.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::execute_apply (1 samples, 0.12%)</title><rect x="96.6871%" y="1077" width="0.1227%" height="15" fill="rgb(242,32,6)" fg:x="788" fg:w="1"/><text x="96.9371%" y="1087.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="96.6871%" y="1061" width="0.1227%" height="15" fill="rgb(241,35,3)" fg:x="788" fg:w="1"/><text x="96.9371%" y="1071.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="96.6871%" y="1045" width="0.1227%" height="15" fill="rgb(222,62,19)" fg:x="788" fg:w="1"/><text x="96.9371%" y="1055.50"></text></g><g><title>blockstack_lib::vm::costs::runtime_cost (1 samples, 0.12%)</title><rect x="96.6871%" y="1029" width="0.1227%" height="15" fill="rgb(223,110,41)" fg:x="788" fg:w="1"/><text x="96.9371%" y="1039.50"></text></g><g><title>&lt;blockstack_lib::vm::contexts::Environment as blockstack_lib::vm::costs::CostTracker&gt;::compute_cost (1 samples, 0.12%)</title><rect x="96.6871%" y="1013" width="0.1227%" height="15" fill="rgb(208,224,4)" fg:x="788" fg:w="1"/><text x="96.9371%" y="1023.50"></text></g><g><title>&lt;blockstack_lib::vm::costs::LimitedCostTracker as blockstack_lib::vm::costs::CostTracker&gt;::compute_cost (1 samples, 0.12%)</title><rect x="96.6871%" y="997" width="0.1227%" height="15" fill="rgb(241,137,19)" fg:x="788" fg:w="1"/><text x="96.9371%" y="1007.50"></text></g><g><title>blockstack_lib::vm::costs::compute_cost (1 samples, 0.12%)</title><rect x="96.6871%" y="981" width="0.1227%" height="15" fill="rgb(244,24,17)" fg:x="788" fg:w="1"/><text x="96.9371%" y="991.50"></text></g><g><title>blockstack_lib::vm::eval_all (1 samples, 0.12%)</title><rect x="96.6871%" y="965" width="0.1227%" height="15" fill="rgb(245,178,49)" fg:x="788" fg:w="1"/><text x="96.9371%" y="975.50"></text></g><g><title>blockstack_lib::vm::eval_all::{{closure}} (1 samples, 0.12%)</title><rect x="96.6871%" y="949" width="0.1227%" height="15" fill="rgb(219,160,38)" fg:x="788" fg:w="1"/><text x="96.9371%" y="959.50"></text></g><g><title>blockstack_lib::vm::contexts::GlobalContext::execute (1 samples, 0.12%)</title><rect x="96.6871%" y="933" width="0.1227%" height="15" fill="rgb(228,137,14)" fg:x="788" fg:w="1"/><text x="96.9371%" y="943.50"></text></g><g><title>blockstack_lib::vm::eval_all::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="96.6871%" y="917" width="0.1227%" height="15" fill="rgb(237,134,11)" fg:x="788" fg:w="1"/><text x="96.9371%" y="927.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="96.6871%" y="901" width="0.1227%" height="15" fill="rgb(211,126,44)" fg:x="788" fg:w="1"/><text x="96.9371%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;blockstack_lib::vm::callables::CallableType&gt; (1 samples, 0.12%)</title><rect x="96.6871%" y="885" width="0.1227%" height="15" fill="rgb(226,171,33)" fg:x="788" fg:w="1"/><text x="96.9371%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;blockstack_lib::vm::callables::DefinedFunction&gt; (1 samples, 0.12%)</title><rect x="96.6871%" y="869" width="0.1227%" height="15" fill="rgb(253,99,13)" fg:x="788" fg:w="1"/><text x="96.9371%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;blockstack_lib::vm::types::signatures::TypeSignature&gt;&gt; (1 samples, 0.12%)</title><rect x="96.6871%" y="853" width="0.1227%" height="15" fill="rgb(244,48,7)" fg:x="788" fg:w="1"/><text x="96.9371%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="96.6871%" y="837" width="0.1227%" height="15" fill="rgb(244,217,54)" fg:x="788" fg:w="1"/><text x="96.9371%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;[blockstack_lib::vm::types::signatures::TypeSignature]&gt; (1 samples, 0.12%)</title><rect x="96.6871%" y="821" width="0.1227%" height="15" fill="rgb(224,15,18)" fg:x="788" fg:w="1"/><text x="96.9371%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;blockstack_lib::vm::types::signatures::TypeSignature&gt; (1 samples, 0.12%)</title><rect x="96.6871%" y="805" width="0.1227%" height="15" fill="rgb(244,99,12)" fg:x="788" fg:w="1"/><text x="96.9371%" y="815.50"></text></g><g><title>blockstack_lib::vm::functions::special_let (3 samples, 0.37%)</title><rect x="96.5644%" y="1541" width="0.3681%" height="15" fill="rgb(233,226,8)" fg:x="787" fg:w="3"/><text x="96.8144%" y="1551.50"></text></g><g><title>blockstack_lib::vm::functions::special_let::{{closure}} (3 samples, 0.37%)</title><rect x="96.5644%" y="1525" width="0.3681%" height="15" fill="rgb(229,211,3)" fg:x="787" fg:w="3"/><text x="96.8144%" y="1535.50"></text></g><g><title>blockstack_lib::vm::functions::handle_binding_list (1 samples, 0.12%)</title><rect x="96.8098%" y="1509" width="0.1227%" height="15" fill="rgb(216,140,21)" fg:x="789" fg:w="1"/><text x="97.0598%" y="1519.50"></text></g><g><title>blockstack_lib::vm::functions::special_let::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="96.8098%" y="1493" width="0.1227%" height="15" fill="rgb(234,122,30)" fg:x="789" fg:w="1"/><text x="97.0598%" y="1503.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="96.8098%" y="1477" width="0.1227%" height="15" fill="rgb(236,25,46)" fg:x="789" fg:w="1"/><text x="97.0598%" y="1487.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="96.8098%" y="1461" width="0.1227%" height="15" fill="rgb(217,52,54)" fg:x="789" fg:w="1"/><text x="97.0598%" y="1471.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="96.8098%" y="1445" width="0.1227%" height="15" fill="rgb(222,29,26)" fg:x="789" fg:w="1"/><text x="97.0598%" y="1455.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="96.8098%" y="1429" width="0.1227%" height="15" fill="rgb(216,177,29)" fg:x="789" fg:w="1"/><text x="97.0598%" y="1439.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::apply (1 samples, 0.12%)</title><rect x="96.8098%" y="1413" width="0.1227%" height="15" fill="rgb(247,136,51)" fg:x="789" fg:w="1"/><text x="97.0598%" y="1423.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_function_as_transaction (1 samples, 0.12%)</title><rect x="96.8098%" y="1397" width="0.1227%" height="15" fill="rgb(231,47,47)" fg:x="789" fg:w="1"/><text x="97.0598%" y="1407.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::execute_apply (1 samples, 0.12%)</title><rect x="96.8098%" y="1381" width="0.1227%" height="15" fill="rgb(211,192,36)" fg:x="789" fg:w="1"/><text x="97.0598%" y="1391.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="96.8098%" y="1365" width="0.1227%" height="15" fill="rgb(229,156,32)" fg:x="789" fg:w="1"/><text x="97.0598%" y="1375.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="96.8098%" y="1349" width="0.1227%" height="15" fill="rgb(248,213,20)" fg:x="789" fg:w="1"/><text x="97.0598%" y="1359.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="96.8098%" y="1333" width="0.1227%" height="15" fill="rgb(217,64,7)" fg:x="789" fg:w="1"/><text x="97.0598%" y="1343.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="96.8098%" y="1317" width="0.1227%" height="15" fill="rgb(232,142,8)" fg:x="789" fg:w="1"/><text x="97.0598%" y="1327.50"></text></g><g><title>blockstack_lib::vm::functions::database::special_fetch_entry (1 samples, 0.12%)</title><rect x="96.8098%" y="1301" width="0.1227%" height="15" fill="rgb(224,92,44)" fg:x="789" fg:w="1"/><text x="97.0598%" y="1311.50"></text></g><g><title>blockstack_lib::vm::functions::database::special_fetch_entry_v205 (1 samples, 0.12%)</title><rect x="96.8098%" y="1285" width="0.1227%" height="15" fill="rgb(214,169,17)" fg:x="789" fg:w="1"/><text x="97.0598%" y="1295.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::fetch_entry_with_size (1 samples, 0.12%)</title><rect x="96.8098%" y="1269" width="0.1227%" height="15" fill="rgb(210,59,37)" fg:x="789" fg:w="1"/><text x="97.0598%" y="1279.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get_value (1 samples, 0.12%)</title><rect x="96.8098%" y="1253" width="0.1227%" height="15" fill="rgb(214,116,48)" fg:x="789" fg:w="1"/><text x="97.0598%" y="1263.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get_value (1 samples, 0.12%)</title><rect x="96.8098%" y="1237" width="0.1227%" height="15" fill="rgb(244,191,6)" fg:x="789" fg:w="1"/><text x="97.0598%" y="1247.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.12%)</title><rect x="96.8098%" y="1221" width="0.1227%" height="15" fill="rgb(241,50,52)" fg:x="789" fg:w="1"/><text x="97.0598%" y="1231.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get_value::{{closure}} (1 samples, 0.12%)</title><rect x="96.8098%" y="1205" width="0.1227%" height="15" fill="rgb(236,75,39)" fg:x="789" fg:w="1"/><text x="97.0598%" y="1215.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::get (1 samples, 0.12%)</title><rect x="96.8098%" y="1189" width="0.1227%" height="15" fill="rgb(236,99,0)" fg:x="789" fg:w="1"/><text x="97.0598%" y="1199.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get (1 samples, 0.12%)</title><rect x="96.8098%" y="1173" width="0.1227%" height="15" fill="rgb(207,202,15)" fg:x="789" fg:w="1"/><text x="97.0598%" y="1183.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt; as blockstack_lib::chainstate::stacks::index::marf::MarfConnection&lt;T&gt;&gt;::with_conn (1 samples, 0.12%)</title><rect x="96.8098%" y="1157" width="0.1227%" height="15" fill="rgb(233,207,14)" fg:x="789" fg:w="1"/><text x="97.0598%" y="1167.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get::{{closure}} (1 samples, 0.12%)</title><rect x="96.8098%" y="1141" width="0.1227%" height="15" fill="rgb(226,27,51)" fg:x="789" fg:w="1"/><text x="97.0598%" y="1151.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_by_key (1 samples, 0.12%)</title><rect x="96.8098%" y="1125" width="0.1227%" height="15" fill="rgb(206,104,42)" fg:x="789" fg:w="1"/><text x="97.0598%" y="1135.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_path (1 samples, 0.12%)</title><rect x="96.8098%" y="1109" width="0.1227%" height="15" fill="rgb(212,225,4)" fg:x="789" fg:w="1"/><text x="97.0598%" y="1119.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk (1 samples, 0.12%)</title><rect x="96.8098%" y="1093" width="0.1227%" height="15" fill="rgb(233,96,42)" fg:x="789" fg:w="1"/><text x="97.0598%" y="1103.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_backptr (1 samples, 0.12%)</title><rect x="96.8098%" y="1077" width="0.1227%" height="15" fill="rgb(229,21,32)" fg:x="789" fg:w="1"/><text x="97.0598%" y="1087.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_backptr (1 samples, 0.12%)</title><rect x="96.8098%" y="1061" width="0.1227%" height="15" fill="rgb(226,216,24)" fg:x="789" fg:w="1"/><text x="97.0598%" y="1071.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (1 samples, 0.12%)</title><rect x="96.8098%" y="1045" width="0.1227%" height="15" fill="rgb(221,163,17)" fg:x="789" fg:w="1"/><text x="97.0598%" y="1055.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (1 samples, 0.12%)</title><rect x="96.8098%" y="1029" width="0.1227%" height="15" fill="rgb(216,216,42)" fg:x="789" fg:w="1"/><text x="97.0598%" y="1039.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (1 samples, 0.12%)</title><rect x="96.8098%" y="1013" width="0.1227%" height="15" fill="rgb(240,118,7)" fg:x="789" fg:w="1"/><text x="97.0598%" y="1023.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (1 samples, 0.12%)</title><rect x="96.8098%" y="997" width="0.1227%" height="15" fill="rgb(221,67,37)" fg:x="789" fg:w="1"/><text x="97.0598%" y="1007.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (1 samples, 0.12%)</title><rect x="96.8098%" y="981" width="0.1227%" height="15" fill="rgb(241,32,44)" fg:x="789" fg:w="1"/><text x="97.0598%" y="991.50"></text></g><g><title>std::io::Read::read_exact (1 samples, 0.12%)</title><rect x="96.8098%" y="965" width="0.1227%" height="15" fill="rgb(235,204,43)" fg:x="789" fg:w="1"/><text x="97.0598%" y="975.50"></text></g><g><title>std::io::default_read_exact (1 samples, 0.12%)</title><rect x="96.8098%" y="949" width="0.1227%" height="15" fill="rgb(213,116,10)" fg:x="789" fg:w="1"/><text x="97.0598%" y="959.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="96.8098%" y="933" width="0.1227%" height="15" fill="rgb(239,15,48)" fg:x="789" fg:w="1"/><text x="97.0598%" y="943.50"></text></g><g><title>sqlite3_blob_read (1 samples, 0.12%)</title><rect x="96.8098%" y="917" width="0.1227%" height="15" fill="rgb(207,123,36)" fg:x="789" fg:w="1"/><text x="97.0598%" y="927.50"></text></g><g><title>blobReadWrite (1 samples, 0.12%)</title><rect x="96.8098%" y="901" width="0.1227%" height="15" fill="rgb(209,103,30)" fg:x="789" fg:w="1"/><text x="97.0598%" y="911.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="96.8098%" y="885" width="0.1227%" height="15" fill="rgb(238,100,19)" fg:x="789" fg:w="1"/><text x="97.0598%" y="895.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="96.8098%" y="869" width="0.1227%" height="15" fill="rgb(244,30,14)" fg:x="789" fg:w="1"/><text x="97.0598%" y="879.50"></text></g><g><title>accessPayload (1 samples, 0.12%)</title><rect x="96.8098%" y="853" width="0.1227%" height="15" fill="rgb(249,174,6)" fg:x="789" fg:w="1"/><text x="97.0598%" y="863.50"></text></g><g><title>getOverflowPage (1 samples, 0.12%)</title><rect x="96.8098%" y="837" width="0.1227%" height="15" fill="rgb(235,213,41)" fg:x="789" fg:w="1"/><text x="97.0598%" y="847.50"></text></g><g><title>btreeGetPage (1 samples, 0.12%)</title><rect x="96.8098%" y="821" width="0.1227%" height="15" fill="rgb(213,118,6)" fg:x="789" fg:w="1"/><text x="97.0598%" y="831.50"></text></g><g><title>sqlite3PagerGet (1 samples, 0.12%)</title><rect x="96.8098%" y="805" width="0.1227%" height="15" fill="rgb(235,44,51)" fg:x="789" fg:w="1"/><text x="97.0598%" y="815.50"></text></g><g><title>getPageMMap (1 samples, 0.12%)</title><rect x="96.8098%" y="789" width="0.1227%" height="15" fill="rgb(217,9,53)" fg:x="789" fg:w="1"/><text x="97.0598%" y="799.50"></text></g><g><title>getPageNormal (1 samples, 0.12%)</title><rect x="96.8098%" y="773" width="0.1227%" height="15" fill="rgb(237,172,34)" fg:x="789" fg:w="1"/><text x="97.0598%" y="783.50"></text></g><g><title>sqlite3PcacheFetch (1 samples, 0.12%)</title><rect x="96.8098%" y="757" width="0.1227%" height="15" fill="rgb(206,206,11)" fg:x="789" fg:w="1"/><text x="97.0598%" y="767.50"></text></g><g><title>pcache1Fetch (1 samples, 0.12%)</title><rect x="96.8098%" y="741" width="0.1227%" height="15" fill="rgb(214,149,29)" fg:x="789" fg:w="1"/><text x="97.0598%" y="751.50"></text></g><g><title>pcache1FetchWithMutex (1 samples, 0.12%)</title><rect x="96.8098%" y="725" width="0.1227%" height="15" fill="rgb(208,123,3)" fg:x="789" fg:w="1"/><text x="97.0598%" y="735.50"></text></g><g><title>pcache1FetchNoMutex (1 samples, 0.12%)</title><rect x="96.8098%" y="709" width="0.1227%" height="15" fill="rgb(229,126,4)" fg:x="789" fg:w="1"/><text x="97.0598%" y="719.50"></text></g><g><title>pcache1FetchNoMutex (1 samples, 0.12%)</title><rect x="96.8098%" y="693" width="0.1227%" height="15" fill="rgb(222,92,36)" fg:x="789" fg:w="1"/><text x="97.0598%" y="703.50"></text></g><g><title>pcache1FetchStage2 (1 samples, 0.12%)</title><rect x="96.8098%" y="677" width="0.1227%" height="15" fill="rgb(216,39,41)" fg:x="789" fg:w="1"/><text x="97.0598%" y="687.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="96.9325%" y="1477" width="0.1227%" height="15" fill="rgb(253,127,28)" fg:x="790" fg:w="1"/><text x="97.1825%" y="1487.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="96.9325%" y="1461" width="0.1227%" height="15" fill="rgb(249,152,51)" fg:x="790" fg:w="1"/><text x="97.1825%" y="1471.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="96.9325%" y="1445" width="0.1227%" height="15" fill="rgb(209,123,42)" fg:x="790" fg:w="1"/><text x="97.1825%" y="1455.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="96.9325%" y="1429" width="0.1227%" height="15" fill="rgb(241,118,22)" fg:x="790" fg:w="1"/><text x="97.1825%" y="1439.50"></text></g><g><title>blockstack_lib::vm::functions::database::special_contract_call (1 samples, 0.12%)</title><rect x="96.9325%" y="1413" width="0.1227%" height="15" fill="rgb(208,25,7)" fg:x="790" fg:w="1"/><text x="97.1825%" y="1423.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get_contract (1 samples, 0.12%)</title><rect x="96.9325%" y="1397" width="0.1227%" height="15" fill="rgb(243,144,39)" fg:x="790" fg:w="1"/><text x="97.1825%" y="1407.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::fetch_metadata (1 samples, 0.12%)</title><rect x="96.9325%" y="1381" width="0.1227%" height="15" fill="rgb(250,50,5)" fg:x="790" fg:w="1"/><text x="97.1825%" y="1391.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get_metadata (1 samples, 0.12%)</title><rect x="96.9325%" y="1365" width="0.1227%" height="15" fill="rgb(207,67,11)" fg:x="790" fg:w="1"/><text x="97.1825%" y="1375.50"></text></g><g><title>blockstack_lib::vm::database::clarity_store::ClarityBackingStore::get_metadata (1 samples, 0.12%)</title><rect x="96.9325%" y="1349" width="0.1227%" height="15" fill="rgb(245,204,40)" fg:x="790" fg:w="1"/><text x="97.1825%" y="1359.50"></text></g><g><title>blockstack_lib::vm::database::clarity_store::ClarityBackingStore::get_contract_hash (1 samples, 0.12%)</title><rect x="96.9325%" y="1333" width="0.1227%" height="15" fill="rgb(238,228,24)" fg:x="790" fg:w="1"/><text x="97.1825%" y="1343.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::get (1 samples, 0.12%)</title><rect x="96.9325%" y="1317" width="0.1227%" height="15" fill="rgb(217,116,22)" fg:x="790" fg:w="1"/><text x="97.1825%" y="1327.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get (1 samples, 0.12%)</title><rect x="96.9325%" y="1301" width="0.1227%" height="15" fill="rgb(234,98,12)" fg:x="790" fg:w="1"/><text x="97.1825%" y="1311.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt; as blockstack_lib::chainstate::stacks::index::marf::MarfConnection&lt;T&gt;&gt;::with_conn (1 samples, 0.12%)</title><rect x="96.9325%" y="1285" width="0.1227%" height="15" fill="rgb(242,170,50)" fg:x="790" fg:w="1"/><text x="97.1825%" y="1295.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get::{{closure}} (1 samples, 0.12%)</title><rect x="96.9325%" y="1269" width="0.1227%" height="15" fill="rgb(235,7,5)" fg:x="790" fg:w="1"/><text x="97.1825%" y="1279.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_by_key (1 samples, 0.12%)</title><rect x="96.9325%" y="1253" width="0.1227%" height="15" fill="rgb(241,114,28)" fg:x="790" fg:w="1"/><text x="97.1825%" y="1263.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_path (1 samples, 0.12%)</title><rect x="96.9325%" y="1237" width="0.1227%" height="15" fill="rgb(246,112,42)" fg:x="790" fg:w="1"/><text x="97.1825%" y="1247.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk (1 samples, 0.12%)</title><rect x="96.9325%" y="1221" width="0.1227%" height="15" fill="rgb(248,228,14)" fg:x="790" fg:w="1"/><text x="97.1825%" y="1231.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_backptr (1 samples, 0.12%)</title><rect x="96.9325%" y="1205" width="0.1227%" height="15" fill="rgb(208,133,18)" fg:x="790" fg:w="1"/><text x="97.1825%" y="1215.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_backptr (1 samples, 0.12%)</title><rect x="96.9325%" y="1189" width="0.1227%" height="15" fill="rgb(207,35,49)" fg:x="790" fg:w="1"/><text x="97.1825%" y="1199.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (1 samples, 0.12%)</title><rect x="96.9325%" y="1173" width="0.1227%" height="15" fill="rgb(205,68,36)" fg:x="790" fg:w="1"/><text x="97.1825%" y="1183.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (1 samples, 0.12%)</title><rect x="96.9325%" y="1157" width="0.1227%" height="15" fill="rgb(245,62,40)" fg:x="790" fg:w="1"/><text x="97.1825%" y="1167.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (1 samples, 0.12%)</title><rect x="96.9325%" y="1141" width="0.1227%" height="15" fill="rgb(228,27,24)" fg:x="790" fg:w="1"/><text x="97.1825%" y="1151.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (1 samples, 0.12%)</title><rect x="96.9325%" y="1125" width="0.1227%" height="15" fill="rgb(253,19,12)" fg:x="790" fg:w="1"/><text x="97.1825%" y="1135.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (1 samples, 0.12%)</title><rect x="96.9325%" y="1109" width="0.1227%" height="15" fill="rgb(232,28,20)" fg:x="790" fg:w="1"/><text x="97.1825%" y="1119.50"></text></g><g><title>std::io::Read::read_exact (1 samples, 0.12%)</title><rect x="96.9325%" y="1093" width="0.1227%" height="15" fill="rgb(218,35,51)" fg:x="790" fg:w="1"/><text x="97.1825%" y="1103.50"></text></g><g><title>std::io::default_read_exact (1 samples, 0.12%)</title><rect x="96.9325%" y="1077" width="0.1227%" height="15" fill="rgb(212,90,40)" fg:x="790" fg:w="1"/><text x="97.1825%" y="1087.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="96.9325%" y="1061" width="0.1227%" height="15" fill="rgb(220,172,12)" fg:x="790" fg:w="1"/><text x="97.1825%" y="1071.50"></text></g><g><title>sqlite3_blob_read (1 samples, 0.12%)</title><rect x="96.9325%" y="1045" width="0.1227%" height="15" fill="rgb(226,159,20)" fg:x="790" fg:w="1"/><text x="97.1825%" y="1055.50"></text></g><g><title>blobReadWrite (1 samples, 0.12%)</title><rect x="96.9325%" y="1029" width="0.1227%" height="15" fill="rgb(234,205,16)" fg:x="790" fg:w="1"/><text x="97.1825%" y="1039.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="96.9325%" y="1013" width="0.1227%" height="15" fill="rgb(207,9,39)" fg:x="790" fg:w="1"/><text x="97.1825%" y="1023.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="96.9325%" y="997" width="0.1227%" height="15" fill="rgb(249,143,15)" fg:x="790" fg:w="1"/><text x="97.1825%" y="1007.50"></text></g><g><title>accessPayload (1 samples, 0.12%)</title><rect x="96.9325%" y="981" width="0.1227%" height="15" fill="rgb(253,133,29)" fg:x="790" fg:w="1"/><text x="97.1825%" y="991.50"></text></g><g><title>getOverflowPage (1 samples, 0.12%)</title><rect x="96.9325%" y="965" width="0.1227%" height="15" fill="rgb(221,187,0)" fg:x="790" fg:w="1"/><text x="97.1825%" y="975.50"></text></g><g><title>btreeGetPage (1 samples, 0.12%)</title><rect x="96.9325%" y="949" width="0.1227%" height="15" fill="rgb(205,204,26)" fg:x="790" fg:w="1"/><text x="97.1825%" y="959.50"></text></g><g><title>sqlite3PagerGet (1 samples, 0.12%)</title><rect x="96.9325%" y="933" width="0.1227%" height="15" fill="rgb(224,68,54)" fg:x="790" fg:w="1"/><text x="97.1825%" y="943.50"></text></g><g><title>getPageMMap (1 samples, 0.12%)</title><rect x="96.9325%" y="917" width="0.1227%" height="15" fill="rgb(209,67,4)" fg:x="790" fg:w="1"/><text x="97.1825%" y="927.50"></text></g><g><title>getPageNormal (1 samples, 0.12%)</title><rect x="96.9325%" y="901" width="0.1227%" height="15" fill="rgb(228,229,18)" fg:x="790" fg:w="1"/><text x="97.1825%" y="911.50"></text></g><g><title>readDbPage (1 samples, 0.12%)</title><rect x="96.9325%" y="885" width="0.1227%" height="15" fill="rgb(231,89,13)" fg:x="790" fg:w="1"/><text x="97.1825%" y="895.50"></text></g><g><title>sqlite3OsRead (1 samples, 0.12%)</title><rect x="96.9325%" y="869" width="0.1227%" height="15" fill="rgb(210,182,18)" fg:x="790" fg:w="1"/><text x="97.1825%" y="879.50"></text></g><g><title>unixRead (1 samples, 0.12%)</title><rect x="96.9325%" y="853" width="0.1227%" height="15" fill="rgb(240,105,2)" fg:x="790" fg:w="1"/><text x="97.1825%" y="863.50"></text></g><g><title>seekAndRead (1 samples, 0.12%)</title><rect x="96.9325%" y="837" width="0.1227%" height="15" fill="rgb(207,170,50)" fg:x="790" fg:w="1"/><text x="97.1825%" y="847.50"></text></g><g><title>read (1 samples, 0.12%)</title><rect x="96.9325%" y="821" width="0.1227%" height="15" fill="rgb(232,133,24)" fg:x="790" fg:w="1"/><text x="97.1825%" y="831.50"></text></g><g><title>blockstack_lib::vm::functions::special_as_contract (2 samples, 0.25%)</title><rect x="96.9325%" y="1525" width="0.2454%" height="15" fill="rgb(235,166,27)" fg:x="790" fg:w="2"/><text x="97.1825%" y="1535.50"></text></g><g><title>blockstack_lib::vm::eval (2 samples, 0.25%)</title><rect x="96.9325%" y="1509" width="0.2454%" height="15" fill="rgb(209,19,13)" fg:x="790" fg:w="2"/><text x="97.1825%" y="1519.50"></text></g><g><title>blockstack_lib::vm::apply (2 samples, 0.25%)</title><rect x="96.9325%" y="1493" width="0.2454%" height="15" fill="rgb(226,79,39)" fg:x="790" fg:w="2"/><text x="97.1825%" y="1503.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="97.0552%" y="1477" width="0.1227%" height="15" fill="rgb(222,163,10)" fg:x="791" fg:w="1"/><text x="97.3052%" y="1487.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="97.0552%" y="1461" width="0.1227%" height="15" fill="rgb(214,44,19)" fg:x="791" fg:w="1"/><text x="97.3052%" y="1471.50"></text></g><g><title>blockstack_lib::vm::functions::database::special_contract_call (1 samples, 0.12%)</title><rect x="97.0552%" y="1445" width="0.1227%" height="15" fill="rgb(210,217,13)" fg:x="791" fg:w="1"/><text x="97.3052%" y="1455.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_contract (1 samples, 0.12%)</title><rect x="97.0552%" y="1429" width="0.1227%" height="15" fill="rgb(237,61,54)" fg:x="791" fg:w="1"/><text x="97.3052%" y="1439.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get_contract_size (1 samples, 0.12%)</title><rect x="97.0552%" y="1413" width="0.1227%" height="15" fill="rgb(226,184,24)" fg:x="791" fg:w="1"/><text x="97.3052%" y="1423.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::fetch_metadata (1 samples, 0.12%)</title><rect x="97.0552%" y="1397" width="0.1227%" height="15" fill="rgb(223,226,4)" fg:x="791" fg:w="1"/><text x="97.3052%" y="1407.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get_metadata (1 samples, 0.12%)</title><rect x="97.0552%" y="1381" width="0.1227%" height="15" fill="rgb(210,26,41)" fg:x="791" fg:w="1"/><text x="97.3052%" y="1391.50"></text></g><g><title>blockstack_lib::vm::database::clarity_store::ClarityBackingStore::get_metadata (1 samples, 0.12%)</title><rect x="97.0552%" y="1365" width="0.1227%" height="15" fill="rgb(220,221,6)" fg:x="791" fg:w="1"/><text x="97.3052%" y="1375.50"></text></g><g><title>blockstack_lib::vm::database::clarity_store::ClarityBackingStore::get_contract_hash (1 samples, 0.12%)</title><rect x="97.0552%" y="1349" width="0.1227%" height="15" fill="rgb(225,89,49)" fg:x="791" fg:w="1"/><text x="97.3052%" y="1359.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::get_block_at_height (1 samples, 0.12%)</title><rect x="97.0552%" y="1333" width="0.1227%" height="15" fill="rgb(218,70,45)" fg:x="791" fg:w="1"/><text x="97.3052%" y="1343.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get_block_at_height (1 samples, 0.12%)</title><rect x="97.0552%" y="1317" width="0.1227%" height="15" fill="rgb(238,166,21)" fg:x="791" fg:w="1"/><text x="97.3052%" y="1327.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt; as blockstack_lib::chainstate::stacks::index::marf::MarfConnection&lt;T&gt;&gt;::with_conn (1 samples, 0.12%)</title><rect x="97.0552%" y="1301" width="0.1227%" height="15" fill="rgb(224,141,44)" fg:x="791" fg:w="1"/><text x="97.3052%" y="1311.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get_block_at_height::{{closure}} (1 samples, 0.12%)</title><rect x="97.0552%" y="1285" width="0.1227%" height="15" fill="rgb(230,12,49)" fg:x="791" fg:w="1"/><text x="97.3052%" y="1295.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_block_at_height (1 samples, 0.12%)</title><rect x="97.0552%" y="1269" width="0.1227%" height="15" fill="rgb(212,174,12)" fg:x="791" fg:w="1"/><text x="97.3052%" y="1279.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_by_key (1 samples, 0.12%)</title><rect x="97.0552%" y="1253" width="0.1227%" height="15" fill="rgb(246,67,9)" fg:x="791" fg:w="1"/><text x="97.3052%" y="1263.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_path (1 samples, 0.12%)</title><rect x="97.0552%" y="1237" width="0.1227%" height="15" fill="rgb(239,35,23)" fg:x="791" fg:w="1"/><text x="97.3052%" y="1247.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk (1 samples, 0.12%)</title><rect x="97.0552%" y="1221" width="0.1227%" height="15" fill="rgb(211,167,0)" fg:x="791" fg:w="1"/><text x="97.3052%" y="1231.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_backptr (1 samples, 0.12%)</title><rect x="97.0552%" y="1205" width="0.1227%" height="15" fill="rgb(225,119,45)" fg:x="791" fg:w="1"/><text x="97.3052%" y="1215.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_backptr (1 samples, 0.12%)</title><rect x="97.0552%" y="1189" width="0.1227%" height="15" fill="rgb(210,162,6)" fg:x="791" fg:w="1"/><text x="97.3052%" y="1199.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (1 samples, 0.12%)</title><rect x="97.0552%" y="1173" width="0.1227%" height="15" fill="rgb(208,118,35)" fg:x="791" fg:w="1"/><text x="97.3052%" y="1183.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (1 samples, 0.12%)</title><rect x="97.0552%" y="1157" width="0.1227%" height="15" fill="rgb(239,4,53)" fg:x="791" fg:w="1"/><text x="97.3052%" y="1167.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (1 samples, 0.12%)</title><rect x="97.0552%" y="1141" width="0.1227%" height="15" fill="rgb(213,130,21)" fg:x="791" fg:w="1"/><text x="97.3052%" y="1151.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (1 samples, 0.12%)</title><rect x="97.0552%" y="1125" width="0.1227%" height="15" fill="rgb(235,148,0)" fg:x="791" fg:w="1"/><text x="97.3052%" y="1135.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (1 samples, 0.12%)</title><rect x="97.0552%" y="1109" width="0.1227%" height="15" fill="rgb(244,224,18)" fg:x="791" fg:w="1"/><text x="97.3052%" y="1119.50"></text></g><g><title>std::io::Read::read_exact (1 samples, 0.12%)</title><rect x="97.0552%" y="1093" width="0.1227%" height="15" fill="rgb(211,214,4)" fg:x="791" fg:w="1"/><text x="97.3052%" y="1103.50"></text></g><g><title>std::io::default_read_exact (1 samples, 0.12%)</title><rect x="97.0552%" y="1077" width="0.1227%" height="15" fill="rgb(206,119,25)" fg:x="791" fg:w="1"/><text x="97.3052%" y="1087.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="97.0552%" y="1061" width="0.1227%" height="15" fill="rgb(243,93,47)" fg:x="791" fg:w="1"/><text x="97.3052%" y="1071.50"></text></g><g><title>sqlite3_blob_read (1 samples, 0.12%)</title><rect x="97.0552%" y="1045" width="0.1227%" height="15" fill="rgb(224,194,6)" fg:x="791" fg:w="1"/><text x="97.3052%" y="1055.50"></text></g><g><title>blobReadWrite (1 samples, 0.12%)</title><rect x="97.0552%" y="1029" width="0.1227%" height="15" fill="rgb(243,229,6)" fg:x="791" fg:w="1"/><text x="97.3052%" y="1039.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="97.0552%" y="1013" width="0.1227%" height="15" fill="rgb(207,23,50)" fg:x="791" fg:w="1"/><text x="97.3052%" y="1023.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="97.0552%" y="997" width="0.1227%" height="15" fill="rgb(253,192,32)" fg:x="791" fg:w="1"/><text x="97.3052%" y="1007.50"></text></g><g><title>accessPayload (1 samples, 0.12%)</title><rect x="97.0552%" y="981" width="0.1227%" height="15" fill="rgb(213,21,6)" fg:x="791" fg:w="1"/><text x="97.3052%" y="991.50"></text></g><g><title>getOverflowPage (1 samples, 0.12%)</title><rect x="97.0552%" y="965" width="0.1227%" height="15" fill="rgb(243,151,13)" fg:x="791" fg:w="1"/><text x="97.3052%" y="975.50"></text></g><g><title>btreeGetPage (1 samples, 0.12%)</title><rect x="97.0552%" y="949" width="0.1227%" height="15" fill="rgb(233,165,41)" fg:x="791" fg:w="1"/><text x="97.3052%" y="959.50"></text></g><g><title>sqlite3PagerGet (1 samples, 0.12%)</title><rect x="97.0552%" y="933" width="0.1227%" height="15" fill="rgb(246,176,45)" fg:x="791" fg:w="1"/><text x="97.3052%" y="943.50"></text></g><g><title>getPageMMap (1 samples, 0.12%)</title><rect x="97.0552%" y="917" width="0.1227%" height="15" fill="rgb(217,170,52)" fg:x="791" fg:w="1"/><text x="97.3052%" y="927.50"></text></g><g><title>getPageNormal (1 samples, 0.12%)</title><rect x="97.0552%" y="901" width="0.1227%" height="15" fill="rgb(214,203,54)" fg:x="791" fg:w="1"/><text x="97.3052%" y="911.50"></text></g><g><title>readDbPage (1 samples, 0.12%)</title><rect x="97.0552%" y="885" width="0.1227%" height="15" fill="rgb(248,215,49)" fg:x="791" fg:w="1"/><text x="97.3052%" y="895.50"></text></g><g><title>sqlite3OsRead (1 samples, 0.12%)</title><rect x="97.0552%" y="869" width="0.1227%" height="15" fill="rgb(208,46,10)" fg:x="791" fg:w="1"/><text x="97.3052%" y="879.50"></text></g><g><title>unixRead (1 samples, 0.12%)</title><rect x="97.0552%" y="853" width="0.1227%" height="15" fill="rgb(254,5,31)" fg:x="791" fg:w="1"/><text x="97.3052%" y="863.50"></text></g><g><title>seekAndRead (1 samples, 0.12%)</title><rect x="97.0552%" y="837" width="0.1227%" height="15" fill="rgb(222,104,33)" fg:x="791" fg:w="1"/><text x="97.3052%" y="847.50"></text></g><g><title>read (1 samples, 0.12%)</title><rect x="97.0552%" y="821" width="0.1227%" height="15" fill="rgb(248,49,16)" fg:x="791" fg:w="1"/><text x="97.3052%" y="831.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_contract::{{closure}} (1 samples, 0.12%)</title><rect x="97.1779%" y="1349" width="0.1227%" height="15" fill="rgb(232,198,41)" fg:x="792" fg:w="1"/><text x="97.4279%" y="1359.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_function_as_transaction (1 samples, 0.12%)</title><rect x="97.1779%" y="1333" width="0.1227%" height="15" fill="rgb(214,125,3)" fg:x="792" fg:w="1"/><text x="97.4279%" y="1343.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::execute_apply (1 samples, 0.12%)</title><rect x="97.1779%" y="1317" width="0.1227%" height="15" fill="rgb(229,220,28)" fg:x="792" fg:w="1"/><text x="97.4279%" y="1327.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="97.1779%" y="1301" width="0.1227%" height="15" fill="rgb(222,64,37)" fg:x="792" fg:w="1"/><text x="97.4279%" y="1311.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="97.1779%" y="1285" width="0.1227%" height="15" fill="rgb(249,184,13)" fg:x="792" fg:w="1"/><text x="97.4279%" y="1295.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="97.1779%" y="1269" width="0.1227%" height="15" fill="rgb(252,176,6)" fg:x="792" fg:w="1"/><text x="97.4279%" y="1279.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="97.1779%" y="1253" width="0.1227%" height="15" fill="rgb(228,153,7)" fg:x="792" fg:w="1"/><text x="97.4279%" y="1263.50"></text></g><g><title>blockstack_lib::vm::functions::tuples::tuple_get (1 samples, 0.12%)</title><rect x="97.1779%" y="1237" width="0.1227%" height="15" fill="rgb(242,193,5)" fg:x="792" fg:w="1"/><text x="97.4279%" y="1247.50"></text></g><g><title>blockstack_lib::vm::costs::runtime_cost (1 samples, 0.12%)</title><rect x="97.1779%" y="1221" width="0.1227%" height="15" fill="rgb(232,140,9)" fg:x="792" fg:w="1"/><text x="97.4279%" y="1231.50"></text></g><g><title>&lt;blockstack_lib::vm::contexts::Environment as blockstack_lib::vm::costs::CostTracker&gt;::compute_cost (1 samples, 0.12%)</title><rect x="97.1779%" y="1205" width="0.1227%" height="15" fill="rgb(213,222,16)" fg:x="792" fg:w="1"/><text x="97.4279%" y="1215.50"></text></g><g><title>&lt;blockstack_lib::vm::costs::LimitedCostTracker as blockstack_lib::vm::costs::CostTracker&gt;::compute_cost (1 samples, 0.12%)</title><rect x="97.1779%" y="1189" width="0.1227%" height="15" fill="rgb(222,75,50)" fg:x="792" fg:w="1"/><text x="97.4279%" y="1199.50"></text></g><g><title>blockstack_lib::vm::costs::compute_cost (1 samples, 0.12%)</title><rect x="97.1779%" y="1173" width="0.1227%" height="15" fill="rgb(205,180,2)" fg:x="792" fg:w="1"/><text x="97.4279%" y="1183.50"></text></g><g><title>blockstack_lib::vm::eval_all (1 samples, 0.12%)</title><rect x="97.1779%" y="1157" width="0.1227%" height="15" fill="rgb(216,34,7)" fg:x="792" fg:w="1"/><text x="97.4279%" y="1167.50"></text></g><g><title>blockstack_lib::vm::eval_all::{{closure}} (1 samples, 0.12%)</title><rect x="97.1779%" y="1141" width="0.1227%" height="15" fill="rgb(253,16,32)" fg:x="792" fg:w="1"/><text x="97.4279%" y="1151.50"></text></g><g><title>blockstack_lib::vm::contexts::GlobalContext::execute (1 samples, 0.12%)</title><rect x="97.1779%" y="1125" width="0.1227%" height="15" fill="rgb(208,97,28)" fg:x="792" fg:w="1"/><text x="97.4279%" y="1135.50"></text></g><g><title>blockstack_lib::vm::eval_all::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="97.1779%" y="1109" width="0.1227%" height="15" fill="rgb(225,92,11)" fg:x="792" fg:w="1"/><text x="97.4279%" y="1119.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="97.1779%" y="1093" width="0.1227%" height="15" fill="rgb(243,38,12)" fg:x="792" fg:w="1"/><text x="97.4279%" y="1103.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="97.1779%" y="1077" width="0.1227%" height="15" fill="rgb(208,139,16)" fg:x="792" fg:w="1"/><text x="97.4279%" y="1087.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::apply (1 samples, 0.12%)</title><rect x="97.1779%" y="1061" width="0.1227%" height="15" fill="rgb(227,24,9)" fg:x="792" fg:w="1"/><text x="97.4279%" y="1071.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_function_as_transaction (1 samples, 0.12%)</title><rect x="97.1779%" y="1045" width="0.1227%" height="15" fill="rgb(206,62,11)" fg:x="792" fg:w="1"/><text x="97.4279%" y="1055.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::execute_apply (1 samples, 0.12%)</title><rect x="97.1779%" y="1029" width="0.1227%" height="15" fill="rgb(228,134,27)" fg:x="792" fg:w="1"/><text x="97.4279%" y="1039.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="97.1779%" y="1013" width="0.1227%" height="15" fill="rgb(205,55,33)" fg:x="792" fg:w="1"/><text x="97.4279%" y="1023.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="97.1779%" y="997" width="0.1227%" height="15" fill="rgb(243,75,43)" fg:x="792" fg:w="1"/><text x="97.4279%" y="1007.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="97.1779%" y="981" width="0.1227%" height="15" fill="rgb(223,27,42)" fg:x="792" fg:w="1"/><text x="97.4279%" y="991.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="97.1779%" y="965" width="0.1227%" height="15" fill="rgb(232,189,33)" fg:x="792" fg:w="1"/><text x="97.4279%" y="975.50"></text></g><g><title>blockstack_lib::vm::contexts::CallStack::contains (1 samples, 0.12%)</title><rect x="97.1779%" y="949" width="0.1227%" height="15" fill="rgb(210,9,39)" fg:x="792" fg:w="1"/><text x="97.4279%" y="959.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.12%)</title><rect x="97.1779%" y="933" width="0.1227%" height="15" fill="rgb(242,85,26)" fg:x="792" fg:w="1"/><text x="97.4279%" y="943.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.12%)</title><rect x="97.1779%" y="917" width="0.1227%" height="15" fill="rgb(248,44,4)" fg:x="792" fg:w="1"/><text x="97.4279%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.12%)</title><rect x="97.1779%" y="901" width="0.1227%" height="15" fill="rgb(250,96,46)" fg:x="792" fg:w="1"/><text x="97.4279%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.12%)</title><rect x="97.1779%" y="885" width="0.1227%" height="15" fill="rgb(229,116,26)" fg:x="792" fg:w="1"/><text x="97.4279%" y="895.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.12%)</title><rect x="97.1779%" y="869" width="0.1227%" height="15" fill="rgb(246,94,34)" fg:x="792" fg:w="1"/><text x="97.4279%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.12%)</title><rect x="97.1779%" y="853" width="0.1227%" height="15" fill="rgb(251,73,21)" fg:x="792" fg:w="1"/><text x="97.4279%" y="863.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.12%)</title><rect x="97.1779%" y="837" width="0.1227%" height="15" fill="rgb(254,121,25)" fg:x="792" fg:w="1"/><text x="97.4279%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.12%)</title><rect x="97.1779%" y="821" width="0.1227%" height="15" fill="rgb(215,161,49)" fg:x="792" fg:w="1"/><text x="97.4279%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.12%)</title><rect x="97.1779%" y="805" width="0.1227%" height="15" fill="rgb(221,43,13)" fg:x="792" fg:w="1"/><text x="97.4279%" y="815.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.12%)</title><rect x="97.1779%" y="789" width="0.1227%" height="15" fill="rgb(249,5,37)" fg:x="792" fg:w="1"/><text x="97.4279%" y="799.50"></text></g><g><title>blockstack_lib::vm::eval (2 samples, 0.25%)</title><rect x="97.1779%" y="1445" width="0.2454%" height="15" fill="rgb(226,25,44)" fg:x="792" fg:w="2"/><text x="97.4279%" y="1455.50"></text></g><g><title>blockstack_lib::vm::apply (2 samples, 0.25%)</title><rect x="97.1779%" y="1429" width="0.2454%" height="15" fill="rgb(238,189,16)" fg:x="792" fg:w="2"/><text x="97.4279%" y="1439.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (2 samples, 0.25%)</title><rect x="97.1779%" y="1413" width="0.2454%" height="15" fill="rgb(251,186,8)" fg:x="792" fg:w="2"/><text x="97.4279%" y="1423.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.25%)</title><rect x="97.1779%" y="1397" width="0.2454%" height="15" fill="rgb(254,34,31)" fg:x="792" fg:w="2"/><text x="97.4279%" y="1407.50"></text></g><g><title>blockstack_lib::vm::functions::database::special_contract_call (2 samples, 0.25%)</title><rect x="97.1779%" y="1381" width="0.2454%" height="15" fill="rgb(225,215,27)" fg:x="792" fg:w="2"/><text x="97.4279%" y="1391.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_contract (2 samples, 0.25%)</title><rect x="97.1779%" y="1365" width="0.2454%" height="15" fill="rgb(221,192,48)" fg:x="792" fg:w="2"/><text x="97.4279%" y="1375.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get_contract_size (1 samples, 0.12%)</title><rect x="97.3006%" y="1349" width="0.1227%" height="15" fill="rgb(219,137,20)" fg:x="793" fg:w="1"/><text x="97.5506%" y="1359.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::fetch_metadata (1 samples, 0.12%)</title><rect x="97.3006%" y="1333" width="0.1227%" height="15" fill="rgb(219,84,11)" fg:x="793" fg:w="1"/><text x="97.5506%" y="1343.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get_metadata (1 samples, 0.12%)</title><rect x="97.3006%" y="1317" width="0.1227%" height="15" fill="rgb(224,10,23)" fg:x="793" fg:w="1"/><text x="97.5506%" y="1327.50"></text></g><g><title>blockstack_lib::vm::database::clarity_store::ClarityBackingStore::get_metadata (1 samples, 0.12%)</title><rect x="97.3006%" y="1301" width="0.1227%" height="15" fill="rgb(248,22,39)" fg:x="793" fg:w="1"/><text x="97.5506%" y="1311.50"></text></g><g><title>blockstack_lib::vm::database::clarity_store::ClarityBackingStore::get_contract_hash (1 samples, 0.12%)</title><rect x="97.3006%" y="1285" width="0.1227%" height="15" fill="rgb(212,154,20)" fg:x="793" fg:w="1"/><text x="97.5506%" y="1295.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::get (1 samples, 0.12%)</title><rect x="97.3006%" y="1269" width="0.1227%" height="15" fill="rgb(236,199,50)" fg:x="793" fg:w="1"/><text x="97.5506%" y="1279.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get (1 samples, 0.12%)</title><rect x="97.3006%" y="1253" width="0.1227%" height="15" fill="rgb(211,9,17)" fg:x="793" fg:w="1"/><text x="97.5506%" y="1263.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt; as blockstack_lib::chainstate::stacks::index::marf::MarfConnection&lt;T&gt;&gt;::with_conn (1 samples, 0.12%)</title><rect x="97.3006%" y="1237" width="0.1227%" height="15" fill="rgb(243,216,36)" fg:x="793" fg:w="1"/><text x="97.5506%" y="1247.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get::{{closure}} (1 samples, 0.12%)</title><rect x="97.3006%" y="1221" width="0.1227%" height="15" fill="rgb(250,2,10)" fg:x="793" fg:w="1"/><text x="97.5506%" y="1231.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_by_key (1 samples, 0.12%)</title><rect x="97.3006%" y="1205" width="0.1227%" height="15" fill="rgb(226,50,48)" fg:x="793" fg:w="1"/><text x="97.5506%" y="1215.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_path (1 samples, 0.12%)</title><rect x="97.3006%" y="1189" width="0.1227%" height="15" fill="rgb(243,81,16)" fg:x="793" fg:w="1"/><text x="97.5506%" y="1199.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk (1 samples, 0.12%)</title><rect x="97.3006%" y="1173" width="0.1227%" height="15" fill="rgb(250,14,2)" fg:x="793" fg:w="1"/><text x="97.5506%" y="1183.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_backptr (1 samples, 0.12%)</title><rect x="97.3006%" y="1157" width="0.1227%" height="15" fill="rgb(233,135,29)" fg:x="793" fg:w="1"/><text x="97.5506%" y="1167.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_backptr (1 samples, 0.12%)</title><rect x="97.3006%" y="1141" width="0.1227%" height="15" fill="rgb(224,64,43)" fg:x="793" fg:w="1"/><text x="97.5506%" y="1151.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (1 samples, 0.12%)</title><rect x="97.3006%" y="1125" width="0.1227%" height="15" fill="rgb(238,84,13)" fg:x="793" fg:w="1"/><text x="97.5506%" y="1135.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (1 samples, 0.12%)</title><rect x="97.3006%" y="1109" width="0.1227%" height="15" fill="rgb(253,48,26)" fg:x="793" fg:w="1"/><text x="97.5506%" y="1119.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (1 samples, 0.12%)</title><rect x="97.3006%" y="1093" width="0.1227%" height="15" fill="rgb(205,223,31)" fg:x="793" fg:w="1"/><text x="97.5506%" y="1103.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (1 samples, 0.12%)</title><rect x="97.3006%" y="1077" width="0.1227%" height="15" fill="rgb(221,41,32)" fg:x="793" fg:w="1"/><text x="97.5506%" y="1087.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (1 samples, 0.12%)</title><rect x="97.3006%" y="1061" width="0.1227%" height="15" fill="rgb(213,158,31)" fg:x="793" fg:w="1"/><text x="97.5506%" y="1071.50"></text></g><g><title>std::io::Read::read_exact (1 samples, 0.12%)</title><rect x="97.3006%" y="1045" width="0.1227%" height="15" fill="rgb(245,126,43)" fg:x="793" fg:w="1"/><text x="97.5506%" y="1055.50"></text></g><g><title>std::io::default_read_exact (1 samples, 0.12%)</title><rect x="97.3006%" y="1029" width="0.1227%" height="15" fill="rgb(227,7,22)" fg:x="793" fg:w="1"/><text x="97.5506%" y="1039.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="97.3006%" y="1013" width="0.1227%" height="15" fill="rgb(252,90,44)" fg:x="793" fg:w="1"/><text x="97.5506%" y="1023.50"></text></g><g><title>sqlite3_blob_read (1 samples, 0.12%)</title><rect x="97.3006%" y="997" width="0.1227%" height="15" fill="rgb(253,91,0)" fg:x="793" fg:w="1"/><text x="97.5506%" y="1007.50"></text></g><g><title>blobReadWrite (1 samples, 0.12%)</title><rect x="97.3006%" y="981" width="0.1227%" height="15" fill="rgb(252,175,49)" fg:x="793" fg:w="1"/><text x="97.5506%" y="991.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="97.3006%" y="965" width="0.1227%" height="15" fill="rgb(246,150,1)" fg:x="793" fg:w="1"/><text x="97.5506%" y="975.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="97.3006%" y="949" width="0.1227%" height="15" fill="rgb(241,192,25)" fg:x="793" fg:w="1"/><text x="97.5506%" y="959.50"></text></g><g><title>accessPayload (1 samples, 0.12%)</title><rect x="97.3006%" y="933" width="0.1227%" height="15" fill="rgb(239,187,11)" fg:x="793" fg:w="1"/><text x="97.5506%" y="943.50"></text></g><g><title>getOverflowPage (1 samples, 0.12%)</title><rect x="97.3006%" y="917" width="0.1227%" height="15" fill="rgb(218,202,51)" fg:x="793" fg:w="1"/><text x="97.5506%" y="927.50"></text></g><g><title>releasePage (1 samples, 0.12%)</title><rect x="97.3006%" y="901" width="0.1227%" height="15" fill="rgb(225,176,8)" fg:x="793" fg:w="1"/><text x="97.5506%" y="911.50"></text></g><g><title>releasePageNotNull (1 samples, 0.12%)</title><rect x="97.3006%" y="885" width="0.1227%" height="15" fill="rgb(219,122,41)" fg:x="793" fg:w="1"/><text x="97.5506%" y="895.50"></text></g><g><title>pcache1Unpin (1 samples, 0.12%)</title><rect x="97.3006%" y="869" width="0.1227%" height="15" fill="rgb(248,140,20)" fg:x="793" fg:w="1"/><text x="97.5506%" y="879.50"></text></g><g><title>pthread_mutex_lock (1 samples, 0.12%)</title><rect x="97.3006%" y="853" width="0.1227%" height="15" fill="rgb(245,41,37)" fg:x="793" fg:w="1"/><text x="97.5506%" y="863.50"></text></g><g><title>blockstack_lib::vm::functions::special_asserts (3 samples, 0.37%)</title><rect x="97.1779%" y="1525" width="0.3681%" height="15" fill="rgb(235,82,39)" fg:x="792" fg:w="3"/><text x="97.4279%" y="1535.50"></text></g><g><title>blockstack_lib::vm::eval (3 samples, 0.37%)</title><rect x="97.1779%" y="1509" width="0.3681%" height="15" fill="rgb(230,108,42)" fg:x="792" fg:w="3"/><text x="97.4279%" y="1519.50"></text></g><g><title>blockstack_lib::vm::apply (3 samples, 0.37%)</title><rect x="97.1779%" y="1493" width="0.3681%" height="15" fill="rgb(215,150,50)" fg:x="792" fg:w="3"/><text x="97.4279%" y="1503.50"></text></g><g><title>blockstack_lib::vm::eval (3 samples, 0.37%)</title><rect x="97.1779%" y="1477" width="0.3681%" height="15" fill="rgb(233,212,5)" fg:x="792" fg:w="3"/><text x="97.4279%" y="1487.50"></text></g><g><title>blockstack_lib::vm::apply (3 samples, 0.37%)</title><rect x="97.1779%" y="1461" width="0.3681%" height="15" fill="rgb(245,80,22)" fg:x="792" fg:w="3"/><text x="97.4279%" y="1471.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="97.4233%" y="1445" width="0.1227%" height="15" fill="rgb(238,129,16)" fg:x="794" fg:w="1"/><text x="97.6733%" y="1455.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="97.4233%" y="1429" width="0.1227%" height="15" fill="rgb(240,19,0)" fg:x="794" fg:w="1"/><text x="97.6733%" y="1439.50"></text></g><g><title>blockstack_lib::vm::functions::special_contract_of (1 samples, 0.12%)</title><rect x="97.4233%" y="1413" width="0.1227%" height="15" fill="rgb(232,42,35)" fg:x="794" fg:w="1"/><text x="97.6733%" y="1423.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get_contract (1 samples, 0.12%)</title><rect x="97.4233%" y="1397" width="0.1227%" height="15" fill="rgb(223,130,24)" fg:x="794" fg:w="1"/><text x="97.6733%" y="1407.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::fetch_metadata (1 samples, 0.12%)</title><rect x="97.4233%" y="1381" width="0.1227%" height="15" fill="rgb(237,16,22)" fg:x="794" fg:w="1"/><text x="97.6733%" y="1391.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get_metadata (1 samples, 0.12%)</title><rect x="97.4233%" y="1365" width="0.1227%" height="15" fill="rgb(248,192,20)" fg:x="794" fg:w="1"/><text x="97.6733%" y="1375.50"></text></g><g><title>blockstack_lib::vm::database::clarity_store::ClarityBackingStore::get_metadata (1 samples, 0.12%)</title><rect x="97.4233%" y="1349" width="0.1227%" height="15" fill="rgb(233,167,2)" fg:x="794" fg:w="1"/><text x="97.6733%" y="1359.50"></text></g><g><title>blockstack_lib::vm::database::clarity_store::ClarityBackingStore::get_contract_hash (1 samples, 0.12%)</title><rect x="97.4233%" y="1333" width="0.1227%" height="15" fill="rgb(252,71,44)" fg:x="794" fg:w="1"/><text x="97.6733%" y="1343.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::get (1 samples, 0.12%)</title><rect x="97.4233%" y="1317" width="0.1227%" height="15" fill="rgb(238,37,47)" fg:x="794" fg:w="1"/><text x="97.6733%" y="1327.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get (1 samples, 0.12%)</title><rect x="97.4233%" y="1301" width="0.1227%" height="15" fill="rgb(214,202,54)" fg:x="794" fg:w="1"/><text x="97.6733%" y="1311.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt; as blockstack_lib::chainstate::stacks::index::marf::MarfConnection&lt;T&gt;&gt;::with_conn (1 samples, 0.12%)</title><rect x="97.4233%" y="1285" width="0.1227%" height="15" fill="rgb(254,165,40)" fg:x="794" fg:w="1"/><text x="97.6733%" y="1295.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get::{{closure}} (1 samples, 0.12%)</title><rect x="97.4233%" y="1269" width="0.1227%" height="15" fill="rgb(246,173,38)" fg:x="794" fg:w="1"/><text x="97.6733%" y="1279.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_by_key (1 samples, 0.12%)</title><rect x="97.4233%" y="1253" width="0.1227%" height="15" fill="rgb(215,3,27)" fg:x="794" fg:w="1"/><text x="97.6733%" y="1263.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_path (1 samples, 0.12%)</title><rect x="97.4233%" y="1237" width="0.1227%" height="15" fill="rgb(239,169,51)" fg:x="794" fg:w="1"/><text x="97.6733%" y="1247.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk (1 samples, 0.12%)</title><rect x="97.4233%" y="1221" width="0.1227%" height="15" fill="rgb(212,5,25)" fg:x="794" fg:w="1"/><text x="97.6733%" y="1231.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_backptr (1 samples, 0.12%)</title><rect x="97.4233%" y="1205" width="0.1227%" height="15" fill="rgb(243,45,17)" fg:x="794" fg:w="1"/><text x="97.6733%" y="1215.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_backptr (1 samples, 0.12%)</title><rect x="97.4233%" y="1189" width="0.1227%" height="15" fill="rgb(242,97,9)" fg:x="794" fg:w="1"/><text x="97.6733%" y="1199.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (1 samples, 0.12%)</title><rect x="97.4233%" y="1173" width="0.1227%" height="15" fill="rgb(228,71,31)" fg:x="794" fg:w="1"/><text x="97.6733%" y="1183.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (1 samples, 0.12%)</title><rect x="97.4233%" y="1157" width="0.1227%" height="15" fill="rgb(252,184,16)" fg:x="794" fg:w="1"/><text x="97.6733%" y="1167.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (1 samples, 0.12%)</title><rect x="97.4233%" y="1141" width="0.1227%" height="15" fill="rgb(236,169,46)" fg:x="794" fg:w="1"/><text x="97.6733%" y="1151.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (1 samples, 0.12%)</title><rect x="97.4233%" y="1125" width="0.1227%" height="15" fill="rgb(207,17,47)" fg:x="794" fg:w="1"/><text x="97.6733%" y="1135.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (1 samples, 0.12%)</title><rect x="97.4233%" y="1109" width="0.1227%" height="15" fill="rgb(206,201,28)" fg:x="794" fg:w="1"/><text x="97.6733%" y="1119.50"></text></g><g><title>std::io::Read::read_exact (1 samples, 0.12%)</title><rect x="97.4233%" y="1093" width="0.1227%" height="15" fill="rgb(224,184,23)" fg:x="794" fg:w="1"/><text x="97.6733%" y="1103.50"></text></g><g><title>std::io::default_read_exact (1 samples, 0.12%)</title><rect x="97.4233%" y="1077" width="0.1227%" height="15" fill="rgb(208,139,48)" fg:x="794" fg:w="1"/><text x="97.6733%" y="1087.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="97.4233%" y="1061" width="0.1227%" height="15" fill="rgb(208,130,10)" fg:x="794" fg:w="1"/><text x="97.6733%" y="1071.50"></text></g><g><title>sqlite3_blob_read (1 samples, 0.12%)</title><rect x="97.4233%" y="1045" width="0.1227%" height="15" fill="rgb(211,213,45)" fg:x="794" fg:w="1"/><text x="97.6733%" y="1055.50"></text></g><g><title>blobReadWrite (1 samples, 0.12%)</title><rect x="97.4233%" y="1029" width="0.1227%" height="15" fill="rgb(235,100,30)" fg:x="794" fg:w="1"/><text x="97.6733%" y="1039.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="97.4233%" y="1013" width="0.1227%" height="15" fill="rgb(206,144,31)" fg:x="794" fg:w="1"/><text x="97.6733%" y="1023.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="97.4233%" y="997" width="0.1227%" height="15" fill="rgb(224,200,26)" fg:x="794" fg:w="1"/><text x="97.6733%" y="1007.50"></text></g><g><title>accessPayload (1 samples, 0.12%)</title><rect x="97.4233%" y="981" width="0.1227%" height="15" fill="rgb(247,104,53)" fg:x="794" fg:w="1"/><text x="97.6733%" y="991.50"></text></g><g><title>getOverflowPage (1 samples, 0.12%)</title><rect x="97.4233%" y="965" width="0.1227%" height="15" fill="rgb(220,14,17)" fg:x="794" fg:w="1"/><text x="97.6733%" y="975.50"></text></g><g><title>btreeGetPage (1 samples, 0.12%)</title><rect x="97.4233%" y="949" width="0.1227%" height="15" fill="rgb(230,140,40)" fg:x="794" fg:w="1"/><text x="97.6733%" y="959.50"></text></g><g><title>sqlite3PagerGet (1 samples, 0.12%)</title><rect x="97.4233%" y="933" width="0.1227%" height="15" fill="rgb(229,2,41)" fg:x="794" fg:w="1"/><text x="97.6733%" y="943.50"></text></g><g><title>getPageMMap (1 samples, 0.12%)</title><rect x="97.4233%" y="917" width="0.1227%" height="15" fill="rgb(232,89,16)" fg:x="794" fg:w="1"/><text x="97.6733%" y="927.50"></text></g><g><title>getPageNormal (1 samples, 0.12%)</title><rect x="97.4233%" y="901" width="0.1227%" height="15" fill="rgb(247,59,52)" fg:x="794" fg:w="1"/><text x="97.6733%" y="911.50"></text></g><g><title>readDbPage (1 samples, 0.12%)</title><rect x="97.4233%" y="885" width="0.1227%" height="15" fill="rgb(226,110,21)" fg:x="794" fg:w="1"/><text x="97.6733%" y="895.50"></text></g><g><title>sqlite3OsRead (1 samples, 0.12%)</title><rect x="97.4233%" y="869" width="0.1227%" height="15" fill="rgb(224,176,43)" fg:x="794" fg:w="1"/><text x="97.6733%" y="879.50"></text></g><g><title>unixRead (1 samples, 0.12%)</title><rect x="97.4233%" y="853" width="0.1227%" height="15" fill="rgb(221,73,6)" fg:x="794" fg:w="1"/><text x="97.6733%" y="863.50"></text></g><g><title>seekAndRead (1 samples, 0.12%)</title><rect x="97.4233%" y="837" width="0.1227%" height="15" fill="rgb(232,78,19)" fg:x="794" fg:w="1"/><text x="97.6733%" y="847.50"></text></g><g><title>read (1 samples, 0.12%)</title><rect x="97.4233%" y="821" width="0.1227%" height="15" fill="rgb(233,112,48)" fg:x="794" fg:w="1"/><text x="97.6733%" y="831.50"></text></g><g><title>core::ops::function::Fn::call (6 samples, 0.74%)</title><rect x="96.9325%" y="1541" width="0.7362%" height="15" fill="rgb(243,131,47)" fg:x="790" fg:w="6"/><text x="97.1825%" y="1551.50"></text></g><g><title>blockstack_lib::vm::functions::special_let (1 samples, 0.12%)</title><rect x="97.5460%" y="1525" width="0.1227%" height="15" fill="rgb(226,51,1)" fg:x="795" fg:w="1"/><text x="97.7960%" y="1535.50"></text></g><g><title>blockstack_lib::vm::functions::special_let::{{closure}} (1 samples, 0.12%)</title><rect x="97.5460%" y="1509" width="0.1227%" height="15" fill="rgb(247,58,7)" fg:x="795" fg:w="1"/><text x="97.7960%" y="1519.50"></text></g><g><title>blockstack_lib::vm::functions::handle_binding_list (1 samples, 0.12%)</title><rect x="97.5460%" y="1493" width="0.1227%" height="15" fill="rgb(209,7,32)" fg:x="795" fg:w="1"/><text x="97.7960%" y="1503.50"></text></g><g><title>blockstack_lib::vm::functions::special_let::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="97.5460%" y="1477" width="0.1227%" height="15" fill="rgb(209,39,41)" fg:x="795" fg:w="1"/><text x="97.7960%" y="1487.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="97.5460%" y="1461" width="0.1227%" height="15" fill="rgb(226,182,46)" fg:x="795" fg:w="1"/><text x="97.7960%" y="1471.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="97.5460%" y="1445" width="0.1227%" height="15" fill="rgb(230,219,10)" fg:x="795" fg:w="1"/><text x="97.7960%" y="1455.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::apply (1 samples, 0.12%)</title><rect x="97.5460%" y="1429" width="0.1227%" height="15" fill="rgb(227,175,30)" fg:x="795" fg:w="1"/><text x="97.7960%" y="1439.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::execute_apply (1 samples, 0.12%)</title><rect x="97.5460%" y="1413" width="0.1227%" height="15" fill="rgb(217,2,50)" fg:x="795" fg:w="1"/><text x="97.7960%" y="1423.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="97.5460%" y="1397" width="0.1227%" height="15" fill="rgb(229,160,0)" fg:x="795" fg:w="1"/><text x="97.7960%" y="1407.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="97.5460%" y="1381" width="0.1227%" height="15" fill="rgb(207,78,37)" fg:x="795" fg:w="1"/><text x="97.7960%" y="1391.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::apply (1 samples, 0.12%)</title><rect x="97.5460%" y="1365" width="0.1227%" height="15" fill="rgb(225,57,0)" fg:x="795" fg:w="1"/><text x="97.7960%" y="1375.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::execute_apply (1 samples, 0.12%)</title><rect x="97.5460%" y="1349" width="0.1227%" height="15" fill="rgb(232,154,2)" fg:x="795" fg:w="1"/><text x="97.7960%" y="1359.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="97.5460%" y="1333" width="0.1227%" height="15" fill="rgb(241,212,25)" fg:x="795" fg:w="1"/><text x="97.7960%" y="1343.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="97.5460%" y="1317" width="0.1227%" height="15" fill="rgb(226,69,20)" fg:x="795" fg:w="1"/><text x="97.7960%" y="1327.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="97.5460%" y="1301" width="0.1227%" height="15" fill="rgb(247,184,54)" fg:x="795" fg:w="1"/><text x="97.7960%" y="1311.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="97.5460%" y="1285" width="0.1227%" height="15" fill="rgb(210,145,0)" fg:x="795" fg:w="1"/><text x="97.7960%" y="1295.50"></text></g><g><title>blockstack_lib::vm::functions::tuples::tuple_get (1 samples, 0.12%)</title><rect x="97.5460%" y="1269" width="0.1227%" height="15" fill="rgb(253,82,12)" fg:x="795" fg:w="1"/><text x="97.7960%" y="1279.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="97.5460%" y="1253" width="0.1227%" height="15" fill="rgb(245,42,11)" fg:x="795" fg:w="1"/><text x="97.7960%" y="1263.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="97.5460%" y="1237" width="0.1227%" height="15" fill="rgb(219,147,32)" fg:x="795" fg:w="1"/><text x="97.7960%" y="1247.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="97.5460%" y="1221" width="0.1227%" height="15" fill="rgb(246,12,7)" fg:x="795" fg:w="1"/><text x="97.7960%" y="1231.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="97.5460%" y="1205" width="0.1227%" height="15" fill="rgb(243,50,9)" fg:x="795" fg:w="1"/><text x="97.7960%" y="1215.50"></text></g><g><title>blockstack_lib::vm::functions::sequences::special_fold (1 samples, 0.12%)</title><rect x="97.5460%" y="1189" width="0.1227%" height="15" fill="rgb(219,149,6)" fg:x="795" fg:w="1"/><text x="97.7960%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.12%)</title><rect x="97.5460%" y="1173" width="0.1227%" height="15" fill="rgb(241,51,42)" fg:x="795" fg:w="1"/><text x="97.7960%" y="1183.50"></text></g><g><title>blockstack_lib::vm::functions::sequences::special_fold::{{closure}} (1 samples, 0.12%)</title><rect x="97.5460%" y="1157" width="0.1227%" height="15" fill="rgb(226,128,27)" fg:x="795" fg:w="1"/><text x="97.7960%" y="1167.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="97.5460%" y="1141" width="0.1227%" height="15" fill="rgb(244,144,4)" fg:x="795" fg:w="1"/><text x="97.7960%" y="1151.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::apply (1 samples, 0.12%)</title><rect x="97.5460%" y="1125" width="0.1227%" height="15" fill="rgb(221,4,13)" fg:x="795" fg:w="1"/><text x="97.7960%" y="1135.50"></text></g><g><title>blockstack_lib::vm::callables::DefinedFunction::execute_apply (1 samples, 0.12%)</title><rect x="97.5460%" y="1109" width="0.1227%" height="15" fill="rgb(208,170,28)" fg:x="795" fg:w="1"/><text x="97.7960%" y="1119.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="97.5460%" y="1093" width="0.1227%" height="15" fill="rgb(226,131,13)" fg:x="795" fg:w="1"/><text x="97.7960%" y="1103.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="97.5460%" y="1077" width="0.1227%" height="15" fill="rgb(215,72,41)" fg:x="795" fg:w="1"/><text x="97.7960%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="97.5460%" y="1061" width="0.1227%" height="15" fill="rgb(243,108,20)" fg:x="795" fg:w="1"/><text x="97.7960%" y="1071.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="97.5460%" y="1045" width="0.1227%" height="15" fill="rgb(230,189,17)" fg:x="795" fg:w="1"/><text x="97.7960%" y="1055.50"></text></g><g><title>blockstack_lib::vm::functions::special_let (1 samples, 0.12%)</title><rect x="97.5460%" y="1029" width="0.1227%" height="15" fill="rgb(220,50,17)" fg:x="795" fg:w="1"/><text x="97.7960%" y="1039.50"></text></g><g><title>blockstack_lib::vm::functions::special_let::{{closure}} (1 samples, 0.12%)</title><rect x="97.5460%" y="1013" width="0.1227%" height="15" fill="rgb(248,152,48)" fg:x="795" fg:w="1"/><text x="97.7960%" y="1023.50"></text></g><g><title>blockstack_lib::vm::eval (1 samples, 0.12%)</title><rect x="97.5460%" y="997" width="0.1227%" height="15" fill="rgb(244,91,11)" fg:x="795" fg:w="1"/><text x="97.7960%" y="1007.50"></text></g><g><title>blockstack_lib::vm::apply (1 samples, 0.12%)</title><rect x="97.5460%" y="981" width="0.1227%" height="15" fill="rgb(220,157,5)" fg:x="795" fg:w="1"/><text x="97.7960%" y="991.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::Fn&lt;A&gt; for &amp;F&gt;::call (1 samples, 0.12%)</title><rect x="97.5460%" y="965" width="0.1227%" height="15" fill="rgb(253,137,8)" fg:x="795" fg:w="1"/><text x="97.7960%" y="975.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.12%)</title><rect x="97.5460%" y="949" width="0.1227%" height="15" fill="rgb(217,137,51)" fg:x="795" fg:w="1"/><text x="97.7960%" y="959.50"></text></g><g><title>blockstack_lib::vm::functions::tuples::tuple_cons (1 samples, 0.12%)</title><rect x="97.5460%" y="933" width="0.1227%" height="15" fill="rgb(218,209,53)" fg:x="795" fg:w="1"/><text x="97.7960%" y="943.50"></text></g><g><title>blockstack_lib::vm::costs::runtime_cost (1 samples, 0.12%)</title><rect x="97.5460%" y="917" width="0.1227%" height="15" fill="rgb(249,137,25)" fg:x="795" fg:w="1"/><text x="97.7960%" y="927.50"></text></g><g><title>&lt;blockstack_lib::vm::contexts::Environment as blockstack_lib::vm::costs::CostTracker&gt;::compute_cost (1 samples, 0.12%)</title><rect x="97.5460%" y="901" width="0.1227%" height="15" fill="rgb(239,155,26)" fg:x="795" fg:w="1"/><text x="97.7960%" y="911.50"></text></g><g><title>&lt;blockstack_lib::vm::costs::LimitedCostTracker as blockstack_lib::vm::costs::CostTracker&gt;::compute_cost (1 samples, 0.12%)</title><rect x="97.5460%" y="885" width="0.1227%" height="15" fill="rgb(227,85,46)" fg:x="795" fg:w="1"/><text x="97.7960%" y="895.50"></text></g><g><title>blockstack_lib::vm::costs::compute_cost (1 samples, 0.12%)</title><rect x="97.5460%" y="869" width="0.1227%" height="15" fill="rgb(251,107,43)" fg:x="795" fg:w="1"/><text x="97.7960%" y="879.50"></text></g><g><title>blockstack_lib::vm::eval_all (1 samples, 0.12%)</title><rect x="97.5460%" y="853" width="0.1227%" height="15" fill="rgb(234,170,33)" fg:x="795" fg:w="1"/><text x="97.7960%" y="863.50"></text></g><g><title>blockstack_lib::vm::eval_all::{{closure}} (1 samples, 0.12%)</title><rect x="97.5460%" y="837" width="0.1227%" height="15" fill="rgb(206,29,35)" fg:x="795" fg:w="1"/><text x="97.7960%" y="847.50"></text></g><g><title>blockstack_lib::vm::contexts::GlobalContext::execute (1 samples, 0.12%)</title><rect x="97.5460%" y="821" width="0.1227%" height="15" fill="rgb(227,138,25)" fg:x="795" fg:w="1"/><text x="97.7960%" y="831.50"></text></g><g><title>blockstack_lib::vm::eval_all::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="97.5460%" y="805" width="0.1227%" height="15" fill="rgb(249,131,35)" fg:x="795" fg:w="1"/><text x="97.7960%" y="815.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::new (1 samples, 0.12%)</title><rect x="97.5460%" y="789" width="0.1227%" height="15" fill="rgb(239,6,40)" fg:x="795" fg:w="1"/><text x="97.7960%" y="799.50"></text></g><g><title>blockstack_lib::chainstate::stacks::miner::&lt;impl blockstack_lib::chainstate::stacks::StacksBlockBuilder&gt;::try_mine_tx (1 samples, 0.12%)</title><rect x="97.6687%" y="1301" width="0.1227%" height="15" fill="rgb(246,136,47)" fg:x="796" fg:w="1"/><text x="97.9187%" y="1311.50"></text></g><g><title>blockstack_lib::chainstate::stacks::miner::&lt;impl blockstack_lib::chainstate::stacks::StacksBlockBuilder&gt;::try_mine_tx_with_len (1 samples, 0.12%)</title><rect x="97.6687%" y="1285" width="0.1227%" height="15" fill="rgb(253,58,26)" fg:x="796" fg:w="1"/><text x="97.9187%" y="1295.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::transactions::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::process_transaction (1 samples, 0.12%)</title><rect x="97.6687%" y="1269" width="0.1227%" height="15" fill="rgb(237,141,10)" fg:x="796" fg:w="1"/><text x="97.9187%" y="1279.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::transactions::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::pay_transaction_fee (1 samples, 0.12%)</title><rect x="97.6687%" y="1253" width="0.1227%" height="15" fill="rgb(234,156,12)" fg:x="796" fg:w="1"/><text x="97.9187%" y="1263.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::accounts::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::account_debit (1 samples, 0.12%)</title><rect x="97.6687%" y="1237" width="0.1227%" height="15" fill="rgb(243,224,36)" fg:x="796" fg:w="1"/><text x="97.9187%" y="1247.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::with_clarity_db (1 samples, 0.12%)</title><rect x="97.6687%" y="1221" width="0.1227%" height="15" fill="rgb(205,229,51)" fg:x="796" fg:w="1"/><text x="97.9187%" y="1231.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::with_clarity_db::{{closure}} (1 samples, 0.12%)</title><rect x="97.6687%" y="1205" width="0.1227%" height="15" fill="rgb(223,189,4)" fg:x="796" fg:w="1"/><text x="97.9187%" y="1215.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::accounts::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::account_debit::{{closure}} (1 samples, 0.12%)</title><rect x="97.6687%" y="1189" width="0.1227%" height="15" fill="rgb(249,167,54)" fg:x="796" fg:w="1"/><text x="97.9187%" y="1199.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get_stx_balance_snapshot (1 samples, 0.12%)</title><rect x="97.6687%" y="1173" width="0.1227%" height="15" fill="rgb(218,34,28)" fg:x="796" fg:w="1"/><text x="97.9187%" y="1183.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get_account_stx_balance (1 samples, 0.12%)</title><rect x="97.6687%" y="1157" width="0.1227%" height="15" fill="rgb(232,109,42)" fg:x="796" fg:w="1"/><text x="97.9187%" y="1167.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get (1 samples, 0.12%)</title><rect x="97.6687%" y="1141" width="0.1227%" height="15" fill="rgb(248,214,46)" fg:x="796" fg:w="1"/><text x="97.9187%" y="1151.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get (1 samples, 0.12%)</title><rect x="97.6687%" y="1125" width="0.1227%" height="15" fill="rgb(244,216,40)" fg:x="796" fg:w="1"/><text x="97.9187%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.12%)</title><rect x="97.6687%" y="1109" width="0.1227%" height="15" fill="rgb(231,226,31)" fg:x="796" fg:w="1"/><text x="97.9187%" y="1119.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get::{{closure}} (1 samples, 0.12%)</title><rect x="97.6687%" y="1093" width="0.1227%" height="15" fill="rgb(238,38,43)" fg:x="796" fg:w="1"/><text x="97.9187%" y="1103.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::get (1 samples, 0.12%)</title><rect x="97.6687%" y="1077" width="0.1227%" height="15" fill="rgb(208,88,43)" fg:x="796" fg:w="1"/><text x="97.9187%" y="1087.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get (1 samples, 0.12%)</title><rect x="97.6687%" y="1061" width="0.1227%" height="15" fill="rgb(205,136,37)" fg:x="796" fg:w="1"/><text x="97.9187%" y="1071.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt; as blockstack_lib::chainstate::stacks::index::marf::MarfConnection&lt;T&gt;&gt;::with_conn (1 samples, 0.12%)</title><rect x="97.6687%" y="1045" width="0.1227%" height="15" fill="rgb(237,34,14)" fg:x="796" fg:w="1"/><text x="97.9187%" y="1055.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get::{{closure}} (1 samples, 0.12%)</title><rect x="97.6687%" y="1029" width="0.1227%" height="15" fill="rgb(236,193,44)" fg:x="796" fg:w="1"/><text x="97.9187%" y="1039.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_by_key (1 samples, 0.12%)</title><rect x="97.6687%" y="1013" width="0.1227%" height="15" fill="rgb(231,48,10)" fg:x="796" fg:w="1"/><text x="97.9187%" y="1023.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_path (1 samples, 0.12%)</title><rect x="97.6687%" y="997" width="0.1227%" height="15" fill="rgb(213,141,34)" fg:x="796" fg:w="1"/><text x="97.9187%" y="1007.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk (1 samples, 0.12%)</title><rect x="97.6687%" y="981" width="0.1227%" height="15" fill="rgb(249,130,34)" fg:x="796" fg:w="1"/><text x="97.9187%" y="991.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_backptr (1 samples, 0.12%)</title><rect x="97.6687%" y="965" width="0.1227%" height="15" fill="rgb(219,42,41)" fg:x="796" fg:w="1"/><text x="97.9187%" y="975.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_backptr (1 samples, 0.12%)</title><rect x="97.6687%" y="949" width="0.1227%" height="15" fill="rgb(224,100,54)" fg:x="796" fg:w="1"/><text x="97.9187%" y="959.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (1 samples, 0.12%)</title><rect x="97.6687%" y="933" width="0.1227%" height="15" fill="rgb(229,200,27)" fg:x="796" fg:w="1"/><text x="97.9187%" y="943.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (1 samples, 0.12%)</title><rect x="97.6687%" y="917" width="0.1227%" height="15" fill="rgb(217,118,10)" fg:x="796" fg:w="1"/><text x="97.9187%" y="927.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (1 samples, 0.12%)</title><rect x="97.6687%" y="901" width="0.1227%" height="15" fill="rgb(206,22,3)" fg:x="796" fg:w="1"/><text x="97.9187%" y="911.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (1 samples, 0.12%)</title><rect x="97.6687%" y="885" width="0.1227%" height="15" fill="rgb(232,163,46)" fg:x="796" fg:w="1"/><text x="97.9187%" y="895.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (1 samples, 0.12%)</title><rect x="97.6687%" y="869" width="0.1227%" height="15" fill="rgb(206,95,13)" fg:x="796" fg:w="1"/><text x="97.9187%" y="879.50"></text></g><g><title>std::io::Read::read_exact (1 samples, 0.12%)</title><rect x="97.6687%" y="853" width="0.1227%" height="15" fill="rgb(253,154,18)" fg:x="796" fg:w="1"/><text x="97.9187%" y="863.50"></text></g><g><title>std::io::default_read_exact (1 samples, 0.12%)</title><rect x="97.6687%" y="837" width="0.1227%" height="15" fill="rgb(219,32,23)" fg:x="796" fg:w="1"/><text x="97.9187%" y="847.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="97.6687%" y="821" width="0.1227%" height="15" fill="rgb(230,191,45)" fg:x="796" fg:w="1"/><text x="97.9187%" y="831.50"></text></g><g><title>sqlite3_blob_read (1 samples, 0.12%)</title><rect x="97.6687%" y="805" width="0.1227%" height="15" fill="rgb(229,64,36)" fg:x="796" fg:w="1"/><text x="97.9187%" y="815.50"></text></g><g><title>blobReadWrite (1 samples, 0.12%)</title><rect x="97.6687%" y="789" width="0.1227%" height="15" fill="rgb(205,129,25)" fg:x="796" fg:w="1"/><text x="97.9187%" y="799.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="97.6687%" y="773" width="0.1227%" height="15" fill="rgb(254,112,7)" fg:x="796" fg:w="1"/><text x="97.9187%" y="783.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="97.6687%" y="757" width="0.1227%" height="15" fill="rgb(226,53,48)" fg:x="796" fg:w="1"/><text x="97.9187%" y="767.50"></text></g><g><title>accessPayload (1 samples, 0.12%)</title><rect x="97.6687%" y="741" width="0.1227%" height="15" fill="rgb(214,153,38)" fg:x="796" fg:w="1"/><text x="97.9187%" y="751.50"></text></g><g><title>getOverflowPage (1 samples, 0.12%)</title><rect x="97.6687%" y="725" width="0.1227%" height="15" fill="rgb(243,101,7)" fg:x="796" fg:w="1"/><text x="97.9187%" y="735.50"></text></g><g><title>btreeGetPage (1 samples, 0.12%)</title><rect x="97.6687%" y="709" width="0.1227%" height="15" fill="rgb(240,140,22)" fg:x="796" fg:w="1"/><text x="97.9187%" y="719.50"></text></g><g><title>sqlite3PagerGet (1 samples, 0.12%)</title><rect x="97.6687%" y="693" width="0.1227%" height="15" fill="rgb(235,114,2)" fg:x="796" fg:w="1"/><text x="97.9187%" y="703.50"></text></g><g><title>getPageMMap (1 samples, 0.12%)</title><rect x="97.6687%" y="677" width="0.1227%" height="15" fill="rgb(242,59,12)" fg:x="796" fg:w="1"/><text x="97.9187%" y="687.50"></text></g><g><title>getPageNormal (1 samples, 0.12%)</title><rect x="97.6687%" y="661" width="0.1227%" height="15" fill="rgb(252,134,9)" fg:x="796" fg:w="1"/><text x="97.9187%" y="671.50"></text></g><g><title>readDbPage (1 samples, 0.12%)</title><rect x="97.6687%" y="645" width="0.1227%" height="15" fill="rgb(236,4,44)" fg:x="796" fg:w="1"/><text x="97.9187%" y="655.50"></text></g><g><title>sqlite3OsRead (1 samples, 0.12%)</title><rect x="97.6687%" y="629" width="0.1227%" height="15" fill="rgb(254,172,41)" fg:x="796" fg:w="1"/><text x="97.9187%" y="639.50"></text></g><g><title>unixRead (1 samples, 0.12%)</title><rect x="97.6687%" y="613" width="0.1227%" height="15" fill="rgb(244,63,20)" fg:x="796" fg:w="1"/><text x="97.9187%" y="623.50"></text></g><g><title>seekAndRead (1 samples, 0.12%)</title><rect x="97.6687%" y="597" width="0.1227%" height="15" fill="rgb(250,73,31)" fg:x="796" fg:w="1"/><text x="97.9187%" y="607.50"></text></g><g><title>read (1 samples, 0.12%)</title><rect x="97.6687%" y="581" width="0.1227%" height="15" fill="rgb(241,38,36)" fg:x="796" fg:w="1"/><text x="97.9187%" y="591.50"></text></g><g><title>__lseek64 (2 samples, 0.25%)</title><rect x="97.7914%" y="549" width="0.2454%" height="15" fill="rgb(245,211,2)" fg:x="797" fg:w="2"/><text x="98.0414%" y="559.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::transactions::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::check_transaction_nonces (3 samples, 0.37%)</title><rect x="97.7914%" y="1237" width="0.3681%" height="15" fill="rgb(206,120,28)" fg:x="797" fg:w="3"/><text x="98.0414%" y="1247.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::accounts::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::get_account (3 samples, 0.37%)</title><rect x="97.7914%" y="1221" width="0.3681%" height="15" fill="rgb(211,59,34)" fg:x="797" fg:w="3"/><text x="98.0414%" y="1231.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityConnection::with_clarity_db_readonly (3 samples, 0.37%)</title><rect x="97.7914%" y="1205" width="0.3681%" height="15" fill="rgb(233,168,5)" fg:x="797" fg:w="3"/><text x="98.0414%" y="1215.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection as blockstack_lib::clarity_vm::clarity::ClarityConnection&gt;::with_clarity_db_readonly_owned (3 samples, 0.37%)</title><rect x="97.7914%" y="1189" width="0.3681%" height="15" fill="rgb(234,33,13)" fg:x="797" fg:w="3"/><text x="98.0414%" y="1199.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection as blockstack_lib::clarity_vm::clarity::ClarityConnection&gt;::with_clarity_db_readonly_owned::{{closure}} (3 samples, 0.37%)</title><rect x="97.7914%" y="1173" width="0.3681%" height="15" fill="rgb(231,150,26)" fg:x="797" fg:w="3"/><text x="98.0414%" y="1183.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityConnection::with_clarity_db_readonly::{{closure}} (3 samples, 0.37%)</title><rect x="97.7914%" y="1157" width="0.3681%" height="15" fill="rgb(217,191,4)" fg:x="797" fg:w="3"/><text x="98.0414%" y="1167.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::accounts::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::get_account::{{closure}} (3 samples, 0.37%)</title><rect x="97.7914%" y="1141" width="0.3681%" height="15" fill="rgb(246,198,38)" fg:x="797" fg:w="3"/><text x="98.0414%" y="1151.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get_account_stx_balance (3 samples, 0.37%)</title><rect x="97.7914%" y="1125" width="0.3681%" height="15" fill="rgb(245,64,37)" fg:x="797" fg:w="3"/><text x="98.0414%" y="1135.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get (3 samples, 0.37%)</title><rect x="97.7914%" y="1109" width="0.3681%" height="15" fill="rgb(250,30,36)" fg:x="797" fg:w="3"/><text x="98.0414%" y="1119.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get (3 samples, 0.37%)</title><rect x="97.7914%" y="1093" width="0.3681%" height="15" fill="rgb(217,86,53)" fg:x="797" fg:w="3"/><text x="98.0414%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (3 samples, 0.37%)</title><rect x="97.7914%" y="1077" width="0.3681%" height="15" fill="rgb(228,157,16)" fg:x="797" fg:w="3"/><text x="98.0414%" y="1087.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get::{{closure}} (3 samples, 0.37%)</title><rect x="97.7914%" y="1061" width="0.3681%" height="15" fill="rgb(217,59,31)" fg:x="797" fg:w="3"/><text x="98.0414%" y="1071.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::get (3 samples, 0.37%)</title><rect x="97.7914%" y="1045" width="0.3681%" height="15" fill="rgb(237,138,41)" fg:x="797" fg:w="3"/><text x="98.0414%" y="1055.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get (3 samples, 0.37%)</title><rect x="97.7914%" y="1029" width="0.3681%" height="15" fill="rgb(227,91,49)" fg:x="797" fg:w="3"/><text x="98.0414%" y="1039.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt; as blockstack_lib::chainstate::stacks::index::marf::MarfConnection&lt;T&gt;&gt;::with_conn (3 samples, 0.37%)</title><rect x="97.7914%" y="1013" width="0.3681%" height="15" fill="rgb(247,21,44)" fg:x="797" fg:w="3"/><text x="98.0414%" y="1023.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get::{{closure}} (3 samples, 0.37%)</title><rect x="97.7914%" y="997" width="0.3681%" height="15" fill="rgb(219,210,51)" fg:x="797" fg:w="3"/><text x="98.0414%" y="1007.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_by_key (3 samples, 0.37%)</title><rect x="97.7914%" y="981" width="0.3681%" height="15" fill="rgb(209,140,6)" fg:x="797" fg:w="3"/><text x="98.0414%" y="991.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_path (3 samples, 0.37%)</title><rect x="97.7914%" y="965" width="0.3681%" height="15" fill="rgb(221,188,24)" fg:x="797" fg:w="3"/><text x="98.0414%" y="975.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk (3 samples, 0.37%)</title><rect x="97.7914%" y="949" width="0.3681%" height="15" fill="rgb(232,154,20)" fg:x="797" fg:w="3"/><text x="98.0414%" y="959.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_backptr (3 samples, 0.37%)</title><rect x="97.7914%" y="933" width="0.3681%" height="15" fill="rgb(244,137,50)" fg:x="797" fg:w="3"/><text x="98.0414%" y="943.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_backptr (3 samples, 0.37%)</title><rect x="97.7914%" y="917" width="0.3681%" height="15" fill="rgb(225,185,43)" fg:x="797" fg:w="3"/><text x="98.0414%" y="927.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (3 samples, 0.37%)</title><rect x="97.7914%" y="901" width="0.3681%" height="15" fill="rgb(213,205,38)" fg:x="797" fg:w="3"/><text x="98.0414%" y="911.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (3 samples, 0.37%)</title><rect x="97.7914%" y="885" width="0.3681%" height="15" fill="rgb(236,73,12)" fg:x="797" fg:w="3"/><text x="98.0414%" y="895.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (3 samples, 0.37%)</title><rect x="97.7914%" y="869" width="0.3681%" height="15" fill="rgb(235,219,13)" fg:x="797" fg:w="3"/><text x="98.0414%" y="879.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (3 samples, 0.37%)</title><rect x="97.7914%" y="853" width="0.3681%" height="15" fill="rgb(218,59,36)" fg:x="797" fg:w="3"/><text x="98.0414%" y="863.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (3 samples, 0.37%)</title><rect x="97.7914%" y="837" width="0.3681%" height="15" fill="rgb(205,110,39)" fg:x="797" fg:w="3"/><text x="98.0414%" y="847.50"></text></g><g><title>std::io::Read::read_exact (3 samples, 0.37%)</title><rect x="97.7914%" y="821" width="0.3681%" height="15" fill="rgb(218,206,42)" fg:x="797" fg:w="3"/><text x="98.0414%" y="831.50"></text></g><g><title>std::io::default_read_exact (3 samples, 0.37%)</title><rect x="97.7914%" y="805" width="0.3681%" height="15" fill="rgb(248,125,24)" fg:x="797" fg:w="3"/><text x="98.0414%" y="815.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (3 samples, 0.37%)</title><rect x="97.7914%" y="789" width="0.3681%" height="15" fill="rgb(242,28,27)" fg:x="797" fg:w="3"/><text x="98.0414%" y="799.50"></text></g><g><title>sqlite3_blob_read (3 samples, 0.37%)</title><rect x="97.7914%" y="773" width="0.3681%" height="15" fill="rgb(216,228,15)" fg:x="797" fg:w="3"/><text x="98.0414%" y="783.50"></text></g><g><title>blobReadWrite (3 samples, 0.37%)</title><rect x="97.7914%" y="757" width="0.3681%" height="15" fill="rgb(235,116,46)" fg:x="797" fg:w="3"/><text x="98.0414%" y="767.50"></text></g><g><title>sqlite3BtreePayloadChecked (3 samples, 0.37%)</title><rect x="97.7914%" y="741" width="0.3681%" height="15" fill="rgb(224,18,32)" fg:x="797" fg:w="3"/><text x="98.0414%" y="751.50"></text></g><g><title>sqlite3BtreePayloadChecked (3 samples, 0.37%)</title><rect x="97.7914%" y="725" width="0.3681%" height="15" fill="rgb(252,5,12)" fg:x="797" fg:w="3"/><text x="98.0414%" y="735.50"></text></g><g><title>accessPayload (3 samples, 0.37%)</title><rect x="97.7914%" y="709" width="0.3681%" height="15" fill="rgb(251,36,5)" fg:x="797" fg:w="3"/><text x="98.0414%" y="719.50"></text></g><g><title>getOverflowPage (3 samples, 0.37%)</title><rect x="97.7914%" y="693" width="0.3681%" height="15" fill="rgb(217,53,14)" fg:x="797" fg:w="3"/><text x="98.0414%" y="703.50"></text></g><g><title>btreeGetPage (3 samples, 0.37%)</title><rect x="97.7914%" y="677" width="0.3681%" height="15" fill="rgb(215,86,45)" fg:x="797" fg:w="3"/><text x="98.0414%" y="687.50"></text></g><g><title>sqlite3PagerGet (3 samples, 0.37%)</title><rect x="97.7914%" y="661" width="0.3681%" height="15" fill="rgb(242,169,11)" fg:x="797" fg:w="3"/><text x="98.0414%" y="671.50"></text></g><g><title>getPageMMap (3 samples, 0.37%)</title><rect x="97.7914%" y="645" width="0.3681%" height="15" fill="rgb(211,213,45)" fg:x="797" fg:w="3"/><text x="98.0414%" y="655.50"></text></g><g><title>getPageNormal (3 samples, 0.37%)</title><rect x="97.7914%" y="629" width="0.3681%" height="15" fill="rgb(205,88,11)" fg:x="797" fg:w="3"/><text x="98.0414%" y="639.50"></text></g><g><title>readDbPage (3 samples, 0.37%)</title><rect x="97.7914%" y="613" width="0.3681%" height="15" fill="rgb(252,69,26)" fg:x="797" fg:w="3"/><text x="98.0414%" y="623.50"></text></g><g><title>sqlite3OsRead (3 samples, 0.37%)</title><rect x="97.7914%" y="597" width="0.3681%" height="15" fill="rgb(246,123,37)" fg:x="797" fg:w="3"/><text x="98.0414%" y="607.50"></text></g><g><title>unixRead (3 samples, 0.37%)</title><rect x="97.7914%" y="581" width="0.3681%" height="15" fill="rgb(212,205,5)" fg:x="797" fg:w="3"/><text x="98.0414%" y="591.50"></text></g><g><title>seekAndRead (3 samples, 0.37%)</title><rect x="97.7914%" y="565" width="0.3681%" height="15" fill="rgb(253,148,0)" fg:x="797" fg:w="3"/><text x="98.0414%" y="575.50"></text></g><g><title>read (1 samples, 0.12%)</title><rect x="98.0368%" y="549" width="0.1227%" height="15" fill="rgb(239,22,4)" fg:x="799" fg:w="1"/><text x="98.2868%" y="559.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::insert_leaf (5 samples, 0.61%)</title><rect x="98.1595%" y="1157" width="0.6135%" height="15" fill="rgb(226,26,53)" fg:x="800" fg:w="5"/><text x="98.4095%" y="1167.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::do_insert_leaf (5 samples, 0.61%)</title><rect x="98.1595%" y="1141" width="0.6135%" height="15" fill="rgb(225,229,45)" fg:x="800" fg:w="5"/><text x="98.4095%" y="1151.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_cow (5 samples, 0.61%)</title><rect x="98.1595%" y="1125" width="0.6135%" height="15" fill="rgb(220,60,37)" fg:x="800" fg:w="5"/><text x="98.4095%" y="1135.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::node_child_copy (5 samples, 0.61%)</title><rect x="98.1595%" y="1109" width="0.6135%" height="15" fill="rgb(217,180,35)" fg:x="800" fg:w="5"/><text x="98.4095%" y="1119.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_backptr (5 samples, 0.61%)</title><rect x="98.1595%" y="1093" width="0.6135%" height="15" fill="rgb(229,7,53)" fg:x="800" fg:w="5"/><text x="98.4095%" y="1103.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_backptr (5 samples, 0.61%)</title><rect x="98.1595%" y="1077" width="0.6135%" height="15" fill="rgb(254,137,3)" fg:x="800" fg:w="5"/><text x="98.4095%" y="1087.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (5 samples, 0.61%)</title><rect x="98.1595%" y="1061" width="0.6135%" height="15" fill="rgb(215,140,41)" fg:x="800" fg:w="5"/><text x="98.4095%" y="1071.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (5 samples, 0.61%)</title><rect x="98.1595%" y="1045" width="0.6135%" height="15" fill="rgb(250,80,15)" fg:x="800" fg:w="5"/><text x="98.4095%" y="1055.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (5 samples, 0.61%)</title><rect x="98.1595%" y="1029" width="0.6135%" height="15" fill="rgb(252,191,6)" fg:x="800" fg:w="5"/><text x="98.4095%" y="1039.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (5 samples, 0.61%)</title><rect x="98.1595%" y="1013" width="0.6135%" height="15" fill="rgb(246,217,18)" fg:x="800" fg:w="5"/><text x="98.4095%" y="1023.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (5 samples, 0.61%)</title><rect x="98.1595%" y="997" width="0.6135%" height="15" fill="rgb(223,93,7)" fg:x="800" fg:w="5"/><text x="98.4095%" y="1007.50"></text></g><g><title>std::io::Read::read_exact (5 samples, 0.61%)</title><rect x="98.1595%" y="981" width="0.6135%" height="15" fill="rgb(225,55,52)" fg:x="800" fg:w="5"/><text x="98.4095%" y="991.50"></text></g><g><title>std::io::default_read_exact (5 samples, 0.61%)</title><rect x="98.1595%" y="965" width="0.6135%" height="15" fill="rgb(240,31,24)" fg:x="800" fg:w="5"/><text x="98.4095%" y="975.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (5 samples, 0.61%)</title><rect x="98.1595%" y="949" width="0.6135%" height="15" fill="rgb(205,56,52)" fg:x="800" fg:w="5"/><text x="98.4095%" y="959.50"></text></g><g><title>sqlite3_blob_read (5 samples, 0.61%)</title><rect x="98.1595%" y="933" width="0.6135%" height="15" fill="rgb(246,146,12)" fg:x="800" fg:w="5"/><text x="98.4095%" y="943.50"></text></g><g><title>blobReadWrite (5 samples, 0.61%)</title><rect x="98.1595%" y="917" width="0.6135%" height="15" fill="rgb(239,84,36)" fg:x="800" fg:w="5"/><text x="98.4095%" y="927.50"></text></g><g><title>sqlite3BtreePayloadChecked (5 samples, 0.61%)</title><rect x="98.1595%" y="901" width="0.6135%" height="15" fill="rgb(207,41,40)" fg:x="800" fg:w="5"/><text x="98.4095%" y="911.50"></text></g><g><title>sqlite3BtreePayloadChecked (5 samples, 0.61%)</title><rect x="98.1595%" y="885" width="0.6135%" height="15" fill="rgb(241,179,25)" fg:x="800" fg:w="5"/><text x="98.4095%" y="895.50"></text></g><g><title>accessPayload (5 samples, 0.61%)</title><rect x="98.1595%" y="869" width="0.6135%" height="15" fill="rgb(210,0,34)" fg:x="800" fg:w="5"/><text x="98.4095%" y="879.50"></text></g><g><title>getOverflowPage (5 samples, 0.61%)</title><rect x="98.1595%" y="853" width="0.6135%" height="15" fill="rgb(225,217,29)" fg:x="800" fg:w="5"/><text x="98.4095%" y="863.50"></text></g><g><title>btreeGetPage (5 samples, 0.61%)</title><rect x="98.1595%" y="837" width="0.6135%" height="15" fill="rgb(216,191,38)" fg:x="800" fg:w="5"/><text x="98.4095%" y="847.50"></text></g><g><title>sqlite3PagerGet (5 samples, 0.61%)</title><rect x="98.1595%" y="821" width="0.6135%" height="15" fill="rgb(232,140,52)" fg:x="800" fg:w="5"/><text x="98.4095%" y="831.50"></text></g><g><title>getPageMMap (5 samples, 0.61%)</title><rect x="98.1595%" y="805" width="0.6135%" height="15" fill="rgb(223,158,51)" fg:x="800" fg:w="5"/><text x="98.4095%" y="815.50"></text></g><g><title>getPageNormal (5 samples, 0.61%)</title><rect x="98.1595%" y="789" width="0.6135%" height="15" fill="rgb(235,29,51)" fg:x="800" fg:w="5"/><text x="98.4095%" y="799.50"></text></g><g><title>readDbPage (5 samples, 0.61%)</title><rect x="98.1595%" y="773" width="0.6135%" height="15" fill="rgb(215,181,18)" fg:x="800" fg:w="5"/><text x="98.4095%" y="783.50"></text></g><g><title>sqlite3OsRead (5 samples, 0.61%)</title><rect x="98.1595%" y="757" width="0.6135%" height="15" fill="rgb(227,125,34)" fg:x="800" fg:w="5"/><text x="98.4095%" y="767.50"></text></g><g><title>unixRead (5 samples, 0.61%)</title><rect x="98.1595%" y="741" width="0.6135%" height="15" fill="rgb(230,197,49)" fg:x="800" fg:w="5"/><text x="98.4095%" y="751.50"></text></g><g><title>seekAndRead (5 samples, 0.61%)</title><rect x="98.1595%" y="725" width="0.6135%" height="15" fill="rgb(239,141,16)" fg:x="800" fg:w="5"/><text x="98.4095%" y="735.50"></text></g><g><title>read (5 samples, 0.61%)</title><rect x="98.1595%" y="709" width="0.6135%" height="15" fill="rgb(225,105,43)" fg:x="800" fg:w="5"/><text x="98.4095%" y="719.50"></text></g><g><title>main (10 samples, 1.23%)</title><rect x="97.6687%" y="1541" width="1.2270%" height="15" fill="rgb(214,131,14)" fg:x="796" fg:w="10"/><text x="97.9187%" y="1551.50"></text></g><g><title>std::rt::lang_start_internal (10 samples, 1.23%)</title><rect x="97.6687%" y="1525" width="1.2270%" height="15" fill="rgb(229,177,11)" fg:x="796" fg:w="10"/><text x="97.9187%" y="1535.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 1.23%)</title><rect x="97.6687%" y="1509" width="1.2270%" height="15" fill="rgb(231,180,14)" fg:x="796" fg:w="10"/><text x="97.9187%" y="1519.50"></text></g><g><title>std::panicking::try (10 samples, 1.23%)</title><rect x="97.6687%" y="1493" width="1.2270%" height="15" fill="rgb(232,88,2)" fg:x="796" fg:w="10"/><text x="97.9187%" y="1503.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 1.23%)</title><rect x="97.6687%" y="1477" width="1.2270%" height="15" fill="rgb(205,220,8)" fg:x="796" fg:w="10"/><text x="97.9187%" y="1487.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (10 samples, 1.23%)</title><rect x="97.6687%" y="1461" width="1.2270%" height="15" fill="rgb(225,23,53)" fg:x="796" fg:w="10"/><text x="97.9187%" y="1471.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 1.23%)</title><rect x="97.6687%" y="1445" width="1.2270%" height="15" fill="rgb(213,62,29)" fg:x="796" fg:w="10"/><text x="97.9187%" y="1455.50"></text></g><g><title>std::panicking::try (10 samples, 1.23%)</title><rect x="97.6687%" y="1429" width="1.2270%" height="15" fill="rgb(227,75,7)" fg:x="796" fg:w="10"/><text x="97.9187%" y="1439.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 1.23%)</title><rect x="97.6687%" y="1413" width="1.2270%" height="15" fill="rgb(207,105,14)" fg:x="796" fg:w="10"/><text x="97.9187%" y="1423.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (10 samples, 1.23%)</title><rect x="97.6687%" y="1397" width="1.2270%" height="15" fill="rgb(245,62,29)" fg:x="796" fg:w="10"/><text x="97.9187%" y="1407.50"></text></g><g><title>std::rt::lang_start::{{closure}} (10 samples, 1.23%)</title><rect x="97.6687%" y="1381" width="1.2270%" height="15" fill="rgb(236,202,4)" fg:x="796" fg:w="10"/><text x="97.9187%" y="1391.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (10 samples, 1.23%)</title><rect x="97.6687%" y="1365" width="1.2270%" height="15" fill="rgb(250,67,1)" fg:x="796" fg:w="10"/><text x="97.9187%" y="1375.50"></text></g><g><title>core::ops::function::FnOnce::call_once (10 samples, 1.23%)</title><rect x="97.6687%" y="1349" width="1.2270%" height="15" fill="rgb(253,115,44)" fg:x="796" fg:w="10"/><text x="97.9187%" y="1359.50"></text></g><g><title>mempool_analyzer::main (10 samples, 1.23%)</title><rect x="97.6687%" y="1333" width="1.2270%" height="15" fill="rgb(251,139,18)" fg:x="796" fg:w="10"/><text x="97.9187%" y="1343.50"></text></g><g><title>blockstack_lib::chainstate::stacks::miner::&lt;impl blockstack_lib::chainstate::stacks::StacksBlockBuilder&gt;::build_anchored_block (10 samples, 1.23%)</title><rect x="97.6687%" y="1317" width="1.2270%" height="15" fill="rgb(218,22,32)" fg:x="796" fg:w="10"/><text x="97.9187%" y="1327.50"></text></g><g><title>blockstack_lib::core::mempool::MemPoolDB::iterate_candidates (9 samples, 1.10%)</title><rect x="97.7914%" y="1301" width="1.1043%" height="15" fill="rgb(243,53,5)" fg:x="797" fg:w="9"/><text x="98.0414%" y="1311.50"></text></g><g><title>blockstack_lib::chainstate::stacks::miner::&lt;impl blockstack_lib::chainstate::stacks::StacksBlockBuilder&gt;::build_anchored_block::{{closure}} (9 samples, 1.10%)</title><rect x="97.7914%" y="1285" width="1.1043%" height="15" fill="rgb(227,56,16)" fg:x="797" fg:w="9"/><text x="98.0414%" y="1295.50"></text></g><g><title>blockstack_lib::chainstate::stacks::miner::&lt;impl blockstack_lib::chainstate::stacks::StacksBlockBuilder&gt;::try_mine_tx_with_len (9 samples, 1.10%)</title><rect x="97.7914%" y="1269" width="1.1043%" height="15" fill="rgb(245,53,0)" fg:x="797" fg:w="9"/><text x="98.0414%" y="1279.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::transactions::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::process_transaction (9 samples, 1.10%)</title><rect x="97.7914%" y="1253" width="1.1043%" height="15" fill="rgb(216,170,35)" fg:x="797" fg:w="9"/><text x="98.0414%" y="1263.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::commit (6 samples, 0.74%)</title><rect x="98.1595%" y="1237" width="0.7362%" height="15" fill="rgb(211,200,8)" fg:x="800" fg:w="6"/><text x="98.4095%" y="1247.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::commit (6 samples, 0.74%)</title><rect x="98.1595%" y="1221" width="0.7362%" height="15" fill="rgb(228,204,44)" fg:x="800" fg:w="6"/><text x="98.4095%" y="1231.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::put_all (6 samples, 0.74%)</title><rect x="98.1595%" y="1205" width="0.7362%" height="15" fill="rgb(214,121,17)" fg:x="800" fg:w="6"/><text x="98.4095%" y="1215.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt;::insert_batch (6 samples, 0.74%)</title><rect x="98.1595%" y="1189" width="0.7362%" height="15" fill="rgb(233,64,38)" fg:x="800" fg:w="6"/><text x="98.4095%" y="1199.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::inner_insert_batch (6 samples, 0.74%)</title><rect x="98.1595%" y="1173" width="0.7362%" height="15" fill="rgb(253,54,19)" fg:x="800" fg:w="6"/><text x="98.4095%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.12%)</title><rect x="98.7730%" y="1157" width="0.1227%" height="15" fill="rgb(253,94,18)" fg:x="805" fg:w="1"/><text x="99.0230%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.12%)</title><rect x="98.7730%" y="1141" width="0.1227%" height="15" fill="rgb(227,57,52)" fg:x="805" fg:w="1"/><text x="99.0230%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (1 samples, 0.12%)</title><rect x="98.7730%" y="1125" width="0.1227%" height="15" fill="rgb(230,228,50)" fg:x="805" fg:w="1"/><text x="99.0230%" y="1135.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::inner_insert_batch::{{closure}} (1 samples, 0.12%)</title><rect x="98.7730%" y="1109" width="0.1227%" height="15" fill="rgb(217,205,27)" fg:x="805" fg:w="1"/><text x="99.0230%" y="1119.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::insert_leaf_in_batch (1 samples, 0.12%)</title><rect x="98.7730%" y="1093" width="0.1227%" height="15" fill="rgb(252,71,50)" fg:x="805" fg:w="1"/><text x="99.0230%" y="1103.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::do_insert_leaf (1 samples, 0.12%)</title><rect x="98.7730%" y="1077" width="0.1227%" height="15" fill="rgb(209,86,4)" fg:x="805" fg:w="1"/><text x="99.0230%" y="1087.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::update_root_node_hash (1 samples, 0.12%)</title><rect x="98.7730%" y="1061" width="0.1227%" height="15" fill="rgb(229,94,0)" fg:x="805" fg:w="1"/><text x="99.0230%" y="1071.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::recalculate_root_hash (1 samples, 0.12%)</title><rect x="98.7730%" y="1045" width="0.1227%" height="15" fill="rgb(252,223,21)" fg:x="805" fg:w="1"/><text x="99.0230%" y="1055.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::get_nodetype_hash (1 samples, 0.12%)</title><rect x="98.7730%" y="1029" width="0.1227%" height="15" fill="rgb(230,210,4)" fg:x="805" fg:w="1"/><text x="99.0230%" y="1039.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::node::TrieNodeType::write_consensus_bytes (1 samples, 0.12%)</title><rect x="98.7730%" y="1013" width="0.1227%" height="15" fill="rgb(240,149,38)" fg:x="805" fg:w="1"/><text x="99.0230%" y="1023.50"></text></g><g><title>&lt;T as blockstack_lib::chainstate::stacks::index::node::ConsensusSerializable&lt;M&gt;&gt;::write_consensus_bytes (1 samples, 0.12%)</title><rect x="98.7730%" y="997" width="0.1227%" height="15" fill="rgb(254,105,20)" fg:x="805" fg:w="1"/><text x="99.0230%" y="1007.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::node::ptrs_consensus_hash (1 samples, 0.12%)</title><rect x="98.7730%" y="981" width="0.1227%" height="15" fill="rgb(253,87,46)" fg:x="805" fg:w="1"/><text x="99.0230%" y="991.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::node::TriePtr::write_consensus_bytes (1 samples, 0.12%)</title><rect x="98.7730%" y="965" width="0.1227%" height="15" fill="rgb(253,116,33)" fg:x="805" fg:w="1"/><text x="99.0230%" y="975.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt; as blockstack_lib::chainstate::stacks::index::BlockMap&gt;::get_block_hash_caching (1 samples, 0.12%)</title><rect x="98.7730%" y="949" width="0.1227%" height="15" fill="rgb(229,198,5)" fg:x="805" fg:w="1"/><text x="99.0230%" y="959.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt; as blockstack_lib::chainstate::stacks::index::BlockMap&gt;::get_block_hash (1 samples, 0.12%)</title><rect x="98.7730%" y="933" width="0.1227%" height="15" fill="rgb(242,38,37)" fg:x="805" fg:w="1"/><text x="99.0230%" y="943.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::get_block_hash (1 samples, 0.12%)</title><rect x="98.7730%" y="917" width="0.1227%" height="15" fill="rgb(242,69,53)" fg:x="805" fg:w="1"/><text x="99.0230%" y="927.50"></text></g><g><title>rusqlite::Connection::query_row (1 samples, 0.12%)</title><rect x="98.7730%" y="901" width="0.1227%" height="15" fill="rgb(249,80,16)" fg:x="805" fg:w="1"/><text x="99.0230%" y="911.50"></text></g><g><title>rusqlite::statement::Statement::query_row (1 samples, 0.12%)</title><rect x="98.7730%" y="885" width="0.1227%" height="15" fill="rgb(206,128,11)" fg:x="805" fg:w="1"/><text x="99.0230%" y="895.50"></text></g><g><title>rusqlite::row::Rows::get_expected_row (1 samples, 0.12%)</title><rect x="98.7730%" y="869" width="0.1227%" height="15" fill="rgb(212,35,20)" fg:x="805" fg:w="1"/><text x="99.0230%" y="879.50"></text></g><g><title>rusqlite::row::Rows::next (1 samples, 0.12%)</title><rect x="98.7730%" y="853" width="0.1227%" height="15" fill="rgb(236,79,13)" fg:x="805" fg:w="1"/><text x="99.0230%" y="863.50"></text></g><g><title>&lt;rusqlite::row::Rows as fallible_streaming_iterator::FallibleStreamingIterator&gt;::advance (1 samples, 0.12%)</title><rect x="98.7730%" y="837" width="0.1227%" height="15" fill="rgb(233,123,3)" fg:x="805" fg:w="1"/><text x="99.0230%" y="847.50"></text></g><g><title>rusqlite::statement::Statement::step (1 samples, 0.12%)</title><rect x="98.7730%" y="821" width="0.1227%" height="15" fill="rgb(214,93,52)" fg:x="805" fg:w="1"/><text x="99.0230%" y="831.50"></text></g><g><title>rusqlite::raw_statement::RawStatement::step (1 samples, 0.12%)</title><rect x="98.7730%" y="805" width="0.1227%" height="15" fill="rgb(251,37,40)" fg:x="805" fg:w="1"/><text x="99.0230%" y="815.50"></text></g><g><title>sqlite3_step (1 samples, 0.12%)</title><rect x="98.7730%" y="789" width="0.1227%" height="15" fill="rgb(227,80,54)" fg:x="805" fg:w="1"/><text x="99.0230%" y="799.50"></text></g><g><title>sqlite3_step (1 samples, 0.12%)</title><rect x="98.7730%" y="773" width="0.1227%" height="15" fill="rgb(254,48,11)" fg:x="805" fg:w="1"/><text x="99.0230%" y="783.50"></text></g><g><title>sqlite3Step (1 samples, 0.12%)</title><rect x="98.7730%" y="757" width="0.1227%" height="15" fill="rgb(235,193,26)" fg:x="805" fg:w="1"/><text x="99.0230%" y="767.50"></text></g><g><title>sqlite3VdbeExec (1 samples, 0.12%)</title><rect x="98.7730%" y="741" width="0.1227%" height="15" fill="rgb(229,99,21)" fg:x="805" fg:w="1"/><text x="99.0230%" y="751.50"></text></g><g><title>sqlite3BtreeMovetoUnpacked (1 samples, 0.12%)</title><rect x="98.7730%" y="725" width="0.1227%" height="15" fill="rgb(211,140,41)" fg:x="805" fg:w="1"/><text x="99.0230%" y="735.50"></text></g><g><title>moveToChild (1 samples, 0.12%)</title><rect x="98.7730%" y="709" width="0.1227%" height="15" fill="rgb(240,227,30)" fg:x="805" fg:w="1"/><text x="99.0230%" y="719.50"></text></g><g><title>getAndInitPage (1 samples, 0.12%)</title><rect x="98.7730%" y="693" width="0.1227%" height="15" fill="rgb(215,224,45)" fg:x="805" fg:w="1"/><text x="99.0230%" y="703.50"></text></g><g><title>sqlite3PagerGet (1 samples, 0.12%)</title><rect x="98.7730%" y="677" width="0.1227%" height="15" fill="rgb(206,123,31)" fg:x="805" fg:w="1"/><text x="99.0230%" y="687.50"></text></g><g><title>getPageMMap (1 samples, 0.12%)</title><rect x="98.7730%" y="661" width="0.1227%" height="15" fill="rgb(210,138,16)" fg:x="805" fg:w="1"/><text x="99.0230%" y="671.50"></text></g><g><title>getPageNormal (1 samples, 0.12%)</title><rect x="98.7730%" y="645" width="0.1227%" height="15" fill="rgb(228,57,28)" fg:x="805" fg:w="1"/><text x="99.0230%" y="655.50"></text></g><g><title>sqlite3PcacheFetch (1 samples, 0.12%)</title><rect x="98.7730%" y="629" width="0.1227%" height="15" fill="rgb(242,170,10)" fg:x="805" fg:w="1"/><text x="99.0230%" y="639.50"></text></g><g><title>pcache1Fetch (1 samples, 0.12%)</title><rect x="98.7730%" y="613" width="0.1227%" height="15" fill="rgb(228,214,39)" fg:x="805" fg:w="1"/><text x="99.0230%" y="623.50"></text></g><g><title>pcache1FetchWithMutex (1 samples, 0.12%)</title><rect x="98.7730%" y="597" width="0.1227%" height="15" fill="rgb(218,179,33)" fg:x="805" fg:w="1"/><text x="99.0230%" y="607.50"></text></g><g><title>pcache1FetchNoMutex (1 samples, 0.12%)</title><rect x="98.7730%" y="581" width="0.1227%" height="15" fill="rgb(235,193,39)" fg:x="805" fg:w="1"/><text x="99.0230%" y="591.50"></text></g><g><title>__lseek64 (1 samples, 0.12%)</title><rect x="98.8957%" y="709" width="0.1227%" height="15" fill="rgb(219,221,36)" fg:x="806" fg:w="1"/><text x="99.1457%" y="719.50"></text></g><g><title>mempool_analyzer::main (3 samples, 0.37%)</title><rect x="98.8957%" y="1541" width="0.3681%" height="15" fill="rgb(248,218,19)" fg:x="806" fg:w="3"/><text x="99.1457%" y="1551.50"></text></g><g><title>blockstack_lib::chainstate::stacks::miner::&lt;impl blockstack_lib::chainstate::stacks::StacksBlockBuilder&gt;::build_anchored_block (3 samples, 0.37%)</title><rect x="98.8957%" y="1525" width="0.3681%" height="15" fill="rgb(205,50,9)" fg:x="806" fg:w="3"/><text x="99.1457%" y="1535.50"></text></g><g><title>blockstack_lib::core::mempool::MemPoolDB::iterate_candidates (3 samples, 0.37%)</title><rect x="98.8957%" y="1509" width="0.3681%" height="15" fill="rgb(238,81,28)" fg:x="806" fg:w="3"/><text x="99.1457%" y="1519.50"></text></g><g><title>blockstack_lib::chainstate::stacks::miner::&lt;impl blockstack_lib::chainstate::stacks::StacksBlockBuilder&gt;::build_anchored_block::{{closure}} (3 samples, 0.37%)</title><rect x="98.8957%" y="1493" width="0.3681%" height="15" fill="rgb(235,110,19)" fg:x="806" fg:w="3"/><text x="99.1457%" y="1503.50"></text></g><g><title>blockstack_lib::chainstate::stacks::miner::&lt;impl blockstack_lib::chainstate::stacks::StacksBlockBuilder&gt;::try_mine_tx_with_len (3 samples, 0.37%)</title><rect x="98.8957%" y="1477" width="0.3681%" height="15" fill="rgb(214,7,14)" fg:x="806" fg:w="3"/><text x="99.1457%" y="1487.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::transactions::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::process_transaction (3 samples, 0.37%)</title><rect x="98.8957%" y="1461" width="0.3681%" height="15" fill="rgb(211,77,3)" fg:x="806" fg:w="3"/><text x="99.1457%" y="1471.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::transactions::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::process_transaction_payload (3 samples, 0.37%)</title><rect x="98.8957%" y="1445" width="0.3681%" height="15" fill="rgb(229,5,9)" fg:x="806" fg:w="3"/><text x="99.1457%" y="1455.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::run_contract_call (3 samples, 0.37%)</title><rect x="98.8957%" y="1429" width="0.3681%" height="15" fill="rgb(225,90,11)" fg:x="806" fg:w="3"/><text x="99.1457%" y="1439.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::with_abort_callback (3 samples, 0.37%)</title><rect x="98.8957%" y="1413" width="0.3681%" height="15" fill="rgb(242,56,8)" fg:x="806" fg:w="3"/><text x="99.1457%" y="1423.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::with_abort_callback::{{closure}} (3 samples, 0.37%)</title><rect x="98.8957%" y="1397" width="0.3681%" height="15" fill="rgb(249,212,39)" fg:x="806" fg:w="3"/><text x="99.1457%" y="1407.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::with_abort_callback::{{closure}}::{{closure}} (3 samples, 0.37%)</title><rect x="98.8957%" y="1381" width="0.3681%" height="15" fill="rgb(236,90,9)" fg:x="806" fg:w="3"/><text x="99.1457%" y="1391.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::run_contract_call::{{closure}} (3 samples, 0.37%)</title><rect x="98.8957%" y="1365" width="0.3681%" height="15" fill="rgb(206,88,35)" fg:x="806" fg:w="3"/><text x="99.1457%" y="1375.50"></text></g><g><title>blockstack_lib::vm::contexts::OwnedEnvironment::execute_transaction (3 samples, 0.37%)</title><rect x="98.8957%" y="1349" width="0.3681%" height="15" fill="rgb(205,126,30)" fg:x="806" fg:w="3"/><text x="99.1457%" y="1359.50"></text></g><g><title>blockstack_lib::vm::contexts::OwnedEnvironment::execute_in_env (3 samples, 0.37%)</title><rect x="98.8957%" y="1333" width="0.3681%" height="15" fill="rgb(230,176,12)" fg:x="806" fg:w="3"/><text x="99.1457%" y="1343.50"></text></g><g><title>blockstack_lib::vm::contexts::OwnedEnvironment::execute_transaction::{{closure}} (3 samples, 0.37%)</title><rect x="98.8957%" y="1317" width="0.3681%" height="15" fill="rgb(243,19,9)" fg:x="806" fg:w="3"/><text x="99.1457%" y="1327.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_contract (3 samples, 0.37%)</title><rect x="98.8957%" y="1301" width="0.3681%" height="15" fill="rgb(245,171,17)" fg:x="806" fg:w="3"/><text x="99.1457%" y="1311.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get_contract_size (3 samples, 0.37%)</title><rect x="98.8957%" y="1285" width="0.3681%" height="15" fill="rgb(227,52,21)" fg:x="806" fg:w="3"/><text x="99.1457%" y="1295.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::fetch_metadata (3 samples, 0.37%)</title><rect x="98.8957%" y="1269" width="0.3681%" height="15" fill="rgb(238,69,14)" fg:x="806" fg:w="3"/><text x="99.1457%" y="1279.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get_metadata (3 samples, 0.37%)</title><rect x="98.8957%" y="1253" width="0.3681%" height="15" fill="rgb(241,156,39)" fg:x="806" fg:w="3"/><text x="99.1457%" y="1263.50"></text></g><g><title>blockstack_lib::vm::database::clarity_store::ClarityBackingStore::get_metadata (3 samples, 0.37%)</title><rect x="98.8957%" y="1237" width="0.3681%" height="15" fill="rgb(212,227,28)" fg:x="806" fg:w="3"/><text x="99.1457%" y="1247.50"></text></g><g><title>blockstack_lib::vm::database::clarity_store::ClarityBackingStore::get_contract_hash (3 samples, 0.37%)</title><rect x="98.8957%" y="1221" width="0.3681%" height="15" fill="rgb(209,118,27)" fg:x="806" fg:w="3"/><text x="99.1457%" y="1231.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::get (3 samples, 0.37%)</title><rect x="98.8957%" y="1205" width="0.3681%" height="15" fill="rgb(226,102,5)" fg:x="806" fg:w="3"/><text x="99.1457%" y="1215.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get (3 samples, 0.37%)</title><rect x="98.8957%" y="1189" width="0.3681%" height="15" fill="rgb(223,34,3)" fg:x="806" fg:w="3"/><text x="99.1457%" y="1199.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt; as blockstack_lib::chainstate::stacks::index::marf::MarfConnection&lt;T&gt;&gt;::with_conn (3 samples, 0.37%)</title><rect x="98.8957%" y="1173" width="0.3681%" height="15" fill="rgb(221,81,38)" fg:x="806" fg:w="3"/><text x="99.1457%" y="1183.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get::{{closure}} (3 samples, 0.37%)</title><rect x="98.8957%" y="1157" width="0.3681%" height="15" fill="rgb(236,219,28)" fg:x="806" fg:w="3"/><text x="99.1457%" y="1167.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_by_key (3 samples, 0.37%)</title><rect x="98.8957%" y="1141" width="0.3681%" height="15" fill="rgb(213,200,14)" fg:x="806" fg:w="3"/><text x="99.1457%" y="1151.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_path (3 samples, 0.37%)</title><rect x="98.8957%" y="1125" width="0.3681%" height="15" fill="rgb(240,33,19)" fg:x="806" fg:w="3"/><text x="99.1457%" y="1135.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk (3 samples, 0.37%)</title><rect x="98.8957%" y="1109" width="0.3681%" height="15" fill="rgb(233,113,27)" fg:x="806" fg:w="3"/><text x="99.1457%" y="1119.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_backptr (3 samples, 0.37%)</title><rect x="98.8957%" y="1093" width="0.3681%" height="15" fill="rgb(220,221,18)" fg:x="806" fg:w="3"/><text x="99.1457%" y="1103.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_backptr (3 samples, 0.37%)</title><rect x="98.8957%" y="1077" width="0.3681%" height="15" fill="rgb(238,92,8)" fg:x="806" fg:w="3"/><text x="99.1457%" y="1087.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (3 samples, 0.37%)</title><rect x="98.8957%" y="1061" width="0.3681%" height="15" fill="rgb(222,164,16)" fg:x="806" fg:w="3"/><text x="99.1457%" y="1071.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (3 samples, 0.37%)</title><rect x="98.8957%" y="1045" width="0.3681%" height="15" fill="rgb(241,119,3)" fg:x="806" fg:w="3"/><text x="99.1457%" y="1055.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (3 samples, 0.37%)</title><rect x="98.8957%" y="1029" width="0.3681%" height="15" fill="rgb(241,44,8)" fg:x="806" fg:w="3"/><text x="99.1457%" y="1039.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (3 samples, 0.37%)</title><rect x="98.8957%" y="1013" width="0.3681%" height="15" fill="rgb(230,36,40)" fg:x="806" fg:w="3"/><text x="99.1457%" y="1023.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (3 samples, 0.37%)</title><rect x="98.8957%" y="997" width="0.3681%" height="15" fill="rgb(243,16,36)" fg:x="806" fg:w="3"/><text x="99.1457%" y="1007.50"></text></g><g><title>std::io::Read::read_exact (3 samples, 0.37%)</title><rect x="98.8957%" y="981" width="0.3681%" height="15" fill="rgb(231,4,26)" fg:x="806" fg:w="3"/><text x="99.1457%" y="991.50"></text></g><g><title>std::io::default_read_exact (3 samples, 0.37%)</title><rect x="98.8957%" y="965" width="0.3681%" height="15" fill="rgb(240,9,31)" fg:x="806" fg:w="3"/><text x="99.1457%" y="975.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (3 samples, 0.37%)</title><rect x="98.8957%" y="949" width="0.3681%" height="15" fill="rgb(207,173,15)" fg:x="806" fg:w="3"/><text x="99.1457%" y="959.50"></text></g><g><title>sqlite3_blob_read (3 samples, 0.37%)</title><rect x="98.8957%" y="933" width="0.3681%" height="15" fill="rgb(224,192,53)" fg:x="806" fg:w="3"/><text x="99.1457%" y="943.50"></text></g><g><title>blobReadWrite (3 samples, 0.37%)</title><rect x="98.8957%" y="917" width="0.3681%" height="15" fill="rgb(223,67,28)" fg:x="806" fg:w="3"/><text x="99.1457%" y="927.50"></text></g><g><title>sqlite3BtreePayloadChecked (3 samples, 0.37%)</title><rect x="98.8957%" y="901" width="0.3681%" height="15" fill="rgb(211,20,47)" fg:x="806" fg:w="3"/><text x="99.1457%" y="911.50"></text></g><g><title>sqlite3BtreePayloadChecked (3 samples, 0.37%)</title><rect x="98.8957%" y="885" width="0.3681%" height="15" fill="rgb(240,228,2)" fg:x="806" fg:w="3"/><text x="99.1457%" y="895.50"></text></g><g><title>accessPayload (3 samples, 0.37%)</title><rect x="98.8957%" y="869" width="0.3681%" height="15" fill="rgb(248,151,12)" fg:x="806" fg:w="3"/><text x="99.1457%" y="879.50"></text></g><g><title>getOverflowPage (3 samples, 0.37%)</title><rect x="98.8957%" y="853" width="0.3681%" height="15" fill="rgb(244,8,39)" fg:x="806" fg:w="3"/><text x="99.1457%" y="863.50"></text></g><g><title>btreeGetPage (3 samples, 0.37%)</title><rect x="98.8957%" y="837" width="0.3681%" height="15" fill="rgb(222,26,8)" fg:x="806" fg:w="3"/><text x="99.1457%" y="847.50"></text></g><g><title>sqlite3PagerGet (3 samples, 0.37%)</title><rect x="98.8957%" y="821" width="0.3681%" height="15" fill="rgb(213,106,44)" fg:x="806" fg:w="3"/><text x="99.1457%" y="831.50"></text></g><g><title>getPageMMap (3 samples, 0.37%)</title><rect x="98.8957%" y="805" width="0.3681%" height="15" fill="rgb(214,129,20)" fg:x="806" fg:w="3"/><text x="99.1457%" y="815.50"></text></g><g><title>getPageNormal (3 samples, 0.37%)</title><rect x="98.8957%" y="789" width="0.3681%" height="15" fill="rgb(212,32,13)" fg:x="806" fg:w="3"/><text x="99.1457%" y="799.50"></text></g><g><title>readDbPage (3 samples, 0.37%)</title><rect x="98.8957%" y="773" width="0.3681%" height="15" fill="rgb(208,168,33)" fg:x="806" fg:w="3"/><text x="99.1457%" y="783.50"></text></g><g><title>sqlite3OsRead (3 samples, 0.37%)</title><rect x="98.8957%" y="757" width="0.3681%" height="15" fill="rgb(231,207,8)" fg:x="806" fg:w="3"/><text x="99.1457%" y="767.50"></text></g><g><title>unixRead (3 samples, 0.37%)</title><rect x="98.8957%" y="741" width="0.3681%" height="15" fill="rgb(235,219,23)" fg:x="806" fg:w="3"/><text x="99.1457%" y="751.50"></text></g><g><title>seekAndRead (3 samples, 0.37%)</title><rect x="98.8957%" y="725" width="0.3681%" height="15" fill="rgb(226,216,26)" fg:x="806" fg:w="3"/><text x="99.1457%" y="735.50"></text></g><g><title>read (2 samples, 0.25%)</title><rect x="99.0184%" y="709" width="0.2454%" height="15" fill="rgb(239,137,16)" fg:x="807" fg:w="2"/><text x="99.2684%" y="719.50"></text></g><g><title>blockstack_lib::chainstate::stacks::miner::&lt;impl blockstack_lib::chainstate::stacks::StacksBlockBuilder&gt;::epoch_begin (1 samples, 0.12%)</title><rect x="99.2638%" y="1461" width="0.1227%" height="15" fill="rgb(207,12,36)" fg:x="809" fg:w="1"/><text x="99.5138%" y="1471.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::blocks::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::setup_block (1 samples, 0.12%)</title><rect x="99.2638%" y="1445" width="0.1227%" height="15" fill="rgb(210,214,24)" fg:x="809" fg:w="1"/><text x="99.5138%" y="1455.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::StacksChainState::chainstate_block_begin (1 samples, 0.12%)</title><rect x="99.2638%" y="1429" width="0.1227%" height="15" fill="rgb(206,56,30)" fg:x="809" fg:w="1"/><text x="99.5138%" y="1439.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::StacksChainState::inner_clarity_tx_begin (1 samples, 0.12%)</title><rect x="99.2638%" y="1413" width="0.1227%" height="15" fill="rgb(228,143,26)" fg:x="809" fg:w="1"/><text x="99.5138%" y="1423.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityInstance::begin_block (1 samples, 0.12%)</title><rect x="99.2638%" y="1397" width="0.1227%" height="15" fill="rgb(216,218,46)" fg:x="809" fg:w="1"/><text x="99.5138%" y="1407.50"></text></g><g><title>blockstack_lib::vm::costs::LimitedCostTracker::new (1 samples, 0.12%)</title><rect x="99.2638%" y="1381" width="0.1227%" height="15" fill="rgb(206,6,19)" fg:x="809" fg:w="1"/><text x="99.5138%" y="1391.50"></text></g><g><title>blockstack_lib::vm::costs::TrackerData::load_costs (1 samples, 0.12%)</title><rect x="99.2638%" y="1365" width="0.1227%" height="15" fill="rgb(239,177,51)" fg:x="809" fg:w="1"/><text x="99.5138%" y="1375.50"></text></g><g><title>blockstack_lib::vm::costs::load_cost_functions (1 samples, 0.12%)</title><rect x="99.2638%" y="1349" width="0.1227%" height="15" fill="rgb(216,55,25)" fg:x="809" fg:w="1"/><text x="99.5138%" y="1359.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get_value (1 samples, 0.12%)</title><rect x="99.2638%" y="1333" width="0.1227%" height="15" fill="rgb(231,163,29)" fg:x="809" fg:w="1"/><text x="99.5138%" y="1343.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get_value (1 samples, 0.12%)</title><rect x="99.2638%" y="1317" width="0.1227%" height="15" fill="rgb(232,149,50)" fg:x="809" fg:w="1"/><text x="99.5138%" y="1327.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.12%)</title><rect x="99.2638%" y="1301" width="0.1227%" height="15" fill="rgb(223,142,48)" fg:x="809" fg:w="1"/><text x="99.5138%" y="1311.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get_value::{{closure}} (1 samples, 0.12%)</title><rect x="99.2638%" y="1285" width="0.1227%" height="15" fill="rgb(245,83,23)" fg:x="809" fg:w="1"/><text x="99.5138%" y="1295.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::get (1 samples, 0.12%)</title><rect x="99.2638%" y="1269" width="0.1227%" height="15" fill="rgb(224,63,2)" fg:x="809" fg:w="1"/><text x="99.5138%" y="1279.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get (1 samples, 0.12%)</title><rect x="99.2638%" y="1253" width="0.1227%" height="15" fill="rgb(218,65,53)" fg:x="809" fg:w="1"/><text x="99.5138%" y="1263.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt; as blockstack_lib::chainstate::stacks::index::marf::MarfConnection&lt;T&gt;&gt;::with_conn (1 samples, 0.12%)</title><rect x="99.2638%" y="1237" width="0.1227%" height="15" fill="rgb(221,84,29)" fg:x="809" fg:w="1"/><text x="99.5138%" y="1247.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get::{{closure}} (1 samples, 0.12%)</title><rect x="99.2638%" y="1221" width="0.1227%" height="15" fill="rgb(234,0,32)" fg:x="809" fg:w="1"/><text x="99.5138%" y="1231.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_by_key (1 samples, 0.12%)</title><rect x="99.2638%" y="1205" width="0.1227%" height="15" fill="rgb(206,20,16)" fg:x="809" fg:w="1"/><text x="99.5138%" y="1215.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_path (1 samples, 0.12%)</title><rect x="99.2638%" y="1189" width="0.1227%" height="15" fill="rgb(244,172,18)" fg:x="809" fg:w="1"/><text x="99.5138%" y="1199.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk (1 samples, 0.12%)</title><rect x="99.2638%" y="1173" width="0.1227%" height="15" fill="rgb(254,133,1)" fg:x="809" fg:w="1"/><text x="99.5138%" y="1183.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_backptr (1 samples, 0.12%)</title><rect x="99.2638%" y="1157" width="0.1227%" height="15" fill="rgb(222,206,41)" fg:x="809" fg:w="1"/><text x="99.5138%" y="1167.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_backptr (1 samples, 0.12%)</title><rect x="99.2638%" y="1141" width="0.1227%" height="15" fill="rgb(212,3,42)" fg:x="809" fg:w="1"/><text x="99.5138%" y="1151.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (1 samples, 0.12%)</title><rect x="99.2638%" y="1125" width="0.1227%" height="15" fill="rgb(241,11,4)" fg:x="809" fg:w="1"/><text x="99.5138%" y="1135.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (1 samples, 0.12%)</title><rect x="99.2638%" y="1109" width="0.1227%" height="15" fill="rgb(205,19,26)" fg:x="809" fg:w="1"/><text x="99.5138%" y="1119.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (1 samples, 0.12%)</title><rect x="99.2638%" y="1093" width="0.1227%" height="15" fill="rgb(210,179,32)" fg:x="809" fg:w="1"/><text x="99.5138%" y="1103.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (1 samples, 0.12%)</title><rect x="99.2638%" y="1077" width="0.1227%" height="15" fill="rgb(227,116,49)" fg:x="809" fg:w="1"/><text x="99.5138%" y="1087.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (1 samples, 0.12%)</title><rect x="99.2638%" y="1061" width="0.1227%" height="15" fill="rgb(211,146,6)" fg:x="809" fg:w="1"/><text x="99.5138%" y="1071.50"></text></g><g><title>std::io::Read::read_exact (1 samples, 0.12%)</title><rect x="99.2638%" y="1045" width="0.1227%" height="15" fill="rgb(219,44,39)" fg:x="809" fg:w="1"/><text x="99.5138%" y="1055.50"></text></g><g><title>std::io::default_read_exact (1 samples, 0.12%)</title><rect x="99.2638%" y="1029" width="0.1227%" height="15" fill="rgb(234,128,11)" fg:x="809" fg:w="1"/><text x="99.5138%" y="1039.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="99.2638%" y="1013" width="0.1227%" height="15" fill="rgb(220,183,53)" fg:x="809" fg:w="1"/><text x="99.5138%" y="1023.50"></text></g><g><title>sqlite3_blob_read (1 samples, 0.12%)</title><rect x="99.2638%" y="997" width="0.1227%" height="15" fill="rgb(213,219,32)" fg:x="809" fg:w="1"/><text x="99.5138%" y="1007.50"></text></g><g><title>blobReadWrite (1 samples, 0.12%)</title><rect x="99.2638%" y="981" width="0.1227%" height="15" fill="rgb(232,156,16)" fg:x="809" fg:w="1"/><text x="99.5138%" y="991.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="99.2638%" y="965" width="0.1227%" height="15" fill="rgb(246,135,34)" fg:x="809" fg:w="1"/><text x="99.5138%" y="975.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="99.2638%" y="949" width="0.1227%" height="15" fill="rgb(241,99,0)" fg:x="809" fg:w="1"/><text x="99.5138%" y="959.50"></text></g><g><title>accessPayload (1 samples, 0.12%)</title><rect x="99.2638%" y="933" width="0.1227%" height="15" fill="rgb(222,103,45)" fg:x="809" fg:w="1"/><text x="99.5138%" y="943.50"></text></g><g><title>getOverflowPage (1 samples, 0.12%)</title><rect x="99.2638%" y="917" width="0.1227%" height="15" fill="rgb(212,57,4)" fg:x="809" fg:w="1"/><text x="99.5138%" y="927.50"></text></g><g><title>btreeGetPage (1 samples, 0.12%)</title><rect x="99.2638%" y="901" width="0.1227%" height="15" fill="rgb(215,68,47)" fg:x="809" fg:w="1"/><text x="99.5138%" y="911.50"></text></g><g><title>sqlite3PagerGet (1 samples, 0.12%)</title><rect x="99.2638%" y="885" width="0.1227%" height="15" fill="rgb(230,84,2)" fg:x="809" fg:w="1"/><text x="99.5138%" y="895.50"></text></g><g><title>getPageMMap (1 samples, 0.12%)</title><rect x="99.2638%" y="869" width="0.1227%" height="15" fill="rgb(220,102,14)" fg:x="809" fg:w="1"/><text x="99.5138%" y="879.50"></text></g><g><title>getPageNormal (1 samples, 0.12%)</title><rect x="99.2638%" y="853" width="0.1227%" height="15" fill="rgb(240,10,32)" fg:x="809" fg:w="1"/><text x="99.5138%" y="863.50"></text></g><g><title>readDbPage (1 samples, 0.12%)</title><rect x="99.2638%" y="837" width="0.1227%" height="15" fill="rgb(215,47,27)" fg:x="809" fg:w="1"/><text x="99.5138%" y="847.50"></text></g><g><title>sqlite3OsRead (1 samples, 0.12%)</title><rect x="99.2638%" y="821" width="0.1227%" height="15" fill="rgb(233,188,43)" fg:x="809" fg:w="1"/><text x="99.5138%" y="831.50"></text></g><g><title>unixRead (1 samples, 0.12%)</title><rect x="99.2638%" y="805" width="0.1227%" height="15" fill="rgb(253,190,1)" fg:x="809" fg:w="1"/><text x="99.5138%" y="815.50"></text></g><g><title>seekAndRead (1 samples, 0.12%)</title><rect x="99.2638%" y="789" width="0.1227%" height="15" fill="rgb(206,114,52)" fg:x="809" fg:w="1"/><text x="99.5138%" y="799.50"></text></g><g><title>read (1 samples, 0.12%)</title><rect x="99.2638%" y="773" width="0.1227%" height="15" fill="rgb(233,120,37)" fg:x="809" fg:w="1"/><text x="99.5138%" y="783.50"></text></g><g><title>std::rt::lang_start::{{closure}} (2 samples, 0.25%)</title><rect x="99.2638%" y="1541" width="0.2454%" height="15" fill="rgb(214,52,39)" fg:x="809" fg:w="2"/><text x="99.5138%" y="1551.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.25%)</title><rect x="99.2638%" y="1525" width="0.2454%" height="15" fill="rgb(223,80,29)" fg:x="809" fg:w="2"/><text x="99.5138%" y="1535.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.25%)</title><rect x="99.2638%" y="1509" width="0.2454%" height="15" fill="rgb(230,101,40)" fg:x="809" fg:w="2"/><text x="99.5138%" y="1519.50"></text></g><g><title>mempool_analyzer::main (2 samples, 0.25%)</title><rect x="99.2638%" y="1493" width="0.2454%" height="15" fill="rgb(219,211,8)" fg:x="809" fg:w="2"/><text x="99.5138%" y="1503.50"></text></g><g><title>blockstack_lib::chainstate::stacks::miner::&lt;impl blockstack_lib::chainstate::stacks::StacksBlockBuilder&gt;::build_anchored_block (2 samples, 0.25%)</title><rect x="99.2638%" y="1477" width="0.2454%" height="15" fill="rgb(252,126,28)" fg:x="809" fg:w="2"/><text x="99.5138%" y="1487.50"></text></g><g><title>blockstack_lib::core::mempool::MemPoolDB::iterate_candidates (1 samples, 0.12%)</title><rect x="99.3865%" y="1461" width="0.1227%" height="15" fill="rgb(215,56,38)" fg:x="810" fg:w="1"/><text x="99.6365%" y="1471.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::accounts::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::get_account (1 samples, 0.12%)</title><rect x="99.3865%" y="1445" width="0.1227%" height="15" fill="rgb(249,55,44)" fg:x="810" fg:w="1"/><text x="99.6365%" y="1455.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityConnection::with_clarity_db_readonly (1 samples, 0.12%)</title><rect x="99.3865%" y="1429" width="0.1227%" height="15" fill="rgb(220,221,32)" fg:x="810" fg:w="1"/><text x="99.6365%" y="1439.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::db::ClarityTx as blockstack_lib::clarity_vm::clarity::ClarityConnection&gt;::with_clarity_db_readonly_owned (1 samples, 0.12%)</title><rect x="99.3865%" y="1413" width="0.1227%" height="15" fill="rgb(212,216,41)" fg:x="810" fg:w="1"/><text x="99.6365%" y="1423.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::clarity::ClarityBlockConnection as blockstack_lib::clarity_vm::clarity::ClarityConnection&gt;::with_clarity_db_readonly_owned (1 samples, 0.12%)</title><rect x="99.3865%" y="1397" width="0.1227%" height="15" fill="rgb(228,213,43)" fg:x="810" fg:w="1"/><text x="99.6365%" y="1407.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityConnection::with_clarity_db_readonly::{{closure}} (1 samples, 0.12%)</title><rect x="99.3865%" y="1381" width="0.1227%" height="15" fill="rgb(211,31,26)" fg:x="810" fg:w="1"/><text x="99.6365%" y="1391.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::accounts::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::get_account::{{closure}} (1 samples, 0.12%)</title><rect x="99.3865%" y="1365" width="0.1227%" height="15" fill="rgb(229,202,19)" fg:x="810" fg:w="1"/><text x="99.6365%" y="1375.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get_account_stx_balance (1 samples, 0.12%)</title><rect x="99.3865%" y="1349" width="0.1227%" height="15" fill="rgb(229,105,46)" fg:x="810" fg:w="1"/><text x="99.6365%" y="1359.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get (1 samples, 0.12%)</title><rect x="99.3865%" y="1333" width="0.1227%" height="15" fill="rgb(235,108,1)" fg:x="810" fg:w="1"/><text x="99.6365%" y="1343.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get (1 samples, 0.12%)</title><rect x="99.3865%" y="1317" width="0.1227%" height="15" fill="rgb(245,111,35)" fg:x="810" fg:w="1"/><text x="99.6365%" y="1327.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.12%)</title><rect x="99.3865%" y="1301" width="0.1227%" height="15" fill="rgb(219,185,31)" fg:x="810" fg:w="1"/><text x="99.6365%" y="1311.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get::{{closure}} (1 samples, 0.12%)</title><rect x="99.3865%" y="1285" width="0.1227%" height="15" fill="rgb(214,4,43)" fg:x="810" fg:w="1"/><text x="99.6365%" y="1295.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::get (1 samples, 0.12%)</title><rect x="99.3865%" y="1269" width="0.1227%" height="15" fill="rgb(235,227,40)" fg:x="810" fg:w="1"/><text x="99.6365%" y="1279.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get (1 samples, 0.12%)</title><rect x="99.3865%" y="1253" width="0.1227%" height="15" fill="rgb(230,88,30)" fg:x="810" fg:w="1"/><text x="99.6365%" y="1263.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt; as blockstack_lib::chainstate::stacks::index::marf::MarfConnection&lt;T&gt;&gt;::with_conn (1 samples, 0.12%)</title><rect x="99.3865%" y="1237" width="0.1227%" height="15" fill="rgb(216,217,1)" fg:x="810" fg:w="1"/><text x="99.6365%" y="1247.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get::{{closure}} (1 samples, 0.12%)</title><rect x="99.3865%" y="1221" width="0.1227%" height="15" fill="rgb(248,139,50)" fg:x="810" fg:w="1"/><text x="99.6365%" y="1231.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_by_key (1 samples, 0.12%)</title><rect x="99.3865%" y="1205" width="0.1227%" height="15" fill="rgb(233,1,21)" fg:x="810" fg:w="1"/><text x="99.6365%" y="1215.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_path (1 samples, 0.12%)</title><rect x="99.3865%" y="1189" width="0.1227%" height="15" fill="rgb(215,183,12)" fg:x="810" fg:w="1"/><text x="99.6365%" y="1199.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk (1 samples, 0.12%)</title><rect x="99.3865%" y="1173" width="0.1227%" height="15" fill="rgb(229,104,42)" fg:x="810" fg:w="1"/><text x="99.6365%" y="1183.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_backptr (1 samples, 0.12%)</title><rect x="99.3865%" y="1157" width="0.1227%" height="15" fill="rgb(243,34,48)" fg:x="810" fg:w="1"/><text x="99.6365%" y="1167.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_backptr (1 samples, 0.12%)</title><rect x="99.3865%" y="1141" width="0.1227%" height="15" fill="rgb(239,11,44)" fg:x="810" fg:w="1"/><text x="99.6365%" y="1151.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (1 samples, 0.12%)</title><rect x="99.3865%" y="1125" width="0.1227%" height="15" fill="rgb(231,98,35)" fg:x="810" fg:w="1"/><text x="99.6365%" y="1135.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (1 samples, 0.12%)</title><rect x="99.3865%" y="1109" width="0.1227%" height="15" fill="rgb(233,28,25)" fg:x="810" fg:w="1"/><text x="99.6365%" y="1119.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (1 samples, 0.12%)</title><rect x="99.3865%" y="1093" width="0.1227%" height="15" fill="rgb(234,123,11)" fg:x="810" fg:w="1"/><text x="99.6365%" y="1103.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (1 samples, 0.12%)</title><rect x="99.3865%" y="1077" width="0.1227%" height="15" fill="rgb(220,69,3)" fg:x="810" fg:w="1"/><text x="99.6365%" y="1087.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (1 samples, 0.12%)</title><rect x="99.3865%" y="1061" width="0.1227%" height="15" fill="rgb(214,64,36)" fg:x="810" fg:w="1"/><text x="99.6365%" y="1071.50"></text></g><g><title>std::io::Read::read_exact (1 samples, 0.12%)</title><rect x="99.3865%" y="1045" width="0.1227%" height="15" fill="rgb(211,138,32)" fg:x="810" fg:w="1"/><text x="99.6365%" y="1055.50"></text></g><g><title>std::io::default_read_exact (1 samples, 0.12%)</title><rect x="99.3865%" y="1029" width="0.1227%" height="15" fill="rgb(213,118,47)" fg:x="810" fg:w="1"/><text x="99.6365%" y="1039.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="99.3865%" y="1013" width="0.1227%" height="15" fill="rgb(243,124,49)" fg:x="810" fg:w="1"/><text x="99.6365%" y="1023.50"></text></g><g><title>sqlite3_blob_read (1 samples, 0.12%)</title><rect x="99.3865%" y="997" width="0.1227%" height="15" fill="rgb(221,30,28)" fg:x="810" fg:w="1"/><text x="99.6365%" y="1007.50"></text></g><g><title>blobReadWrite (1 samples, 0.12%)</title><rect x="99.3865%" y="981" width="0.1227%" height="15" fill="rgb(246,37,13)" fg:x="810" fg:w="1"/><text x="99.6365%" y="991.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="99.3865%" y="965" width="0.1227%" height="15" fill="rgb(249,66,14)" fg:x="810" fg:w="1"/><text x="99.6365%" y="975.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="99.3865%" y="949" width="0.1227%" height="15" fill="rgb(213,166,5)" fg:x="810" fg:w="1"/><text x="99.6365%" y="959.50"></text></g><g><title>accessPayload (1 samples, 0.12%)</title><rect x="99.3865%" y="933" width="0.1227%" height="15" fill="rgb(221,66,24)" fg:x="810" fg:w="1"/><text x="99.6365%" y="943.50"></text></g><g><title>getOverflowPage (1 samples, 0.12%)</title><rect x="99.3865%" y="917" width="0.1227%" height="15" fill="rgb(210,132,17)" fg:x="810" fg:w="1"/><text x="99.6365%" y="927.50"></text></g><g><title>btreeGetPage (1 samples, 0.12%)</title><rect x="99.3865%" y="901" width="0.1227%" height="15" fill="rgb(243,202,5)" fg:x="810" fg:w="1"/><text x="99.6365%" y="911.50"></text></g><g><title>sqlite3PagerGet (1 samples, 0.12%)</title><rect x="99.3865%" y="885" width="0.1227%" height="15" fill="rgb(233,70,48)" fg:x="810" fg:w="1"/><text x="99.6365%" y="895.50"></text></g><g><title>getPageMMap (1 samples, 0.12%)</title><rect x="99.3865%" y="869" width="0.1227%" height="15" fill="rgb(238,41,26)" fg:x="810" fg:w="1"/><text x="99.6365%" y="879.50"></text></g><g><title>getPageNormal (1 samples, 0.12%)</title><rect x="99.3865%" y="853" width="0.1227%" height="15" fill="rgb(241,19,31)" fg:x="810" fg:w="1"/><text x="99.6365%" y="863.50"></text></g><g><title>sqlite3PcacheFetch (1 samples, 0.12%)</title><rect x="99.3865%" y="837" width="0.1227%" height="15" fill="rgb(214,76,10)" fg:x="810" fg:w="1"/><text x="99.6365%" y="847.50"></text></g><g><title>pcache1Fetch (1 samples, 0.12%)</title><rect x="99.3865%" y="821" width="0.1227%" height="15" fill="rgb(254,202,22)" fg:x="810" fg:w="1"/><text x="99.6365%" y="831.50"></text></g><g><title>pcache1FetchWithMutex (1 samples, 0.12%)</title><rect x="99.3865%" y="805" width="0.1227%" height="15" fill="rgb(214,72,24)" fg:x="810" fg:w="1"/><text x="99.6365%" y="815.50"></text></g><g><title>pcache1FetchNoMutex (1 samples, 0.12%)</title><rect x="99.3865%" y="789" width="0.1227%" height="15" fill="rgb(221,92,46)" fg:x="810" fg:w="1"/><text x="99.6365%" y="799.50"></text></g><g><title>pcache1FetchNoMutex (1 samples, 0.12%)</title><rect x="99.3865%" y="773" width="0.1227%" height="15" fill="rgb(246,13,50)" fg:x="810" fg:w="1"/><text x="99.6365%" y="783.50"></text></g><g><title>pcache1FetchStage2 (1 samples, 0.12%)</title><rect x="99.3865%" y="757" width="0.1227%" height="15" fill="rgb(240,165,38)" fg:x="810" fg:w="1"/><text x="99.6365%" y="767.50"></text></g><g><title>pcache1AllocPage (1 samples, 0.12%)</title><rect x="99.3865%" y="741" width="0.1227%" height="15" fill="rgb(241,24,51)" fg:x="810" fg:w="1"/><text x="99.6365%" y="751.50"></text></g><g><title>pcache1Alloc (1 samples, 0.12%)</title><rect x="99.3865%" y="725" width="0.1227%" height="15" fill="rgb(227,51,44)" fg:x="810" fg:w="1"/><text x="99.6365%" y="735.50"></text></g><g><title>pcache1Alloc (1 samples, 0.12%)</title><rect x="99.3865%" y="709" width="0.1227%" height="15" fill="rgb(231,121,3)" fg:x="810" fg:w="1"/><text x="99.6365%" y="719.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.12%)</title><rect x="99.3865%" y="693" width="0.1227%" height="15" fill="rgb(245,3,41)" fg:x="810" fg:w="1"/><text x="99.6365%" y="703.50"></text></g><g><title>sqlite3Malloc (1 samples, 0.12%)</title><rect x="99.3865%" y="677" width="0.1227%" height="15" fill="rgb(214,13,26)" fg:x="810" fg:w="1"/><text x="99.6365%" y="687.50"></text></g><g><title>mallocWithAlarm (1 samples, 0.12%)</title><rect x="99.3865%" y="661" width="0.1227%" height="15" fill="rgb(252,75,11)" fg:x="810" fg:w="1"/><text x="99.6365%" y="671.50"></text></g><g><title>sqlite3MemMalloc (1 samples, 0.12%)</title><rect x="99.3865%" y="645" width="0.1227%" height="15" fill="rgb(218,226,17)" fg:x="810" fg:w="1"/><text x="99.6365%" y="655.50"></text></g><g><title>malloc (1 samples, 0.12%)</title><rect x="99.3865%" y="629" width="0.1227%" height="15" fill="rgb(248,89,38)" fg:x="810" fg:w="1"/><text x="99.6365%" y="639.50"></text></g><g><title>blockstack_lib::chainstate::stacks::miner::&lt;impl blockstack_lib::chainstate::stacks::StacksBlockBuilder&gt;::epoch_begin (1 samples, 0.12%)</title><rect x="99.5092%" y="1317" width="0.1227%" height="15" fill="rgb(237,73,46)" fg:x="811" fg:w="1"/><text x="99.7592%" y="1327.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::blocks::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::setup_block (1 samples, 0.12%)</title><rect x="99.5092%" y="1301" width="0.1227%" height="15" fill="rgb(242,78,33)" fg:x="811" fg:w="1"/><text x="99.7592%" y="1311.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::StacksChainState::chainstate_block_begin (1 samples, 0.12%)</title><rect x="99.5092%" y="1285" width="0.1227%" height="15" fill="rgb(235,60,3)" fg:x="811" fg:w="1"/><text x="99.7592%" y="1295.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::StacksChainState::inner_clarity_tx_begin (1 samples, 0.12%)</title><rect x="99.5092%" y="1269" width="0.1227%" height="15" fill="rgb(216,172,19)" fg:x="811" fg:w="1"/><text x="99.7592%" y="1279.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityInstance::begin_block (1 samples, 0.12%)</title><rect x="99.5092%" y="1253" width="0.1227%" height="15" fill="rgb(227,6,42)" fg:x="811" fg:w="1"/><text x="99.7592%" y="1263.50"></text></g><g><title>blockstack_lib::clarity_vm::database::marf::MarfedKV::begin (1 samples, 0.12%)</title><rect x="99.5092%" y="1237" width="0.1227%" height="15" fill="rgb(223,207,42)" fg:x="811" fg:w="1"/><text x="99.7592%" y="1247.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt;::begin (1 samples, 0.12%)</title><rect x="99.5092%" y="1221" width="0.1227%" height="15" fill="rgb(246,138,30)" fg:x="811" fg:w="1"/><text x="99.7592%" y="1231.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt;::inner_setup_extension (1 samples, 0.12%)</title><rect x="99.5092%" y="1205" width="0.1227%" height="15" fill="rgb(251,199,47)" fg:x="811" fg:w="1"/><text x="99.7592%" y="1215.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt;::set_block_heights (1 samples, 0.12%)</title><rect x="99.5092%" y="1189" width="0.1227%" height="15" fill="rgb(228,218,44)" fg:x="811" fg:w="1"/><text x="99.7592%" y="1199.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt;::insert_batch (1 samples, 0.12%)</title><rect x="99.5092%" y="1173" width="0.1227%" height="15" fill="rgb(220,68,6)" fg:x="811" fg:w="1"/><text x="99.7592%" y="1183.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::inner_insert_batch (1 samples, 0.12%)</title><rect x="99.5092%" y="1157" width="0.1227%" height="15" fill="rgb(240,60,26)" fg:x="811" fg:w="1"/><text x="99.7592%" y="1167.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::insert_leaf (1 samples, 0.12%)</title><rect x="99.5092%" y="1141" width="0.1227%" height="15" fill="rgb(211,200,19)" fg:x="811" fg:w="1"/><text x="99.7592%" y="1151.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::do_insert_leaf (1 samples, 0.12%)</title><rect x="99.5092%" y="1125" width="0.1227%" height="15" fill="rgb(242,145,30)" fg:x="811" fg:w="1"/><text x="99.7592%" y="1135.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_cow (1 samples, 0.12%)</title><rect x="99.5092%" y="1109" width="0.1227%" height="15" fill="rgb(225,64,13)" fg:x="811" fg:w="1"/><text x="99.7592%" y="1119.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::node_child_copy (1 samples, 0.12%)</title><rect x="99.5092%" y="1093" width="0.1227%" height="15" fill="rgb(218,103,35)" fg:x="811" fg:w="1"/><text x="99.7592%" y="1103.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_backptr (1 samples, 0.12%)</title><rect x="99.5092%" y="1077" width="0.1227%" height="15" fill="rgb(216,93,46)" fg:x="811" fg:w="1"/><text x="99.7592%" y="1087.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_backptr (1 samples, 0.12%)</title><rect x="99.5092%" y="1061" width="0.1227%" height="15" fill="rgb(225,159,27)" fg:x="811" fg:w="1"/><text x="99.7592%" y="1071.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (1 samples, 0.12%)</title><rect x="99.5092%" y="1045" width="0.1227%" height="15" fill="rgb(225,204,11)" fg:x="811" fg:w="1"/><text x="99.7592%" y="1055.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (1 samples, 0.12%)</title><rect x="99.5092%" y="1029" width="0.1227%" height="15" fill="rgb(205,56,4)" fg:x="811" fg:w="1"/><text x="99.7592%" y="1039.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (1 samples, 0.12%)</title><rect x="99.5092%" y="1013" width="0.1227%" height="15" fill="rgb(206,6,35)" fg:x="811" fg:w="1"/><text x="99.7592%" y="1023.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (1 samples, 0.12%)</title><rect x="99.5092%" y="997" width="0.1227%" height="15" fill="rgb(247,73,52)" fg:x="811" fg:w="1"/><text x="99.7592%" y="1007.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (1 samples, 0.12%)</title><rect x="99.5092%" y="981" width="0.1227%" height="15" fill="rgb(246,97,4)" fg:x="811" fg:w="1"/><text x="99.7592%" y="991.50"></text></g><g><title>std::io::Read::read_exact (1 samples, 0.12%)</title><rect x="99.5092%" y="965" width="0.1227%" height="15" fill="rgb(212,37,15)" fg:x="811" fg:w="1"/><text x="99.7592%" y="975.50"></text></g><g><title>std::io::default_read_exact (1 samples, 0.12%)</title><rect x="99.5092%" y="949" width="0.1227%" height="15" fill="rgb(208,130,40)" fg:x="811" fg:w="1"/><text x="99.7592%" y="959.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="99.5092%" y="933" width="0.1227%" height="15" fill="rgb(236,55,29)" fg:x="811" fg:w="1"/><text x="99.7592%" y="943.50"></text></g><g><title>sqlite3_blob_read (1 samples, 0.12%)</title><rect x="99.5092%" y="917" width="0.1227%" height="15" fill="rgb(209,156,45)" fg:x="811" fg:w="1"/><text x="99.7592%" y="927.50"></text></g><g><title>blobReadWrite (1 samples, 0.12%)</title><rect x="99.5092%" y="901" width="0.1227%" height="15" fill="rgb(249,107,4)" fg:x="811" fg:w="1"/><text x="99.7592%" y="911.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="99.5092%" y="885" width="0.1227%" height="15" fill="rgb(227,7,13)" fg:x="811" fg:w="1"/><text x="99.7592%" y="895.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="99.5092%" y="869" width="0.1227%" height="15" fill="rgb(250,129,14)" fg:x="811" fg:w="1"/><text x="99.7592%" y="879.50"></text></g><g><title>accessPayload (1 samples, 0.12%)</title><rect x="99.5092%" y="853" width="0.1227%" height="15" fill="rgb(229,92,13)" fg:x="811" fg:w="1"/><text x="99.7592%" y="863.50"></text></g><g><title>getOverflowPage (1 samples, 0.12%)</title><rect x="99.5092%" y="837" width="0.1227%" height="15" fill="rgb(245,98,39)" fg:x="811" fg:w="1"/><text x="99.7592%" y="847.50"></text></g><g><title>btreeGetPage (1 samples, 0.12%)</title><rect x="99.5092%" y="821" width="0.1227%" height="15" fill="rgb(234,135,48)" fg:x="811" fg:w="1"/><text x="99.7592%" y="831.50"></text></g><g><title>sqlite3PagerGet (1 samples, 0.12%)</title><rect x="99.5092%" y="805" width="0.1227%" height="15" fill="rgb(230,98,28)" fg:x="811" fg:w="1"/><text x="99.7592%" y="815.50"></text></g><g><title>getPageMMap (1 samples, 0.12%)</title><rect x="99.5092%" y="789" width="0.1227%" height="15" fill="rgb(223,121,0)" fg:x="811" fg:w="1"/><text x="99.7592%" y="799.50"></text></g><g><title>getPageNormal (1 samples, 0.12%)</title><rect x="99.5092%" y="773" width="0.1227%" height="15" fill="rgb(234,173,33)" fg:x="811" fg:w="1"/><text x="99.7592%" y="783.50"></text></g><g><title>readDbPage (1 samples, 0.12%)</title><rect x="99.5092%" y="757" width="0.1227%" height="15" fill="rgb(245,47,8)" fg:x="811" fg:w="1"/><text x="99.7592%" y="767.50"></text></g><g><title>sqlite3OsRead (1 samples, 0.12%)</title><rect x="99.5092%" y="741" width="0.1227%" height="15" fill="rgb(205,17,20)" fg:x="811" fg:w="1"/><text x="99.7592%" y="751.50"></text></g><g><title>unixRead (1 samples, 0.12%)</title><rect x="99.5092%" y="725" width="0.1227%" height="15" fill="rgb(232,151,16)" fg:x="811" fg:w="1"/><text x="99.7592%" y="735.50"></text></g><g><title>seekAndRead (1 samples, 0.12%)</title><rect x="99.5092%" y="709" width="0.1227%" height="15" fill="rgb(208,30,32)" fg:x="811" fg:w="1"/><text x="99.7592%" y="719.50"></text></g><g><title>read (1 samples, 0.12%)</title><rect x="99.5092%" y="693" width="0.1227%" height="15" fill="rgb(254,26,3)" fg:x="811" fg:w="1"/><text x="99.7592%" y="703.50"></text></g><g><title>std::rt::lang_start_internal (2 samples, 0.25%)</title><rect x="99.5092%" y="1541" width="0.2454%" height="15" fill="rgb(240,177,30)" fg:x="811" fg:w="2"/><text x="99.7592%" y="1551.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.25%)</title><rect x="99.5092%" y="1525" width="0.2454%" height="15" fill="rgb(248,76,44)" fg:x="811" fg:w="2"/><text x="99.7592%" y="1535.50"></text></g><g><title>std::panicking::try (2 samples, 0.25%)</title><rect x="99.5092%" y="1509" width="0.2454%" height="15" fill="rgb(241,186,54)" fg:x="811" fg:w="2"/><text x="99.7592%" y="1519.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.25%)</title><rect x="99.5092%" y="1493" width="0.2454%" height="15" fill="rgb(249,171,29)" fg:x="811" fg:w="2"/><text x="99.7592%" y="1503.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (2 samples, 0.25%)</title><rect x="99.5092%" y="1477" width="0.2454%" height="15" fill="rgb(237,151,44)" fg:x="811" fg:w="2"/><text x="99.7592%" y="1487.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.25%)</title><rect x="99.5092%" y="1461" width="0.2454%" height="15" fill="rgb(228,174,30)" fg:x="811" fg:w="2"/><text x="99.7592%" y="1471.50"></text></g><g><title>std::panicking::try (2 samples, 0.25%)</title><rect x="99.5092%" y="1445" width="0.2454%" height="15" fill="rgb(252,14,37)" fg:x="811" fg:w="2"/><text x="99.7592%" y="1455.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.25%)</title><rect x="99.5092%" y="1429" width="0.2454%" height="15" fill="rgb(207,111,40)" fg:x="811" fg:w="2"/><text x="99.7592%" y="1439.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (2 samples, 0.25%)</title><rect x="99.5092%" y="1413" width="0.2454%" height="15" fill="rgb(248,171,54)" fg:x="811" fg:w="2"/><text x="99.7592%" y="1423.50"></text></g><g><title>std::rt::lang_start::{{closure}} (2 samples, 0.25%)</title><rect x="99.5092%" y="1397" width="0.2454%" height="15" fill="rgb(211,127,2)" fg:x="811" fg:w="2"/><text x="99.7592%" y="1407.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.25%)</title><rect x="99.5092%" y="1381" width="0.2454%" height="15" fill="rgb(236,87,47)" fg:x="811" fg:w="2"/><text x="99.7592%" y="1391.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.25%)</title><rect x="99.5092%" y="1365" width="0.2454%" height="15" fill="rgb(223,190,45)" fg:x="811" fg:w="2"/><text x="99.7592%" y="1375.50"></text></g><g><title>mempool_analyzer::main (2 samples, 0.25%)</title><rect x="99.5092%" y="1349" width="0.2454%" height="15" fill="rgb(215,5,16)" fg:x="811" fg:w="2"/><text x="99.7592%" y="1359.50"></text></g><g><title>blockstack_lib::chainstate::stacks::miner::&lt;impl blockstack_lib::chainstate::stacks::StacksBlockBuilder&gt;::build_anchored_block (2 samples, 0.25%)</title><rect x="99.5092%" y="1333" width="0.2454%" height="15" fill="rgb(252,82,33)" fg:x="811" fg:w="2"/><text x="99.7592%" y="1343.50"></text></g><g><title>blockstack_lib::core::mempool::MemPoolDB::iterate_candidates (1 samples, 0.12%)</title><rect x="99.6319%" y="1317" width="0.1227%" height="15" fill="rgb(247,213,44)" fg:x="812" fg:w="1"/><text x="99.8819%" y="1327.50"></text></g><g><title>blockstack_lib::core::mempool::MemPoolDB::get_next_tx_to_consider (1 samples, 0.12%)</title><rect x="99.6319%" y="1301" width="0.1227%" height="15" fill="rgb(205,196,44)" fg:x="812" fg:w="1"/><text x="99.8819%" y="1311.50"></text></g><g><title>blockstack_lib::core::mempool::MemPoolDB::get_next_tx_to_consider_with_estimate (1 samples, 0.12%)</title><rect x="99.6319%" y="1285" width="0.1227%" height="15" fill="rgb(237,96,54)" fg:x="812" fg:w="1"/><text x="99.8819%" y="1295.50"></text></g><g><title>blockstack_lib::util::db::query_row (1 samples, 0.12%)</title><rect x="99.6319%" y="1269" width="0.1227%" height="15" fill="rgb(230,113,34)" fg:x="812" fg:w="1"/><text x="99.8819%" y="1279.50"></text></g><g><title>rusqlite::Connection::query_row_and_then (1 samples, 0.12%)</title><rect x="99.6319%" y="1253" width="0.1227%" height="15" fill="rgb(221,224,12)" fg:x="812" fg:w="1"/><text x="99.8819%" y="1263.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.12%)</title><rect x="99.6319%" y="1237" width="0.1227%" height="15" fill="rgb(219,112,44)" fg:x="812" fg:w="1"/><text x="99.8819%" y="1247.50"></text></g><g><title>rusqlite::Connection::query_row_and_then::{{closure}} (1 samples, 0.12%)</title><rect x="99.6319%" y="1221" width="0.1227%" height="15" fill="rgb(210,31,13)" fg:x="812" fg:w="1"/><text x="99.8819%" y="1231.50"></text></g><g><title>blockstack_lib::util::db::query_row::{{closure}} (1 samples, 0.12%)</title><rect x="99.6319%" y="1205" width="0.1227%" height="15" fill="rgb(230,25,16)" fg:x="812" fg:w="1"/><text x="99.8819%" y="1215.50"></text></g><g><title>&lt;blockstack_lib::core::mempool::MemPoolTxInfo as blockstack_lib::util::db::FromRow&lt;blockstack_lib::core::mempool::MemPoolTxInfo&gt;&gt;::from_row (1 samples, 0.12%)</title><rect x="99.6319%" y="1189" width="0.1227%" height="15" fill="rgb(246,108,53)" fg:x="812" fg:w="1"/><text x="99.8819%" y="1199.50"></text></g><g><title>blockstack_lib::chainstate::stacks::transaction::&lt;impl blockstack_lib::codec::StacksMessageCodec for blockstack_lib::chainstate::stacks::StacksTransaction&gt;::consensus_deserialize (1 samples, 0.12%)</title><rect x="99.6319%" y="1173" width="0.1227%" height="15" fill="rgb(241,172,50)" fg:x="812" fg:w="1"/><text x="99.8819%" y="1183.50"></text></g><g><title>blockstack_lib::chainstate::stacks::transaction::&lt;impl blockstack_lib::chainstate::stacks::StacksTransaction&gt;::consensus_deserialize_with_len (1 samples, 0.12%)</title><rect x="99.6319%" y="1157" width="0.1227%" height="15" fill="rgb(235,141,10)" fg:x="812" fg:w="1"/><text x="99.8819%" y="1167.50"></text></g><g><title>blockstack_lib::codec::read_next (1 samples, 0.12%)</title><rect x="99.6319%" y="1141" width="0.1227%" height="15" fill="rgb(220,174,43)" fg:x="812" fg:w="1"/><text x="99.8819%" y="1151.50"></text></g><g><title>blockstack_lib::chainstate::stacks::transaction::&lt;impl blockstack_lib::codec::StacksMessageCodec for blockstack_lib::chainstate::stacks::TransactionPayload&gt;::consensus_deserialize (1 samples, 0.12%)</title><rect x="99.6319%" y="1125" width="0.1227%" height="15" fill="rgb(215,181,40)" fg:x="812" fg:w="1"/><text x="99.8819%" y="1135.50"></text></g><g><title>blockstack_lib::codec::read_next (1 samples, 0.12%)</title><rect x="99.6319%" y="1109" width="0.1227%" height="15" fill="rgb(230,97,2)" fg:x="812" fg:w="1"/><text x="99.8819%" y="1119.50"></text></g><g><title>blockstack_lib::chainstate::stacks::transaction::&lt;impl blockstack_lib::codec::StacksMessageCodec for blockstack_lib::chainstate::stacks::TransactionContractCall&gt;::consensus_deserialize (1 samples, 0.12%)</title><rect x="99.6319%" y="1093" width="0.1227%" height="15" fill="rgb(211,25,27)" fg:x="812" fg:w="1"/><text x="99.8819%" y="1103.50"></text></g><g><title>blockstack_lib::util::strings::StacksString::is_clarity_variable (1 samples, 0.12%)</title><rect x="99.6319%" y="1077" width="0.1227%" height="15" fill="rgb(230,87,26)" fg:x="812" fg:w="1"/><text x="99.8819%" y="1087.50"></text></g><g><title>blockstack_lib::vm::ast::parser::lex (1 samples, 0.12%)</title><rect x="99.6319%" y="1061" width="0.1227%" height="15" fill="rgb(227,160,17)" fg:x="812" fg:w="1"/><text x="99.8819%" y="1071.50"></text></g><g><title>blockstack_lib::vm::ast::parser::LexMatcher::new (1 samples, 0.12%)</title><rect x="99.6319%" y="1045" width="0.1227%" height="15" fill="rgb(244,85,34)" fg:x="812" fg:w="1"/><text x="99.8819%" y="1055.50"></text></g><g><title>regex::re_unicode::Regex::new (1 samples, 0.12%)</title><rect x="99.6319%" y="1029" width="0.1227%" height="15" fill="rgb(207,70,0)" fg:x="812" fg:w="1"/><text x="99.8819%" y="1039.50"></text></g><g><title>regex::re_builder::set_unicode::RegexSetBuilder::build (1 samples, 0.12%)</title><rect x="99.6319%" y="1013" width="0.1227%" height="15" fill="rgb(223,129,7)" fg:x="812" fg:w="1"/><text x="99.8819%" y="1023.50"></text></g><g><title>regex::exec::ExecBuilder::build (1 samples, 0.12%)</title><rect x="99.6319%" y="997" width="0.1227%" height="15" fill="rgb(246,105,7)" fg:x="812" fg:w="1"/><text x="99.8819%" y="1007.50"></text></g><g><title>regex::compile::Compiler::compile (1 samples, 0.12%)</title><rect x="99.6319%" y="981" width="0.1227%" height="15" fill="rgb(215,154,42)" fg:x="812" fg:w="1"/><text x="99.8819%" y="991.50"></text></g><g><title>regex::compile::Compiler::compile_one (1 samples, 0.12%)</title><rect x="99.6319%" y="965" width="0.1227%" height="15" fill="rgb(220,215,30)" fg:x="812" fg:w="1"/><text x="99.8819%" y="975.50"></text></g><g><title>regex::compile::Compiler::c_capture (1 samples, 0.12%)</title><rect x="99.6319%" y="949" width="0.1227%" height="15" fill="rgb(228,81,51)" fg:x="812" fg:w="1"/><text x="99.8819%" y="959.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.12%)</title><rect x="99.6319%" y="933" width="0.1227%" height="15" fill="rgb(247,71,54)" fg:x="812" fg:w="1"/><text x="99.8819%" y="943.50"></text></g><g><title>regex::compile::Compiler::c_concat (1 samples, 0.12%)</title><rect x="99.6319%" y="917" width="0.1227%" height="15" fill="rgb(234,176,34)" fg:x="812" fg:w="1"/><text x="99.8819%" y="927.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.12%)</title><rect x="99.6319%" y="901" width="0.1227%" height="15" fill="rgb(241,103,54)" fg:x="812" fg:w="1"/><text x="99.8819%" y="911.50"></text></g><g><title>regex::compile::Compiler::c_capture (1 samples, 0.12%)</title><rect x="99.6319%" y="885" width="0.1227%" height="15" fill="rgb(228,22,34)" fg:x="812" fg:w="1"/><text x="99.8819%" y="895.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.12%)</title><rect x="99.6319%" y="869" width="0.1227%" height="15" fill="rgb(241,179,48)" fg:x="812" fg:w="1"/><text x="99.8819%" y="879.50"></text></g><g><title>regex::compile::Compiler::c_concat (1 samples, 0.12%)</title><rect x="99.6319%" y="853" width="0.1227%" height="15" fill="rgb(235,167,37)" fg:x="812" fg:w="1"/><text x="99.8819%" y="863.50"></text></g><g><title>regex::compile::Compiler::c_repeat_range (1 samples, 0.12%)</title><rect x="99.6319%" y="837" width="0.1227%" height="15" fill="rgb(213,109,30)" fg:x="812" fg:w="1"/><text x="99.8819%" y="847.50"></text></g><g><title>regex::compile::Compiler::c_capture (1 samples, 0.12%)</title><rect x="99.6319%" y="821" width="0.1227%" height="15" fill="rgb(222,172,16)" fg:x="812" fg:w="1"/><text x="99.8819%" y="831.50"></text></g><g><title>regex::compile::Compiler::fill_to_next (1 samples, 0.12%)</title><rect x="99.6319%" y="805" width="0.1227%" height="15" fill="rgb(233,192,5)" fg:x="812" fg:w="1"/><text x="99.8819%" y="815.50"></text></g><g><title>regex::compile::Compiler::fill (1 samples, 0.12%)</title><rect x="99.6319%" y="789" width="0.1227%" height="15" fill="rgb(247,189,41)" fg:x="812" fg:w="1"/><text x="99.8819%" y="799.50"></text></g><g><title>regex::compile::Compiler::fill (1 samples, 0.12%)</title><rect x="99.6319%" y="773" width="0.1227%" height="15" fill="rgb(218,134,47)" fg:x="812" fg:w="1"/><text x="99.8819%" y="783.50"></text></g><g><title>regex::compile::MaybeInst::fill (1 samples, 0.12%)</title><rect x="99.6319%" y="757" width="0.1227%" height="15" fill="rgb(216,29,3)" fg:x="812" fg:w="1"/><text x="99.8819%" y="767.50"></text></g><g><title>regex::compile::InstHole::fill (1 samples, 0.12%)</title><rect x="99.6319%" y="741" width="0.1227%" height="15" fill="rgb(246,140,12)" fg:x="812" fg:w="1"/><text x="99.8819%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.12%)</title><rect x="99.6319%" y="725" width="0.1227%" height="15" fill="rgb(230,136,11)" fg:x="812" fg:w="1"/><text x="99.8819%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.12%)</title><rect x="99.6319%" y="709" width="0.1227%" height="15" fill="rgb(247,22,47)" fg:x="812" fg:w="1"/><text x="99.8819%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.12%)</title><rect x="99.6319%" y="693" width="0.1227%" height="15" fill="rgb(218,84,22)" fg:x="812" fg:w="1"/><text x="99.8819%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.12%)</title><rect x="99.6319%" y="677" width="0.1227%" height="15" fill="rgb(216,87,39)" fg:x="812" fg:w="1"/><text x="99.8819%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.12%)</title><rect x="99.6319%" y="661" width="0.1227%" height="15" fill="rgb(221,178,8)" fg:x="812" fg:w="1"/><text x="99.8819%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.12%)</title><rect x="99.6319%" y="645" width="0.1227%" height="15" fill="rgb(230,42,11)" fg:x="812" fg:w="1"/><text x="99.8819%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.12%)</title><rect x="99.6319%" y="629" width="0.1227%" height="15" fill="rgb(237,229,4)" fg:x="812" fg:w="1"/><text x="99.8819%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.12%)</title><rect x="99.6319%" y="613" width="0.1227%" height="15" fill="rgb(222,31,33)" fg:x="812" fg:w="1"/><text x="99.8819%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.12%)</title><rect x="99.6319%" y="597" width="0.1227%" height="15" fill="rgb(210,17,39)" fg:x="812" fg:w="1"/><text x="99.8819%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.12%)</title><rect x="99.6319%" y="581" width="0.1227%" height="15" fill="rgb(244,93,20)" fg:x="812" fg:w="1"/><text x="99.8819%" y="591.50"></text></g><g><title>malloc (1 samples, 0.12%)</title><rect x="99.6319%" y="565" width="0.1227%" height="15" fill="rgb(210,40,47)" fg:x="812" fg:w="1"/><text x="99.8819%" y="575.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::run_contract_call (1 samples, 0.12%)</title><rect x="99.7546%" y="1397" width="0.1227%" height="15" fill="rgb(239,211,47)" fg:x="813" fg:w="1"/><text x="100.0046%" y="1407.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::with_abort_callback (1 samples, 0.12%)</title><rect x="99.7546%" y="1381" width="0.1227%" height="15" fill="rgb(251,223,49)" fg:x="813" fg:w="1"/><text x="100.0046%" y="1391.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::with_abort_callback::{{closure}} (1 samples, 0.12%)</title><rect x="99.7546%" y="1365" width="0.1227%" height="15" fill="rgb(221,149,5)" fg:x="813" fg:w="1"/><text x="100.0046%" y="1375.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::with_abort_callback::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="99.7546%" y="1349" width="0.1227%" height="15" fill="rgb(219,224,51)" fg:x="813" fg:w="1"/><text x="100.0046%" y="1359.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::run_contract_call::{{closure}} (1 samples, 0.12%)</title><rect x="99.7546%" y="1333" width="0.1227%" height="15" fill="rgb(223,7,8)" fg:x="813" fg:w="1"/><text x="100.0046%" y="1343.50"></text></g><g><title>blockstack_lib::vm::contexts::OwnedEnvironment::execute_transaction (1 samples, 0.12%)</title><rect x="99.7546%" y="1317" width="0.1227%" height="15" fill="rgb(241,217,22)" fg:x="813" fg:w="1"/><text x="100.0046%" y="1327.50"></text></g><g><title>blockstack_lib::vm::contexts::OwnedEnvironment::execute_in_env (1 samples, 0.12%)</title><rect x="99.7546%" y="1301" width="0.1227%" height="15" fill="rgb(248,209,0)" fg:x="813" fg:w="1"/><text x="100.0046%" y="1311.50"></text></g><g><title>blockstack_lib::vm::contexts::OwnedEnvironment::execute_transaction::{{closure}} (1 samples, 0.12%)</title><rect x="99.7546%" y="1285" width="0.1227%" height="15" fill="rgb(217,205,4)" fg:x="813" fg:w="1"/><text x="100.0046%" y="1295.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::execute_contract (1 samples, 0.12%)</title><rect x="99.7546%" y="1269" width="0.1227%" height="15" fill="rgb(228,124,39)" fg:x="813" fg:w="1"/><text x="100.0046%" y="1279.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get_contract_size (1 samples, 0.12%)</title><rect x="99.7546%" y="1253" width="0.1227%" height="15" fill="rgb(250,116,42)" fg:x="813" fg:w="1"/><text x="100.0046%" y="1263.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::fetch_metadata (1 samples, 0.12%)</title><rect x="99.7546%" y="1237" width="0.1227%" height="15" fill="rgb(223,202,9)" fg:x="813" fg:w="1"/><text x="100.0046%" y="1247.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get_metadata (1 samples, 0.12%)</title><rect x="99.7546%" y="1221" width="0.1227%" height="15" fill="rgb(242,222,40)" fg:x="813" fg:w="1"/><text x="100.0046%" y="1231.50"></text></g><g><title>blockstack_lib::vm::database::clarity_store::ClarityBackingStore::get_metadata (1 samples, 0.12%)</title><rect x="99.7546%" y="1205" width="0.1227%" height="15" fill="rgb(229,99,46)" fg:x="813" fg:w="1"/><text x="100.0046%" y="1215.50"></text></g><g><title>blockstack_lib::vm::database::clarity_store::ClarityBackingStore::get_contract_hash (1 samples, 0.12%)</title><rect x="99.7546%" y="1189" width="0.1227%" height="15" fill="rgb(225,56,46)" fg:x="813" fg:w="1"/><text x="100.0046%" y="1199.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::get_block_at_height (1 samples, 0.12%)</title><rect x="99.7546%" y="1173" width="0.1227%" height="15" fill="rgb(227,94,5)" fg:x="813" fg:w="1"/><text x="100.0046%" y="1183.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get_block_at_height (1 samples, 0.12%)</title><rect x="99.7546%" y="1157" width="0.1227%" height="15" fill="rgb(205,112,38)" fg:x="813" fg:w="1"/><text x="100.0046%" y="1167.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt; as blockstack_lib::chainstate::stacks::index::marf::MarfConnection&lt;T&gt;&gt;::with_conn (1 samples, 0.12%)</title><rect x="99.7546%" y="1141" width="0.1227%" height="15" fill="rgb(231,133,46)" fg:x="813" fg:w="1"/><text x="100.0046%" y="1151.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get_block_at_height::{{closure}} (1 samples, 0.12%)</title><rect x="99.7546%" y="1125" width="0.1227%" height="15" fill="rgb(217,16,9)" fg:x="813" fg:w="1"/><text x="100.0046%" y="1135.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_block_at_height (1 samples, 0.12%)</title><rect x="99.7546%" y="1109" width="0.1227%" height="15" fill="rgb(249,173,9)" fg:x="813" fg:w="1"/><text x="100.0046%" y="1119.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_by_key (1 samples, 0.12%)</title><rect x="99.7546%" y="1093" width="0.1227%" height="15" fill="rgb(205,163,53)" fg:x="813" fg:w="1"/><text x="100.0046%" y="1103.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_path (1 samples, 0.12%)</title><rect x="99.7546%" y="1077" width="0.1227%" height="15" fill="rgb(217,54,41)" fg:x="813" fg:w="1"/><text x="100.0046%" y="1087.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk (1 samples, 0.12%)</title><rect x="99.7546%" y="1061" width="0.1227%" height="15" fill="rgb(228,216,12)" fg:x="813" fg:w="1"/><text x="100.0046%" y="1071.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk_backptr (1 samples, 0.12%)</title><rect x="99.7546%" y="1045" width="0.1227%" height="15" fill="rgb(244,228,15)" fg:x="813" fg:w="1"/><text x="100.0046%" y="1055.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_backptr (1 samples, 0.12%)</title><rect x="99.7546%" y="1029" width="0.1227%" height="15" fill="rgb(221,176,53)" fg:x="813" fg:w="1"/><text x="100.0046%" y="1039.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (1 samples, 0.12%)</title><rect x="99.7546%" y="1013" width="0.1227%" height="15" fill="rgb(205,94,34)" fg:x="813" fg:w="1"/><text x="100.0046%" y="1023.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (1 samples, 0.12%)</title><rect x="99.7546%" y="997" width="0.1227%" height="15" fill="rgb(213,110,48)" fg:x="813" fg:w="1"/><text x="100.0046%" y="1007.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (1 samples, 0.12%)</title><rect x="99.7546%" y="981" width="0.1227%" height="15" fill="rgb(236,142,28)" fg:x="813" fg:w="1"/><text x="100.0046%" y="991.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (1 samples, 0.12%)</title><rect x="99.7546%" y="965" width="0.1227%" height="15" fill="rgb(225,135,29)" fg:x="813" fg:w="1"/><text x="100.0046%" y="975.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (1 samples, 0.12%)</title><rect x="99.7546%" y="949" width="0.1227%" height="15" fill="rgb(252,45,31)" fg:x="813" fg:w="1"/><text x="100.0046%" y="959.50"></text></g><g><title>std::io::Read::read_exact (1 samples, 0.12%)</title><rect x="99.7546%" y="933" width="0.1227%" height="15" fill="rgb(211,187,50)" fg:x="813" fg:w="1"/><text x="100.0046%" y="943.50"></text></g><g><title>std::io::default_read_exact (1 samples, 0.12%)</title><rect x="99.7546%" y="917" width="0.1227%" height="15" fill="rgb(229,109,7)" fg:x="813" fg:w="1"/><text x="100.0046%" y="927.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="99.7546%" y="901" width="0.1227%" height="15" fill="rgb(251,131,51)" fg:x="813" fg:w="1"/><text x="100.0046%" y="911.50"></text></g><g><title>sqlite3_blob_read (1 samples, 0.12%)</title><rect x="99.7546%" y="885" width="0.1227%" height="15" fill="rgb(251,180,35)" fg:x="813" fg:w="1"/><text x="100.0046%" y="895.50"></text></g><g><title>blobReadWrite (1 samples, 0.12%)</title><rect x="99.7546%" y="869" width="0.1227%" height="15" fill="rgb(211,46,32)" fg:x="813" fg:w="1"/><text x="100.0046%" y="879.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="99.7546%" y="853" width="0.1227%" height="15" fill="rgb(248,123,17)" fg:x="813" fg:w="1"/><text x="100.0046%" y="863.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="99.7546%" y="837" width="0.1227%" height="15" fill="rgb(227,141,18)" fg:x="813" fg:w="1"/><text x="100.0046%" y="847.50"></text></g><g><title>accessPayload (1 samples, 0.12%)</title><rect x="99.7546%" y="821" width="0.1227%" height="15" fill="rgb(216,102,9)" fg:x="813" fg:w="1"/><text x="100.0046%" y="831.50"></text></g><g><title>getOverflowPage (1 samples, 0.12%)</title><rect x="99.7546%" y="805" width="0.1227%" height="15" fill="rgb(253,47,13)" fg:x="813" fg:w="1"/><text x="100.0046%" y="815.50"></text></g><g><title>releasePage (1 samples, 0.12%)</title><rect x="99.7546%" y="789" width="0.1227%" height="15" fill="rgb(226,93,23)" fg:x="813" fg:w="1"/><text x="100.0046%" y="799.50"></text></g><g><title>releasePageNotNull (1 samples, 0.12%)</title><rect x="99.7546%" y="773" width="0.1227%" height="15" fill="rgb(247,104,17)" fg:x="813" fg:w="1"/><text x="100.0046%" y="783.50"></text></g><g><title>pcache1Unpin (1 samples, 0.12%)</title><rect x="99.7546%" y="757" width="0.1227%" height="15" fill="rgb(233,203,26)" fg:x="813" fg:w="1"/><text x="100.0046%" y="767.50"></text></g><g><title>pcache1RemoveFromHash (1 samples, 0.12%)</title><rect x="99.7546%" y="741" width="0.1227%" height="15" fill="rgb(244,98,49)" fg:x="813" fg:w="1"/><text x="100.0046%" y="751.50"></text></g><g><title>pcache1FreePage (1 samples, 0.12%)</title><rect x="99.7546%" y="725" width="0.1227%" height="15" fill="rgb(235,134,22)" fg:x="813" fg:w="1"/><text x="100.0046%" y="735.50"></text></g><g><title>pcache1Free (1 samples, 0.12%)</title><rect x="99.7546%" y="709" width="0.1227%" height="15" fill="rgb(221,70,32)" fg:x="813" fg:w="1"/><text x="100.0046%" y="719.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.12%)</title><rect x="99.7546%" y="693" width="0.1227%" height="15" fill="rgb(238,15,50)" fg:x="813" fg:w="1"/><text x="100.0046%" y="703.50"></text></g><g><title>all (815 samples, 100%)</title><rect x="0.0000%" y="1573" width="100.0000%" height="15" fill="rgb(215,221,48)" fg:x="0" fg:w="815"/><text x="0.2500%" y="1583.50"></text></g><g><title>mempool-analyze (815 samples, 100.00%)</title><rect x="0.0000%" y="1557" width="100.0000%" height="15" fill="rgb(236,73,3)" fg:x="0" fg:w="815"/><text x="0.2500%" y="1567.50">mempool-analyze</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.25%)</title><rect x="99.7546%" y="1541" width="0.2454%" height="15" fill="rgb(250,107,11)" fg:x="813" fg:w="2"/><text x="100.0046%" y="1551.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.25%)</title><rect x="99.7546%" y="1525" width="0.2454%" height="15" fill="rgb(242,39,14)" fg:x="813" fg:w="2"/><text x="100.0046%" y="1535.50"></text></g><g><title>mempool_analyzer::main (2 samples, 0.25%)</title><rect x="99.7546%" y="1509" width="0.2454%" height="15" fill="rgb(248,164,37)" fg:x="813" fg:w="2"/><text x="100.0046%" y="1519.50"></text></g><g><title>blockstack_lib::chainstate::stacks::miner::&lt;impl blockstack_lib::chainstate::stacks::StacksBlockBuilder&gt;::build_anchored_block (2 samples, 0.25%)</title><rect x="99.7546%" y="1493" width="0.2454%" height="15" fill="rgb(217,60,12)" fg:x="813" fg:w="2"/><text x="100.0046%" y="1503.50"></text></g><g><title>blockstack_lib::core::mempool::MemPoolDB::iterate_candidates (2 samples, 0.25%)</title><rect x="99.7546%" y="1477" width="0.2454%" height="15" fill="rgb(240,125,29)" fg:x="813" fg:w="2"/><text x="100.0046%" y="1487.50"></text></g><g><title>blockstack_lib::chainstate::stacks::miner::&lt;impl blockstack_lib::chainstate::stacks::StacksBlockBuilder&gt;::build_anchored_block::{{closure}} (2 samples, 0.25%)</title><rect x="99.7546%" y="1461" width="0.2454%" height="15" fill="rgb(208,207,28)" fg:x="813" fg:w="2"/><text x="100.0046%" y="1471.50"></text></g><g><title>blockstack_lib::chainstate::stacks::miner::&lt;impl blockstack_lib::chainstate::stacks::StacksBlockBuilder&gt;::try_mine_tx_with_len (2 samples, 0.25%)</title><rect x="99.7546%" y="1445" width="0.2454%" height="15" fill="rgb(209,159,27)" fg:x="813" fg:w="2"/><text x="100.0046%" y="1455.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::transactions::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::process_transaction (2 samples, 0.25%)</title><rect x="99.7546%" y="1429" width="0.2454%" height="15" fill="rgb(251,176,53)" fg:x="813" fg:w="2"/><text x="100.0046%" y="1439.50"></text></g><g><title>blockstack_lib::chainstate::stacks::db::transactions::&lt;impl blockstack_lib::chainstate::stacks::db::StacksChainState&gt;::process_transaction_payload (2 samples, 0.25%)</title><rect x="99.7546%" y="1413" width="0.2454%" height="15" fill="rgb(211,85,7)" fg:x="813" fg:w="2"/><text x="100.0046%" y="1423.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::run_stx_transfer (1 samples, 0.12%)</title><rect x="99.8773%" y="1397" width="0.1227%" height="15" fill="rgb(216,64,54)" fg:x="814" fg:w="1"/><text x="100.1273%" y="1407.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::with_abort_callback (1 samples, 0.12%)</title><rect x="99.8773%" y="1381" width="0.1227%" height="15" fill="rgb(217,54,24)" fg:x="814" fg:w="1"/><text x="100.1273%" y="1391.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::with_abort_callback::{{closure}} (1 samples, 0.12%)</title><rect x="99.8773%" y="1365" width="0.1227%" height="15" fill="rgb(208,206,53)" fg:x="814" fg:w="1"/><text x="100.1273%" y="1375.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::with_abort_callback::{{closure}}::{{closure}} (1 samples, 0.12%)</title><rect x="99.8773%" y="1349" width="0.1227%" height="15" fill="rgb(251,74,39)" fg:x="814" fg:w="1"/><text x="100.1273%" y="1359.50"></text></g><g><title>blockstack_lib::clarity_vm::clarity::ClarityTransactionConnection::run_stx_transfer::{{closure}} (1 samples, 0.12%)</title><rect x="99.8773%" y="1333" width="0.1227%" height="15" fill="rgb(226,47,5)" fg:x="814" fg:w="1"/><text x="100.1273%" y="1343.50"></text></g><g><title>blockstack_lib::vm::contexts::OwnedEnvironment::stx_transfer (1 samples, 0.12%)</title><rect x="99.8773%" y="1317" width="0.1227%" height="15" fill="rgb(234,111,33)" fg:x="814" fg:w="1"/><text x="100.1273%" y="1327.50"></text></g><g><title>blockstack_lib::vm::contexts::OwnedEnvironment::execute_in_env (1 samples, 0.12%)</title><rect x="99.8773%" y="1301" width="0.1227%" height="15" fill="rgb(251,14,10)" fg:x="814" fg:w="1"/><text x="100.1273%" y="1311.50"></text></g><g><title>blockstack_lib::vm::contexts::OwnedEnvironment::stx_transfer::{{closure}} (1 samples, 0.12%)</title><rect x="99.8773%" y="1285" width="0.1227%" height="15" fill="rgb(232,43,0)" fg:x="814" fg:w="1"/><text x="100.1273%" y="1295.50"></text></g><g><title>blockstack_lib::vm::contexts::Environment::stx_transfer (1 samples, 0.12%)</title><rect x="99.8773%" y="1269" width="0.1227%" height="15" fill="rgb(222,68,43)" fg:x="814" fg:w="1"/><text x="100.1273%" y="1279.50"></text></g><g><title>blockstack_lib::vm::functions::assets::stx_transfer_consolidated (1 samples, 0.12%)</title><rect x="99.8773%" y="1253" width="0.1227%" height="15" fill="rgb(217,24,23)" fg:x="814" fg:w="1"/><text x="100.1273%" y="1263.50"></text></g><g><title>blockstack_lib::vm::database::structures::STXBalanceSnapshot::transfer_to (1 samples, 0.12%)</title><rect x="99.8773%" y="1237" width="0.1227%" height="15" fill="rgb(229,209,14)" fg:x="814" fg:w="1"/><text x="100.1273%" y="1247.50"></text></g><g><title>blockstack_lib::vm::database::clarity_db::ClarityDatabase::get (1 samples, 0.12%)</title><rect x="99.8773%" y="1221" width="0.1227%" height="15" fill="rgb(250,149,48)" fg:x="814" fg:w="1"/><text x="100.1273%" y="1231.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get (1 samples, 0.12%)</title><rect x="99.8773%" y="1205" width="0.1227%" height="15" fill="rgb(210,120,37)" fg:x="814" fg:w="1"/><text x="100.1273%" y="1215.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.12%)</title><rect x="99.8773%" y="1189" width="0.1227%" height="15" fill="rgb(210,21,8)" fg:x="814" fg:w="1"/><text x="100.1273%" y="1199.50"></text></g><g><title>blockstack_lib::vm::database::key_value_wrapper::RollbackWrapper::get::{{closure}} (1 samples, 0.12%)</title><rect x="99.8773%" y="1173" width="0.1227%" height="15" fill="rgb(243,145,7)" fg:x="814" fg:w="1"/><text x="100.1273%" y="1183.50"></text></g><g><title>&lt;blockstack_lib::clarity_vm::database::marf::WritableMarfStore as blockstack_lib::vm::database::clarity_store::ClarityBackingStore&gt;::get (1 samples, 0.12%)</title><rect x="99.8773%" y="1157" width="0.1227%" height="15" fill="rgb(238,178,32)" fg:x="814" fg:w="1"/><text x="100.1273%" y="1167.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get (1 samples, 0.12%)</title><rect x="99.8773%" y="1141" width="0.1227%" height="15" fill="rgb(222,4,10)" fg:x="814" fg:w="1"/><text x="100.1273%" y="1151.50"></text></g><g><title>&lt;blockstack_lib::chainstate::stacks::index::marf::MarfTransaction&lt;T&gt; as blockstack_lib::chainstate::stacks::index::marf::MarfConnection&lt;T&gt;&gt;::with_conn (1 samples, 0.12%)</title><rect x="99.8773%" y="1125" width="0.1227%" height="15" fill="rgb(239,7,37)" fg:x="814" fg:w="1"/><text x="100.1273%" y="1135.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MarfConnection::get::{{closure}} (1 samples, 0.12%)</title><rect x="99.8773%" y="1109" width="0.1227%" height="15" fill="rgb(215,31,37)" fg:x="814" fg:w="1"/><text x="100.1273%" y="1119.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_by_key (1 samples, 0.12%)</title><rect x="99.8773%" y="1093" width="0.1227%" height="15" fill="rgb(224,83,33)" fg:x="814" fg:w="1"/><text x="100.1273%" y="1103.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::get_path (1 samples, 0.12%)</title><rect x="99.8773%" y="1077" width="0.1227%" height="15" fill="rgb(239,55,3)" fg:x="814" fg:w="1"/><text x="100.1273%" y="1087.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::marf::MARF&lt;T&gt;::walk (1 samples, 0.12%)</title><rect x="99.8773%" y="1061" width="0.1227%" height="15" fill="rgb(247,92,11)" fg:x="814" fg:w="1"/><text x="100.1273%" y="1071.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie::Trie::walk_from (1 samples, 0.12%)</title><rect x="99.8773%" y="1045" width="0.1227%" height="15" fill="rgb(239,200,7)" fg:x="814" fg:w="1"/><text x="100.1273%" y="1055.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::storage::TrieStorageConnection&lt;T&gt;::read_nodetype (1 samples, 0.12%)</title><rect x="99.8773%" y="1029" width="0.1227%" height="15" fill="rgb(227,115,8)" fg:x="814" fg:w="1"/><text x="100.1273%" y="1039.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::trie_sql::read_node_type (1 samples, 0.12%)</title><rect x="99.8773%" y="1013" width="0.1227%" height="15" fill="rgb(215,189,27)" fg:x="814" fg:w="1"/><text x="100.1273%" y="1023.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype (1 samples, 0.12%)</title><rect x="99.8773%" y="997" width="0.1227%" height="15" fill="rgb(251,216,39)" fg:x="814" fg:w="1"/><text x="100.1273%" y="1007.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_nodetype_at_head (1 samples, 0.12%)</title><rect x="99.8773%" y="981" width="0.1227%" height="15" fill="rgb(207,29,47)" fg:x="814" fg:w="1"/><text x="100.1273%" y="991.50"></text></g><g><title>blockstack_lib::chainstate::stacks::index::bits::read_hash_bytes (1 samples, 0.12%)</title><rect x="99.8773%" y="965" width="0.1227%" height="15" fill="rgb(210,71,34)" fg:x="814" fg:w="1"/><text x="100.1273%" y="975.50"></text></g><g><title>std::io::Read::read_exact (1 samples, 0.12%)</title><rect x="99.8773%" y="949" width="0.1227%" height="15" fill="rgb(253,217,51)" fg:x="814" fg:w="1"/><text x="100.1273%" y="959.50"></text></g><g><title>std::io::default_read_exact (1 samples, 0.12%)</title><rect x="99.8773%" y="933" width="0.1227%" height="15" fill="rgb(222,117,46)" fg:x="814" fg:w="1"/><text x="100.1273%" y="943.50"></text></g><g><title>&lt;rusqlite::blob::Blob as std::io::Read&gt;::read (1 samples, 0.12%)</title><rect x="99.8773%" y="917" width="0.1227%" height="15" fill="rgb(226,132,6)" fg:x="814" fg:w="1"/><text x="100.1273%" y="927.50"></text></g><g><title>sqlite3_blob_read (1 samples, 0.12%)</title><rect x="99.8773%" y="901" width="0.1227%" height="15" fill="rgb(254,145,51)" fg:x="814" fg:w="1"/><text x="100.1273%" y="911.50"></text></g><g><title>blobReadWrite (1 samples, 0.12%)</title><rect x="99.8773%" y="885" width="0.1227%" height="15" fill="rgb(231,199,27)" fg:x="814" fg:w="1"/><text x="100.1273%" y="895.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="99.8773%" y="869" width="0.1227%" height="15" fill="rgb(245,158,14)" fg:x="814" fg:w="1"/><text x="100.1273%" y="879.50"></text></g><g><title>sqlite3BtreePayloadChecked (1 samples, 0.12%)</title><rect x="99.8773%" y="853" width="0.1227%" height="15" fill="rgb(240,113,14)" fg:x="814" fg:w="1"/><text x="100.1273%" y="863.50"></text></g><g><title>accessPayload (1 samples, 0.12%)</title><rect x="99.8773%" y="837" width="0.1227%" height="15" fill="rgb(210,20,13)" fg:x="814" fg:w="1"/><text x="100.1273%" y="847.50"></text></g><g><title>getOverflowPage (1 samples, 0.12%)</title><rect x="99.8773%" y="821" width="0.1227%" height="15" fill="rgb(241,144,13)" fg:x="814" fg:w="1"/><text x="100.1273%" y="831.50"></text></g><g><title>btreeGetPage (1 samples, 0.12%)</title><rect x="99.8773%" y="805" width="0.1227%" height="15" fill="rgb(235,43,34)" fg:x="814" fg:w="1"/><text x="100.1273%" y="815.50"></text></g><g><title>sqlite3PagerGet (1 samples, 0.12%)</title><rect x="99.8773%" y="789" width="0.1227%" height="15" fill="rgb(208,36,20)" fg:x="814" fg:w="1"/><text x="100.1273%" y="799.50"></text></g><g><title>getPageMMap (1 samples, 0.12%)</title><rect x="99.8773%" y="773" width="0.1227%" height="15" fill="rgb(239,204,10)" fg:x="814" fg:w="1"/><text x="100.1273%" y="783.50"></text></g><g><title>getPageNormal (1 samples, 0.12%)</title><rect x="99.8773%" y="757" width="0.1227%" height="15" fill="rgb(217,84,43)" fg:x="814" fg:w="1"/><text x="100.1273%" y="767.50"></text></g><g><title>readDbPage (1 samples, 0.12%)</title><rect x="99.8773%" y="741" width="0.1227%" height="15" fill="rgb(241,170,50)" fg:x="814" fg:w="1"/><text x="100.1273%" y="751.50"></text></g><g><title>sqlite3OsRead (1 samples, 0.12%)</title><rect x="99.8773%" y="725" width="0.1227%" height="15" fill="rgb(226,205,29)" fg:x="814" fg:w="1"/><text x="100.1273%" y="735.50"></text></g><g><title>unixRead (1 samples, 0.12%)</title><rect x="99.8773%" y="709" width="0.1227%" height="15" fill="rgb(233,113,1)" fg:x="814" fg:w="1"/><text x="100.1273%" y="719.50"></text></g><g><title>seekAndRead (1 samples, 0.12%)</title><rect x="99.8773%" y="693" width="0.1227%" height="15" fill="rgb(253,98,13)" fg:x="814" fg:w="1"/><text x="100.1273%" y="703.50"></text></g><g><title>read (1 samples, 0.12%)</title><rect x="99.8773%" y="677" width="0.1227%" height="15" fill="rgb(211,115,12)" fg:x="814" fg:w="1"/><text x="100.1273%" y="687.50"></text></g></svg></svg>